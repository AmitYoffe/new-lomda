{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:C:\\Users\\user\\Downloads\\new-lomda-master (1)\\new-lomda-master\\node_modules\\@remix-run\\css-bundle\\dist\\index.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/theme.ts", "../app/routes/lessons.$topicId.$lessonId.tsx", "../app/LessonComponents/DataGrid.tsx", "../app/components/SideBar.tsx", "../app/utils/prisma.server.ts", "../app/utils/question.server.ts", "../app/routes/lessons.$topicId.tsx", "../app/utils/lesson.server.ts", "../app/routes/lesson-factory.tsx", "../app/LessonComponents/HierarchyCreation/NewLesson.tsx", "../app/LessonComponents/HierarchyCreation/NewTopic.tsx", "../app/LessonComponents/Lists/LessonList.tsx", "../app/LessonComponents/Lists/TopicList.tsx", "../app/utils/topic.server.ts", "../app/routes/lessons.tsx", "../app/routes/index.tsx", "../app/components/UserGreetings.tsx", "../app/routes/learn.tsx", "../app/components/Svgs.tsx", "../app/utils/units.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v1.19.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n      request,\n      responseStatusCode,\n      responseHeaders,\n      remixContext\n    )\n    : handleBrowserRequest(\n      request,\n      responseStatusCode,\n      responseHeaders,\n      remixContext\n    );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport { theme } from \"./theme\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { prefixer } from 'stylis';\nimport indexStyle from \"~/index.css\";\n\n// Create rtl cache\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [prefixer, rtlPlugin]\n});\n\nexport const links: LinksFunction = () => [\n...(cssBundleHref ? [\n{ rel: \"stylesheet\", href: cssBundleHref }] :\n\n[]),\n{ rel: \"stylesheet\", href: indexStyle }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"he\" dir=\"rtl\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body style={{ overflowY: 'hidden' }}>\n        <CacheProvider value={cacheRtl}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Outlet />\n          </ThemeProvider>\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </CacheProvider>\n      </body>\n    </html>);\n\n}", "import { createTheme } from '@mui/material/styles';\n// import heroImage from '~/images/\u05E8\u05E1\u05D0\u05DF_\u05E2\u05DC\u05D9\u05D0\u05DF.jpg'\n// import AmaticWoff2 from '~/fonts/amatic-sc-v24-hebrew_latin-regular.woff2'\nimport HeeboWoff2 from '~/fonts/heebo-v21-hebrew_latin-regular.woff2'\nexport const theme = createTheme({\n    direction: 'rtl',\n    palette: {\n        mode: 'dark',\n        // primary: {\n        //     main: '#'\n        // },\n        background: {\n            // default: \"#efefef\",\n            // default: \"#f2f8ff\",\n            // paper: 'rgba(245, 247, 250, 0.5)',\n        },\n        // primary: {\n        //     main: '#23272F'\n        // },\n    },\n    typography: {\n        fontFamily: [\n            'heebo', 'san-serif',\n            'arial', 'sans-serif'\n            // 'Amatic SC', 'normal'\n        ].join(','),\n    },\n    components: {\n        MuiPaper: {\n            defaultProps: {\n                elevation: 4\n            }\n        },\n        MuiCssBaseline: {\n            styleOverrides: {\n                \"@font-face\": {\n                    fontDisplay: 'swap',\n                    fontFamily: 'Heebo',\n                    fontStyle: 'normal',\n                    fontWeight: 200,\n                    src: `url(${HeeboWoff2}) format('woff2')`\n                },\n                // \"@font-face\": {\n                //     fontDisplay: 'swap',\n                //     fontFamily: 'Amatic SC',\n                //     fontStyle: 'normal',\n                //     fontWeight: 400,\n                //     src: `url(${AmaticWoff2}) format('woff2')`\n                // },\n                \":root\": {\n                },\n                body: {\n                    '& ::-webkit-scrollbar': {\n                        width: '20px'\n                    },\n                    '& ::-webkit-scrollbar-track': {\n                        backgroundColor: 'transparent'\n                    },\n                    '& ::-webkit-scrollbar-thumb': {\n                        backgroundColor: '#d6dee1',\n                        borderRadius: '20px',\n                        border: '6px solid transparent',\n                        backgroundClip: 'content-box'\n                    },\n                    '& ::-webkit-scrollbar-thumb:hover': {\n                        backgroundColor: '#a8bbbf'\n                    },\n                    // width: '100%', height: '100%'\n                }\n            }\n        }\n    }\n});", "import type { GridColDef } from '@mui/x-data-grid';\r\nimport type { LoaderArgs } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport FullFeaturedCrudGrid from '~/LessonComponents/DataGrid';\r\nimport { getQuestionsByLessonId } from '~/utils/question.server';\r\n\r\nexport async function loader({ params }: LoaderArgs) {\r\n  const { lessonId } = params\r\n  const questions = await getQuestionsByLessonId(Number(lessonId))\r\n\r\n  return { questions }\r\n}\r\n\r\nexport default function QuestionList() {\r\n  const { questions } = useLoaderData();\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: 'text', headerName: '\u05E9\u05DD \u05E9\u05D0\u05DC\u05D4', width: 180, editable: true },\r\n    { field: 'updatedAt', headerName: '\u05E0\u05E2\u05E8\u05DA \u05DC\u05D0\u05D7\u05E8\u05D5\u05E0\u05D4', width: 180, editable: false },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <FullFeaturedCrudGrid editable rows={questions} setRows={(oldRows) => { }} columnProps={columns} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport CancelIcon from '@mui/icons-material/Close';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport Box from '@mui/material/Box';\r\nimport type {\r\n    GridColDef,\r\n    GridEventListener,\r\n    GridRowId,\r\n    GridRowModel,\r\n    GridRowModesModel\r\n} from '@mui/x-data-grid';\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridRowEditStopReasons,\r\n    GridRowModes\r\n} from '@mui/x-data-grid';\r\nimport { } from '@mui/x-data-grid-generator';\r\nimport { Link } from '@remix-run/react';\r\nimport * as React from 'react';\r\nimport { SideBar } from '~/components/SideBar';\r\n\r\ninterface IDataGridProps {\r\n    editable?: true;\r\n    rows: any[];\r\n    setRows: (...args: any[]) => void;\r\n    columnProps: GridColDef[];\r\n}\r\n\r\n\r\nexport default function FullFeaturedCrudGrid({ rows, setRows, editable, columnProps }: IDataGridProps) {\r\n    const [rowModesModel, setRowModesModel] = React.useState<GridRowModesModel>({});\r\n\r\n    const handleRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\r\n        if (params.reason === GridRowEditStopReasons.rowFocusOut) {\r\n            event.defaultMuiPrevented = true;\r\n        }\r\n    };\r\n\r\n    const handleEditClick = (id: GridRowId) => () => {\r\n        setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.Edit } });\r\n    };\r\n\r\n    const handleSaveClick = (id: GridRowId) => () => {\r\n        setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } });\r\n    };\r\n\r\n    const handleDeleteClick = (id: GridRowId) => () => {\r\n        setRows(rows.filter((row) => row.id !== id));\r\n    };\r\n\r\n    const handleCancelClick = (id: GridRowId) => () => {\r\n        setRowModesModel({\r\n            ...rowModesModel,\r\n            [id]: { mode: GridRowModes.View, ignoreModifications: true },\r\n        });\r\n\r\n        const editedRow = rows.find((row) => row.id === id);\r\n        if (editedRow!.isNew) {\r\n            setRows(rows.filter((row) => row.id !== id));\r\n        }\r\n    };\r\n\r\n    const processRowUpdate = (newRow: GridRowModel) => {\r\n        const updatedRow = { ...newRow, isNew: false };\r\n        setRows(rows.map((row) => (row.id === newRow.id ? updatedRow : row)));\r\n        return updatedRow;\r\n    };\r\n\r\n    const handleRowModesModelChange = (newRowModesModel: GridRowModesModel) => {\r\n        setRowModesModel(newRowModesModel);\r\n    };\r\n\r\n    const columns: GridColDef[] = [\r\n        ...columnProps,\r\n        {\r\n            field: 'actions',\r\n            type: 'actions',\r\n            headerName: '\u05E4\u05E2\u05D5\u05DC\u05D5\u05EA',\r\n            width: 100,\r\n            cellClassName: 'actions',\r\n            getActions: ({ id }) => {\r\n                const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit;\r\n\r\n                if (isInEditMode) {\r\n                    return [\r\n                        <GridActionsCellItem\r\n                            key='Save'\r\n                            icon={<SaveIcon />}\r\n                            label=\"Save\"\r\n                            sx={{\r\n                                color: 'primary.main',\r\n                            }}\r\n                            onClick={handleSaveClick(id)}\r\n                        />,\r\n                        <GridActionsCellItem\r\n                            key='Cancel'\r\n                            icon={<CancelIcon />}\r\n                            label=\"Cancel\"\r\n                            className=\"textPrimary\"\r\n                            onClick={handleCancelClick(id)}\r\n                            color=\"inherit\"\r\n                        />,\r\n                    ];\r\n                }\r\n\r\n                return editable ? [\r\n                    <GridActionsCellItem\r\n                        key='Edit'\r\n                        icon={<EditIcon />}\r\n                        label=\"Edit\"\r\n                        className=\"textPrimary\"\r\n                        onClick={handleEditClick(id)}\r\n                        color=\"inherit\"\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        key='Delete'\r\n                        icon={<DeleteIcon />}\r\n                        label=\"Delete\"\r\n                        onClick={handleDeleteClick(id)}\r\n                        color=\"inherit\"\r\n                    />,\r\n                ] : [<GridActionsCellItem\r\n                    key='Delete'\r\n                    icon={<DeleteIcon />}\r\n                    label=\"Delete\"\r\n                    onClick={handleDeleteClick(id)}\r\n                    color=\"inherit\"\r\n                />,];\r\n            },\r\n        },\r\n        {\r\n            field: 'navigation',\r\n            type: 'actions',\r\n            headerName: '',\r\n            width: 100,\r\n            cellClassName: 'actions',\r\n            getActions: ({ id }) => {\r\n\r\n                return [\r\n                    <GridActionsCellItem\r\n                        key={'navigation'}\r\n                        icon={\r\n                            <Box component={Link} to={id.toString()} sx={{ color: 'inherit', textDecoration: 'none' }}>\r\n                                <ArrowBackIosNewIcon />\r\n                            </Box>\r\n                        }\r\n                        label=\"Edit\"\r\n                        className=\"textPrimary\"\r\n                        color=\"inherit\"\r\n                    />\r\n                ]\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                width: 'full',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                paddingX: 4,\r\n                paddingY: 16,\r\n            }}\r\n        >\r\n            <Box sx={{\r\n                position: 'fixed', top: 0, left: 0, height: '100%'\r\n            }}>\r\n                <SideBar selectedTab={\"\u05DE\u05E4\u05E2\u05DC \u05D4\u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD\"} />\r\n            </Box>\r\n            <Box sx={{\r\n                display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '1920px',\r\n            }}>\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    editMode=\"row\"\r\n                    rowModesModel={rowModesModel}\r\n                    onRowModesModelChange={handleRowModesModelChange}\r\n                    onRowEditStop={handleRowEditStop}\r\n                    processRowUpdate={processRowUpdate}\r\n                    slotProps={{\r\n                        toolbar: { setRows, setRowModesModel },\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}", "import type { ComponentProps } from \"react\";\nimport { useState } from \"react\";\nimport { Box, Button, Link, Paper, Switch, Typography } from \"@mui/material\";\nimport orevIconSrc from 'public/images/orev-icon-portrait.png'\n\ntype SideBarItems = {\n  name: Tab;\n  href: string;\n  icon: JSX.Element;\n};\n\ntype Tab = \"\u05DC\u05DE\u05D9\u05D3\u05D4\" | \"\u05DE\u05E4\u05E2\u05DC \u05D4\u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD\" | \"\u05E4\u05E8\u05D5\u05E4\u05D9\u05DC\";\n\nconst sideBarItems: SideBarItems[] = [\n  {\n    name: \"\u05DC\u05DE\u05D9\u05D3\u05D4\",\n    href: \"/learn\",\n    icon: (\n      <svg\n        width=\"46\"\n        height=\"46\"\n        viewBox=\"0 0 32 32\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M24.5852 25.2658C24.2883 26.8243 22.9257 27.9519 21.3392 27.9519H10.6401C9.05354 27.9519 7.69094 26.8243 7.39408 25.2658L4.98096 12.5969L15.9001 4.52225L26.9988 12.5941L24.5852 25.2658Z\"\n          fill=\"#FFC800\"\n        />\n        <path\n          opacity=\"0.5\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M13.1558 23.1111C13.1558 22.522 13.6333 22.0444 14.2224 22.0444H18.4891C19.0782 22.0444 19.5558 22.522 19.5558 23.1111C19.5558 23.7002 19.0782 24.1778 18.4891 24.1778H14.2224C13.6333 24.1778 13.1558 23.7002 13.1558 23.1111Z\"\n          fill=\"#945151\"\n        />\n        <path\n          d=\"M19.4785 16.2998C19.4785 18.2208 17.9212 19.778 16.0002 19.778C14.0792 19.778 12.522 18.2208 12.522 16.2998C12.522 14.3788 14.0792 12.8215 16.0002 12.8215C17.9212 12.8215 19.4785 14.3788 19.4785 16.2998Z\"\n          fill=\"#945151\"\n        />\n        <path\n          d=\"M16.1685 2.84462C16.6431 2.84231 17.1233 2.98589 17.5361 3.28558L17.5368 3.2861L29.9455 12.2319C30.9781 12.9822 31.207 14.4275 30.4568 15.4601C29.7067 16.4924 28.262 16.7215 27.2294 15.9719L27.2286 15.9714L16.1602 7.99185L5.09208 15.9712L5.09121 15.9719C4.05865 16.7213 2.61395 16.4923 1.86391 15.4599C1.11367 14.4273 1.34258 12.982 2.3752 12.2318L2.37679 12.2306L14.7839 3.28596L14.7846 3.28544C15.2022 2.98229 15.6887 2.83889 16.1685 2.84462Z\"\n          fill=\"#FF4B4B\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: \"\u05E4\u05E8\u05D5\u05E4\u05D9\u05DC\",\n    href: \"/profile\",\n    icon: (\n      <svg\n        width=\"46\"\n        height=\"46\"\n        viewBox=\"0 0 46 46\"\n        fill=\"none\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M23.1826 5.00195C14.3461 5.00195 7.18262 12.1654 7.18262 21.002V21.9375C4.21918 23.4102 2.18262 26.4682 2.18262 30.002C2.18262 34.9725 6.21206 39.002 11.1826 39.002H35.1826C40.1532 39.002 44.1826 34.9725 44.1826 30.002C44.1826 26.4682 42.1461 23.4102 39.1826 21.9375V21.002C39.1826 12.1654 32.0192 5.00195 23.1826 5.00195Z\"\n          fill=\"#9069CD\"\n        />\n        <path\n          d=\"M11.1826 21.002C11.1826 14.3745 16.5552 9.00195 23.1826 9.00195C29.81 9.00195 35.1826 14.3745 35.1826 21.002V29.002C35.1826 35.6294 29.81 41.002 23.1826 41.002C16.5552 41.002 11.1826 35.6294 11.1826 29.002V21.002Z\"\n          fill=\"#F3AD6D\"\n        />\n        <path\n          d=\"M7.18262 24.502C7.18262 22.0167 9.19734 20.002 11.6826 20.002H34.6826C37.1679 20.002 39.1826 22.0167 39.1826 24.502C39.1826 26.9872 37.1679 29.002 34.6826 29.002H11.6826C9.19734 29.002 7.18262 26.9872 7.18262 24.502Z\"\n          fill=\"#F3AD6D\"\n        />\n        <path\n          d=\"M18.1826 20.502C18.1826 19.6735 18.8542 19.002 19.6826 19.002C20.511 19.002 21.1826 19.6735 21.1826 20.502V24.502C21.1826 25.3304 20.511 26.002 19.6826 26.002C18.8542 26.002 18.1826 25.3304 18.1826 24.502V20.502Z\"\n          fill=\"#BF8034\"\n        />\n        <path\n          d=\"M24.1826 20.502C24.1826 19.6735 24.8542 19.002 25.6826 19.002C26.511 19.002 27.1826 19.6735 27.1826 20.502V24.502C27.1826 25.3304 26.511 26.002 25.6826 26.002C24.8542 26.002 24.1826 25.3304 24.1826 24.502V20.502Z\"\n          fill=\"#BF8034\"\n        />\n        <path\n          d=\"M17.1826 29.0445C17.1826 28.4687 17.6494 28.002 18.2252 28.002H27.1401C27.7159 28.002 28.1826 28.4687 28.1826 29.0445V29.502C28.1826 32.5395 25.7202 35.002 22.6826 35.002C19.6451 35.002 17.1826 32.5395 17.1826 29.502V29.0445Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M7.18262 21.0062V21.002C7.18262 12.1654 14.3461 5.00195 23.1826 5.00195C26.0199 5.00195 28.6847 5.74049 30.9953 7.0358C29.7326 15.5 22.2386 22.002 13.1826 22.002C11.0788 22.002 9.05929 21.6511 7.18262 21.0062Z\"\n          fill=\"#9069CD\"\n        />\n      </svg>\n    ),\n  },\n  {\n    //TODO: if user role is admin ONLY!\n    name: \"\u05DE\u05E4\u05E2\u05DC \u05D4\u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD\",\n    href: \"/lesson-factory\",\n    icon: (\n      <svg\n        width=\"44\"\n        height=\"44\"\n        viewBox=\"0 0 512 512\"\n        fill=\"none\"\n      >\n        <path style={{ fill: '#792A18' }} d=\"M478.242,71.455h-67.517l33.758,360.088h33.758c18.644,0,33.758-15.115,33.758-33.758V105.213 C512,86.57,496.885,71.455,478.242,71.455z\" />\n        <path style={{ fill: '#95341D' }} d=\"M210.989,70.33L256,464.176c18.645,0,33.758-15.114,33.758-33.758h154.725V70.33H210.989z\" />\n        <path style={{ fill: '#AB5D4A' }} d=\"M33.758,70.33C15.115,70.33,0,85.444,0,104.088v292.571c0,18.644,15.115,33.758,33.758,33.758 h188.484c0,18.645,15.114,33.758,33.758,33.758V70.33H33.758z\" />\n        <polygon style={{ fill: '#A99E9B' }} points=\"421.978,340.396 433.231,396.659 478.242,396.659 478.242,362.901 \" />\n        <path style={{ fill: '#C1B8B5' }} d=\"M233.495,340.396L256,422.537v7.88c0-18.567,15.191-33.758,33.758-33.758h141.785v-56.264H233.495z\" />\n        <path style={{ fill: '#D8D1D0' }} d=\"M33.758,362.901v33.758h188.484c18.567,0,33.758,15.191,33.758,33.758V329.143L33.758,362.901z\" />\n        <polygon style={{ fill: '#E26142' }} points=\"391.066,475.429 417.775,464.176 444.484,475.429 444.484,340.396 391.066,340.396 \" />\n        <polygon style={{ fill: '#C1B8B5' }} points=\"433.231,36.571 399.473,199.736 433.231,362.901 478.242,362.901 478.242,36.571 \" />\n        <path style={{ fill: '#D8D1D0' }} d=\"M289.758,36.571C271.191,36.571,256,51.763,256,70.33l-33.758,163.165L256,388.782v7.877 c0-18.567,15.191-33.758,33.758-33.758h143.473V247.557l-22.506-71.734l22.506-71.735V36.571H289.758z\" />\n        <path style={{ fill: '#F0EBEA' }} d=\"M222.242,36.571H33.758v326.33h188.484c18.567,0,33.758,15.191,33.758,33.758V70.33 C256,51.763,240.809,36.571,222.242,36.571z\" />\n        <rect x=\"301.011\" y=\"104.088\" style={{ fill: '#FFFFFF' }} width=\"132.22\" height=\"143.473\" />\n        <g>\n          <path style={{ fill: '#7F7774' }} d=\"M210.989,303.824H78.769c-4.662,0-8.44-3.778-8.44-8.44c0-4.662,3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44C219.429,300.047,215.651,303.824,210.989,303.824z\" />\n          <path style={{ fill: '#7F7774' }} d=\"M210.989,256H78.769c-4.662,0-8.44-3.778-8.44-8.44s3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44S215.651,256,210.989,256z\" />\n          <path style={{ fill: '#7F7774' }} d=\"M210.989,208.176H78.769c-4.662,0-8.44-3.778-8.44-8.44s3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44S215.651,208.176,210.989,208.176z\" />\n          <path style={{ fill: '#7F7774' }} d=\"M210.989,160.352H78.769c-4.662,0-8.44-3.778-8.44-8.44s3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44S215.651,160.352,210.989,160.352z\" />\n          <path style={{ fill: '#7F7774' }} d=\"M210.989,112.527H78.769c-4.662,0-8.44-3.778-8.44-8.44c0-4.662,3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44C219.429,108.75,215.651,112.527,210.989,112.527z\" />\n        </g>\n        <path style={{ fill: '#554F4E' }} d=\"M433.231,303.824h-132.22c-4.662,0-8.44-3.778-8.44-8.44c0-4.662,3.778-8.44,8.44-8.44h132.22 c4.662,0,8.44,3.778,8.44,8.44C441.67,300.047,437.893,303.824,433.231,303.824z\" />\n      </svg >\n    ),\n  },\n  // maybe add in the future a settings page about page and so on\n];\n\nconst LeftBarMoreMenuSvg = (props: ComponentProps<'svg'>) => {\n  return (\n    <svg width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\" {...props}>\n      <circle\n        cx=\"23\"\n        cy=\"23\"\n        r=\"19\"\n        fill=\"#CE82FF\"\n        stroke=\"#CE82FF\"\n        strokeWidth=\"2\"\n      />\n      <circle cx=\"15\" cy=\"23\" r=\"2\" fill=\"white\" />\n      <circle cx=\"23\" cy=\"23\" r=\"2\" fill=\"white\" />\n      <circle cx=\"31\" cy=\"23\" r=\"2\" fill=\"white\" />\n    </svg>\n  );\n};\n\nexport const SideBar = ({ selectedTab }: { selectedTab: Tab | null }) => {\n\n  const [moreMenuShown, setMoreMenuShown] = useState(false);\n  const [isDarkModeChecked, setisDarkModeChecked] = useState(false);\n\n  const handleChange = () => {\n    setisDarkModeChecked((prevChecked) => !prevChecked);\n  };\n\n  return (\n    <>\n      <Box sx={{\n        right: 0,\n        top: 0,\n        width: '230px',\n        height: '100%',\n        backgroundColor: '#f0dfbf',\n        zIndex: 2,\n      }}>\n        <Box sx={{\n          display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingTop: 1,\n          height: '80px', borderBottom: '2px solid #e5e5e5'\n        }}>\n          <Typography sx={{\n            fontSize: '1.7rem', fontWeight: '900', color: 'orange', wordWrap: 'break-word', width: '120px', textAlign: 'left', paddingLeft: 4,\n          }}>\n            \u05DC\u05D5\u05DE\u05D3\u05EA \u05E2\u05D5\u05E8\u05D1\n          </Typography>\n          <Link href=\"/\" sx={{ paddingLeft: 2, margin: 'auto' }}>\n            <img src={orevIconSrc} alt=\"orev logo\" width={'78px'} height={'78px'} />\n          </Link>\n        </Box>\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n          {sideBarItems.map((item) => (\n            <Box key={item.href} >\n              <Link\n                href={item.href}\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  paddingY: '0.25rem',\n                  gap: '1rem',\n                  alignItems: 'center',\n                  border: '2px solid #e5e5e5',\n                  borderRadius: '0.75rem',\n                  fontSize: '0.875rem',\n                  textDecoration: 'none',\n                  color: '#9CA3AF',\n                  '&:hover': { backgroundColor: '#F3F4e6' },\n                  ...(selectedTab === item.name\n                    ? {\n                      borderColor: '#84d8ff',\n                      background: '#ddf4ff',\n                    }\n                    : {}),\n                }}\n              >\n                {item.icon}\n                <Typography>\n                  {item.name}\n                </Typography>\n              </Link>\n            </Box>\n          ))}\n          <Box\n            sx={{\n              display: \"flex\", paddingY: \"0.25rem\", paddingX: \"0.5rem\", gap: \"0.75rem\", alignItems: \"center\",\n              borderRadius: \"0.75rem\", color: \"#9CA3AF\", cursor: \"default\", \"&:hover\": { backgroundColor: \"#F3F4e6\" }\n            }}\n            onMouseEnter={() => setMoreMenuShown(true)}\n            onMouseLeave={() => setMoreMenuShown(false)}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {/* More info tab */}\n            <LeftBarMoreMenuSvg />\n            <Typography sx={{ fontSize: \"1rem\", }}>\u05DC\u05E2\u05D5\u05D3</Typography>\n            <Paper\n              sx={{\n                position: \"absolute\",\n                top: 250,\n                left: 220,\n                minWidth: '270px',\n                borderRadius: \"2xl\",\n                display: moreMenuShown ? \"block\" : \"none\",\n                \"&:hover\": {\n                  display: \"block\",\n                },\n              }}\n              onMouseEnter={() => setMoreMenuShown(true)}\n              onMouseLeave={() => setMoreMenuShown(false)}\n            >\n              <Box sx={{\n                display: 'flex', flexDirection: \"column\", borderColor: \"#D1D5DB\",\n              }}>\n                <Button\n                  sx={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\", textAlign: \"right\", \"&:hover\": { \"backgroundColor\": \"#2e1d02\" } }}\n                // onClick={() => setLoginScreenState(\"SIGNUP\")}\n                >\n                  \u05E6\u05D5\u05E8 \u05E4\u05E8\u05D5\u05E4\u05D9\u05DC\n                </Button>\n                <Button\n                  sx={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\", textAlign: \"right\", \"&:hover\": { \"backgroundColor\": \"#2e1d02\" } }}\n                // href={loggedIn ? \"/settings/account\" : \"/settings/sound\"}\n                >\n                  \u05D4\u05D2\u05D3\u05E8\u05D5\u05EA\n                </Button>\n                <Button\n                  sx={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\", textAlign: \"right\", \"&:hover\": { \"backgroundColor\": \"#2e1d02\" } }}\n                // onClick={() => setLoginScreenState(\"LOGIN\")}\n                >\n                  \u05D4\u05EA\u05D7\u05D1\u05E8\u05D5\u05EA\n                </Button>\n                <Button\n                  sx={{ paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\", textAlign: \"right\", \"&:hover\": { \"backgroundColor\": \"#2e1d02\" } }}\n                // onClick={logOut}\n                >\n                  \u05D4\u05EA\u05E0\u05EA\u05E7\u05D5\u05EA\n                </Button>\n                {/* added state for darkmode, now i need to apply it on different components */}\n                <Box\n                  sx={{\n                    marginTop: \"auto\",\n                    paddingX: 4,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <Typography sx={{ fontSize: \"1rem\", fontWeight: \"normal\" }}>\u05DE\u05E6\u05D1</Typography>\n                    {isDarkModeChecked ? (\n                      <Typography sx={{ color: '#784c06', marginRight: 2, fontWeight: \"medium\" }}>\u05DC\u05D9\u05DC\u05D4</Typography>\n                    ) : (\n                      <Typography sx={{ color: '#ffb238', marginRight: 2, fontWeight: \"medium\" }}>\u05D9\u05D5\u05DD</Typography>\n                    )}\n                  </Box>\n                  <Switch defaultChecked={isDarkModeChecked} color=\"warning\" onChange={handleChange} />\n                </Box>\n              </Box>\n            </Paper>\n          </Box>\n        </Box >\n      </Box >\n    </>\n  );\n};\n", "import { PrismaClient } from '@prisma/client'\n\nlet prisma: PrismaClient\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n  prisma.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  prisma = global.__db\n}\n\nexport { prisma }", "import { prisma } from \"./prisma.server\";\n\nexport async function getQuestions() {\n  return await prisma.question.findMany();\n}\n\nexport async function getQuestionsByLessonId(lessonId: number) {\n  return await prisma.question.findMany({\n    where: {\n      lessonId: lessonId,\n    }\n  });\n}\n", "import type { GridColDef } from '@mui/x-data-grid';\r\nimport type { LoaderArgs } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport FullFeaturedCrudGrid from '~/LessonComponents/DataGrid';\r\nimport { getLessonsByTopicId } from '~/utils/lesson.server';\r\n\r\nexport async function loader({ params }: LoaderArgs) {\r\n  const { topicId } = params\r\n  const lessons = await getLessonsByTopicId(Number(topicId))\r\n  const lessonsWithQuestionsCount = lessons.map((lesson) => { return { ...lesson, _count: lesson._count.Questions } });\r\n\r\n  return { lessons: lessonsWithQuestionsCount }\r\n}\r\n\r\nexport default function LessonsList() {\r\n  const { lessons } = useLoaderData();\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: 'name', headerName:  '\u05E9\u05DD \u05E9\u05D9\u05E2\u05D5\u05E8', width: 180, editable: true },\r\n    { field: 'updatedAt', headerName: '\u05E0\u05E2\u05E8\u05DA \u05DC\u05D0\u05D7\u05E8\u05D5\u05E0\u05D4', width: 180, editable: false },\r\n    { field: '_count', headerName: '\u05DE\u05E1\u05E4\u05E8 \u05E9\u05D0\u05DC\u05D5\u05EA', width: 180, editable: false },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <FullFeaturedCrudGrid editable rows={lessons} setRows={(oldRows) => { }} columnProps={columns} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n", "import { prisma } from \"./prisma.server\";\n\n\nexport async function getLessonsByTopicId(topicId: number) {\n  return await prisma.lesson.findMany({\n    include: {\n      _count: {\n        select: {\n          Questions: true,\n        }\n      }\n    }\n  });\n}\n\nexport async function getLessons() {\n  return await prisma.lesson.findMany();\n}\n", "import { Box, Link } from \"@mui/material\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport type { Lesson, Question, Topic } from \"@prisma/client\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport React, { useState } from \"react\";\nimport NewLesson from '~/LessonComponents/HierarchyCreation/NewLesson';\nimport NewTopic from \"~/LessonComponents/HierarchyCreation/NewTopic\";\nimport LessonList from \"~/LessonComponents/Lists/LessonList\";\nimport TopicList from \"~/LessonComponents/Lists/TopicList\";\nimport { SideBar } from \"~/components/SideBar\";\nimport { getLessons } from \"~/utils/lesson.server\";\nimport { getQuestions } from \"~/utils/question.server\";\nimport { getTopics } from \"~/utils/topic.server\";\n\ntype LoaderType = {\n  topics: Array<Topic>;\n  lessons: Array<Lesson>;\n  questions: Array<Question>\n}\n\nexport async function loader({ request }: LoaderArgs): Promise<LoaderType> {\n  const topics = await getTopics();\n  const lessons = await getLessons();\n  const questions = await getQuestions();\n  return { topics, lessons, questions }\n}\n\ninterface BreadCrumbsProps {\n  selectedComponent: string;\n  onBreadcrumbClick: (componentName: string) => void;\n}\n\ninterface Breadcrumb {\n  label: string;\n  componentName: string;\n  parent?: Breadcrumb;\n  children?: Breadcrumb[];\n}\n\nconst breadcrumbHierarchy: Breadcrumb[] = [\n  {\n    label: \"\u05E0\u05D5\u05E9\u05D0\", componentName: \"TopicList\",\n    children: [\n      { label: \"\u05D9\u05E6\u05D9\u05E8\u05EA \u05E0\u05D5\u05E9\u05D0\", componentName: \"NewTopic\" },\n      {\n        label: \"\u05E9\u05D9\u05E2\u05D5\u05E8\", componentName: \"LessonList\",\n        children: [\n          { label: \"\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E2\u05D5\u05E8\", componentName: \"NewLesson\" },\n          {\n            label: \"\u05E9\u05D0\u05DC\u05D4\", componentName: \"QuestionList\",\n            children: [{ label: \"\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D0\u05DC\u05D4\", componentName: \"NewQuestion\" }],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n// const getParent = (breadcrumbs: Breadcrumb[], componentName: string): Breadcrumb | undefined => {\n//   for (const breadcrumb of breadcrumbs) {\n//     if (breadcrumb.children) {\n//       const child = breadcrumb.children.find(\n//         (childBreadcrumb) => childBreadcrumb.componentName === componentName\n//       );\n\n//       if (child) {\n//         return breadcrumb;\n//       } else {\n//         const parent = getParent(breadcrumb.children, componentName);\n//         if (parent) {\n//           return parent;\n//         }\n//       }\n//     }\n//   }\n\n//   return undefined;\n// };\n\n// Populate parent property dynamically\nconst populateParentProperty = (breadcrumbs: Breadcrumb[]) => {\n  for (const breadcrumb of breadcrumbs) {\n    if (breadcrumb.children) {\n      for (const child of breadcrumb.children) {\n        child.parent = breadcrumb;\n      }\n      populateParentProperty(breadcrumb.children);\n    }\n  }\n};\n\npopulateParentProperty(breadcrumbHierarchy);\n\nconst BreadCrumbsComponent: React.FC<BreadCrumbsProps> = ({\n  selectedComponent,\n  onBreadcrumbClick,\n}) => {\n  const findBreadcrumb = (breadcrumbs: Breadcrumb[], componentName: string): Breadcrumb | undefined => {\n    for (const breadcrumb of breadcrumbs) {\n      if (breadcrumb.componentName === componentName) {\n        return breadcrumb;\n      }\n      if (breadcrumb.children) {\n        const foundChild = findBreadcrumb(breadcrumb.children, componentName);\n        if (foundChild) {\n          return foundChild;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  const getVisibleBreadcrumbs = (): Breadcrumb[] => {\n    const selectedBreadcrumb = findBreadcrumb(breadcrumbHierarchy, selectedComponent);\n    return selectedBreadcrumb ? [...getAncestors(selectedBreadcrumb), selectedBreadcrumb] : [];\n  };\n\n  const getAncestors = (breadcrumb: Breadcrumb): Breadcrumb[] => {\n    const ancestors: Breadcrumb[] = [];\n    let currentBreadcrumb = breadcrumb;\n\n    while (currentBreadcrumb.parent) {\n      ancestors.unshift(currentBreadcrumb.parent);\n      currentBreadcrumb = currentBreadcrumb.parent;\n    }\n\n    return ancestors;\n  };\n\n  const handleBreadcrumbClick = (breadcrumb: { componentName: string }) => {\n    onBreadcrumbClick(breadcrumb.componentName);\n  };\n\n  return (\n    <Breadcrumbs separator=\"\u203A\" aria-label=\"breadcrumb\" sx={{ color: 'white', cursor: 'pointer' }}>\n      {getVisibleBreadcrumbs().map((breadcrumb, index) => (\n        <Link\n          underline=\"hover\"\n          key={index}\n          color=\"#ffa111\"\n          onClick={() => handleBreadcrumbClick(breadcrumb)}\n        >\n          {breadcrumb.label}\n        </Link>\n      ))}\n    </Breadcrumbs>\n  );\n};\n\nexport default function BuildLesson() {\n  const { topics, lessons, questions } = useLoaderData<LoaderType>()\n  const [selectedComponent, setSelectedComponent] = useState(\"TopicList\");\n  const [selectedTopic, setSelectedTopic] = useState<Topic | undefined>(undefined);\n\n  const handleComponentChange = (componentName: string, selectedTopic?: Topic) => {\n    console.log('Selected Topic:', selectedTopic);\n    setSelectedTopic(selectedTopic)\n    setSelectedComponent(componentName);\n  };\n\n  const handleBreadCrumbClick = (componentName: string) => {\n    setSelectedComponent(componentName);\n  };\n\n  return (\n      <Box\n        sx={{\n          display: 'flex',\n          width: 'full',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: '#235390',\n          paddingX: 4,\n          paddingY: 16,\n        }}\n      >\n        <Box sx={{\n          position: 'fixed', top: 0, left: 0, height: '100%'\n        }}>\n          <SideBar selectedTab={\"\u05DE\u05E4\u05E2\u05DC \u05D4\u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD\"} />\n        </Box>\n        <Box sx={{\n          display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '1920px',\n        }}>\n          <Box sx={{\n            position: 'fixed',\n            top: 3,\n            left: 238,\n          }}>\n            <BreadCrumbsComponent\n              onBreadcrumbClick={handleBreadCrumbClick}\n              selectedComponent={selectedComponent}\n            />\n          </Box>\n          <Box sx={{ width: \"100%\", overflow: \"hidden\", alignItems: 'center', height: '100%' }}>\n            {selectedComponent === \"TopicList\" && (\n              <TopicList\n                onButtonClick={handleComponentChange}\n                dataRow={topics}\n                dataRowChildren={lessons}\n              />\n            )}\n            {selectedComponent === \"NewTopic\" && (\n              <NewTopic onButtonClick={handleComponentChange} />\n            )}\n            {selectedComponent === \"LessonList\" && (\n              <LessonList\n                onButtonClick={handleComponentChange}\n                dataRow={lessons}\n                dataRowChildren={questions}\n                selectedTopic={selectedTopic}\n              />\n            )}\n            {selectedComponent === \"NewLesson\" && (\n              <NewLesson onButtonClick={handleComponentChange} />\n            )}\n            {/* Add more components as needed */}\n          </Box>\n        </Box>\n      </Box>\n    // </ThemeProvider>\n  );\n}\n\n// export async function action({ request }: ActionArgs) {\n//   const formData = await request.formData();\n//   // const userId = 1;\n//   const { _action, ...rest } = Object.fromEntries(formData)\n\n//   switch (_action) {\n//     case 'appClicked': {\n//       const { appId } = rest\n//       // TODO: get real user\n//       const userId = await getUser();\n//       await updateAppClick(Number(appId), userId)\n//       break;\n//     }\n//     case 'dashboardClicked': {\n//       const { dashboardId } = rest\n//       // TODO: get real user\n//       const userId = await getUser();\n//       await updateDashboardClick(Number(dashboardId), userId)\n//       break;\n//     }\n//     case 'createContact': {\n//       const body = rest as never as Contact;\n//       const { formData, errors } = await validationAction<createContactInput>({\n//         body,\n//         schema: createContactSchema,\n//       });\n\n//       if (errors) {\n//         return json({ errors }, { status: 400 });\n//       }\n//       // TODO: get real user\n//       const userId = 1\n//       await createContact(formData as Contact, userId)\n//       break;\n//     }\n//     case 'updateContact': {\n//       const body = rest as never as Contact;\n//       const { formData, errors } = await validationAction<updateContactInput>({\n//         body,\n//         schema: updateContactSchema,\n//       });\n\n//       if (errors) {\n//         return json({ errors }, { status: 400 });\n//       }\n\n//       const { id, ...updatedContact } = formData\n//       // TODO: get real user\n//       const userId = 1\n//       await updateContact(id, updatedContact as Contact, userId)\n//       break;\n//     }\n//     default:\n//       break;\n//   }\n//   return null;\n// }", "import { Box, Button, Link, Paper, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface INewTopic {\n  onButtonClick: (componentName: string) => void;\n}\n\nexport default function NewTopic({ onButtonClick }: INewTopic) {\n  const [isInputEmpty, setIsInputEmpty] = useState(true);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsInputEmpty(event.target.value.trim() === '' && event.target.value.length === 0);\n  }\n\n  const handleCreationButtonClick = () => {\n    // async func that will first add to db, then change state\n    onButtonClick('LessonList');\n  }\n\n  return (\n    <Paper sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      padding: 2,\n    }}>\n      <Box sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        gap: 1,\n        alignItems: 'baseline',\n      }}>\n        <Typography variant=\"h6\">\n          \u05DC\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E2\u05D5\u05E8 \u05D7\u05D3\u05E9:\n        </Typography>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"\u05E9\u05DD \u05D4\u05E9\u05D9\u05E2\u05D5\u05E8\"\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={handleInputChange}\n        />\n      </Box>\n      <Typography sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n      }}>\n        <Box sx={{ marginLeft: '3px' }}>\n          \u05D0\u05E0\u05D0 \u05D5\u05D5\u05D3\u05D0\u05D5 \u05DB\u05D9 \u05E9\u05D9\u05E2\u05D5\u05E8 \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD{' '}\n        </Box>\n        <Link\n          component=\"button\"\n          onClick={() => onButtonClick('LessonList')}\n        >\n          \u05D1\u05E8\u05E9\u05D9\u05DE\u05D4\n        </Link>\n      </Typography>\n      <Box sx={{\n        paddingTop: 2,\n        display: 'flex',\n        justifyContent: 'center',\n      }}>\n        <Button variant=\"outlined\" onClick={handleCreationButtonClick} disabled={isInputEmpty} fullWidth>\n          \u05E6\u05D5\u05E8 \u05E9\u05D9\u05E2\u05D5\u05E8\n        </Button>\n      </Box>\n    </Paper>\n  )\n}\n", "import { Box, Button, Link, Paper, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface INewTopic {\n  onButtonClick: (componentName: string) => void;\n}\n\nexport default function NewTopic({ onButtonClick }: INewTopic) {\n  const [isInputEmpty, setIsInputEmpty] = useState(true);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsInputEmpty(event.target.value.trim() === '' && event.target.value.length === 0);\n  }\n\n  const handleCreationButtonClick = () => {\n    // async func that will first add to db, then change state\n    onButtonClick('TopicList');\n  }\n\n  return (\n    <Paper sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      padding: 2,\n    }}>\n      <Box sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        gap: 1,\n        alignItems: 'baseline',\n      }}>\n        <Typography variant=\"h6\">\n          \u05DC\u05D9\u05E6\u05D9\u05E8\u05EA \u05E0\u05D5\u05E9\u05D0 \u05D7\u05D3\u05E9:\n        </Typography>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"\u05E9\u05DD \u05D4\u05E0\u05D5\u05E9\u05D0\"\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={handleInputChange}\n        />\n      </Box>\n      <Typography sx={{\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n      }}>\n        <Box sx={{ marginLeft: '3px' }}>\n          \u05D0\u05E0\u05D0 \u05D5\u05D5\u05D3\u05D0\u05D5 \u05DB\u05D9 \u05E0\u05D5\u05E9\u05D0 \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD{' '}\n        </Box>\n        <Link\n          component=\"button\"\n          onClick={() => onButtonClick('TopicList')}\n        >\n          \u05D1\u05E8\u05E9\u05D9\u05DE\u05D4\n        </Link>\n      </Typography>\n      <Box sx={{\n        paddingTop: 2,\n        display: 'flex',\n        justifyContent: 'center',\n      }}>\n        <Button variant=\"outlined\" onClick={handleCreationButtonClick} disabled={isInputEmpty} fullWidth>\n          \u05E6\u05D5\u05E8 \u05E0\u05D5\u05E9\u05D0\n        </Button>\n      </Box>\n    </Paper>\n  )\n}\n", "import CreateNewFolderOutlinedIcon from '@mui/icons-material/CreateNewFolderOutlined';\nimport { Box, Button, Grow, InputAdornment, TextField, Typography } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Lesson, Question, Topic } from '@prisma/client';\nimport * as React from 'react';\n\ninterface ILessonListProps {\n  onButtonClick: (componentName: string, selectedTopic?: Topic) => void;\n  dataRow: Lesson[];\n  dataRowChildren: Question[];\n  selectedTopic?: Topic | null;\n}\n\ninterface Column {\n  id: 'name' | 'lastEditDate' | 'questionAmount';\n  label: string;\n  minWidth?: number;\n  align?: 'center';\n  format?: (value: number | Date) => string;\n}\n\nconst columns: readonly Column[] = [\n  {\n    id: 'name',\n    label: '\u05E9\u05DD \u05E9\u05D9\u05E2\u05D5\u05E8',\n    minWidth: 250,\n    align: 'center',\n  },\n  {\n    id: 'lastEditDate',\n    label: '\u05E0\u05E2\u05E8\u05DA \u05DC\u05D0\u05D7\u05E8\u05D5\u05E0\u05D4',\n    minWidth: 250,\n    align: 'center',\n  },\n  {\n    id: 'questionAmount',\n    label: '\u05DE\u05E1\u05E4\u05E8 \u05E9\u05D0\u05DC\u05D5\u05EA',\n    minWidth: 250,\n    align: 'center',\n    format: (value: number | Date) => {\n      return typeof value === 'number' ? value.toLocaleString('he-IL') : String(value);\n    },\n  }\n];\n\nexport default function LessonList({ onButtonClick, dataRow, dataRowChildren, selectedTopic }: ILessonListProps) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchInput, setSearchInput] = React.useState<string>('');\n\n  // console.log('selectedTopic in LessonList.tsx:', selectedTopic);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function handleSearchInputChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void {\n    setSearchInput(event.target.value);\n  }\n\n  const handleLessonRowClick = () => {\n    onButtonClick('QuestionList');\n    //should take you to the relevant question list\n  }\n\n  const handleButtonClick = () => {\n    onButtonClick('NewLesson');\n  };\n\n  const filteredRows = dataRow\n    .filter((lesson) => selectedTopic && lesson.topicId === selectedTopic.id)\n    .map((lesson) => {\n      const questionsInLesson = dataRowChildren.filter(\n        (question) => question.lessonId === lesson.id\n      );\n      return {\n        ...lesson,\n        questionAmount: questionsInLesson.length,\n      };\n    })\n    .filter((row) => row.name.toLowerCase().includes(searchInput.toLowerCase()));\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, height: '100%', }}>\n      <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', gap: 1, }}>\n        <Paper>\n          <TextField\n            sx={{\n              padding: \"0.1em\",\n              borderRadius: '3px',\n              \"& input\": {\n                width: '14ch',\n                transition: 'width 0.2s ease-in-out',\n                '&:focus': {\n                  width: '20ch',\n                },\n              },\n            }}\n            size=\"small\"\n            value={searchInput}\n            onChange={handleSearchInputChange}\n            placeholder=\"\u05D7\u05E4\u05E9\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Paper>\n        <Paper>\n          <Button variant=\"outlined\" color=\"warning\" onClick={handleButtonClick} >\n            <CreateNewFolderOutlinedIcon /> \u05DC\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E2\u05D5\u05E8 \u05D7\u05D3\u05E9\n          </Button>\n        </Paper>\n      </Box>\n      <Paper elevation={8} sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer\n          sx={{\n            maxHeight: 440,\n            \"&::-webkit-scrollbar\": {\n              width: \"6px\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              background: \"#b5ac9a\",\n              borderRadius: \"10px\",\n            },\n            \"&::-webkit-scrollbar-thumb:hover\": {\n              background: \"#b89e6a\",\n            },\n            overflowX: 'hidden'\n          }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead >\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth, backgroundColor: 'rgba(248, 206, 172)' }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredRows.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={columns.length}>\n                    <Box sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                    }}>\n                      <Typography variant=\"h6\">\n                        \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D5 \u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD \u05DE\u05EA\u05D0\u05D9\u05DE\u05D9\u05DD \u05DC\u05E2\u05E8\u05DA \u05D4\u05D7\u05D9\u05E4\u05D5\u05E9\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                filteredRows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <Grow key={row.name} timeout={(index + 1) * 100} in={true} style={{ transformOrigin: '0 0 0' }}>\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} onClick={handleLessonRowClick}>\n                        {columns.map((column) => {\n                          const value = row[column.id as keyof typeof row];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {column.format && typeof value === 'number'\n                                ? column.format(value)\n                                : String(value)}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    </Grow>\n                  )))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={dataRow.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box >\n  );\n}", "import CreateNewFolderOutlinedIcon from '@mui/icons-material/CreateNewFolderOutlined';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, Button, Grow, InputAdornment, TableBody, TextField, Typography } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Lesson, Topic } from '@prisma/client';\nimport * as React from 'react';\n\ninterface ITopicListProps {\n  onButtonClick: (componentName: string, selectedTopic?: Topic) => void;\n  dataRow: Topic[];\n  dataRowChildren: Lesson[];\n}\n\ninterface Column {\n  id: 'name' | 'lastEditDate' | 'lessonAmount';\n  label: string;\n  minWidth?: number;\n  align?: 'center';\n  format?: (value: number | Date) => string;\n}\n\nconst columns: readonly Column[] = [\n  {\n    id: 'name',\n    label: '\u05E9\u05DD \u05E0\u05D5\u05E9\u05D0',\n    minWidth: 250,\n    align: 'center',\n  },\n  {\n    id: 'lastEditDate',\n    label: '\u05E0\u05E2\u05E8\u05DA \u05DC\u05D0\u05D7\u05E8\u05D5\u05E0\u05D4',\n    minWidth: 250,\n    align: 'center',\n  },\n  {\n    id: 'lessonAmount',\n    label: '\u05DE\u05E1\u05E4\u05E8 \u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD',\n    minWidth: 250,\n    align: 'center',\n    format: (value: number | Date) => {\n      return typeof value === 'number' ? value.toLocaleString('he-IL') : String(value);\n    },\n  },\n];\n\nexport default function TopicList({ onButtonClick, dataRow, dataRowChildren }: ITopicListProps) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [searchInput, setSearchInput] = React.useState<string>('');\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function handleSearchInputChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void {\n    setSearchInput(event.target.value);\n  }\n\n  const handleTopicRowClick = (selectedTopic: Topic) => {\n    onButtonClick('LessonList', selectedTopic);\n    console.log('selectedTopic in TopicList.tsx:', selectedTopic);\n  };\n\n  const handleButtonClick = () => {\n    onButtonClick('NewTopic');\n  };\n\n  const filteredRows = dataRow.map((topic) => {\n    const lessonsInTopic = dataRowChildren.filter((lesson) => lesson.topicId === topic.id);\n    return {\n      ...topic,\n      lessonAmount: lessonsInTopic.length,\n    };\n  }).filter((row) =>\n    row.name.toLowerCase().includes(searchInput.toLowerCase())\n  );\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, hegith: '100%', }}>\n      <Box sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', gap: 1, }}>\n        <Paper>\n          <TextField\n            sx={{\n              padding: \"0.1em\",\n              borderRadius: '3px',\n              \"& input\": {\n                width: '14ch',\n                transition: 'width 0.2s ease-in-out',\n                '&:focus': {\n                  width: '20ch',\n                },\n              },\n            }}\n            size=\"small\"\n            value={searchInput}\n            onChange={handleSearchInputChange}\n            placeholder=\"\u05D7\u05E4\u05E9\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Paper>\n        <Paper>\n          <Button variant=\"outlined\" color=\"warning\" onClick={handleButtonClick} >\n            <CreateNewFolderOutlinedIcon /> \u05DC\u05D9\u05E6\u05D9\u05E8\u05EA \u05E0\u05D5\u05E9\u05D0 \u05D7\u05D3\u05E9\n          </Button>\n        </Paper>\n      </Box>\n      <Paper elevation={8} sx={{ width: '100%', overflow: 'hidden' }}>\n        <TableContainer\n          sx={{\n            maxHeight: 440,\n            \"&::-webkit-scrollbar\": {\n              width: \"6px\",\n            },\n            \"&::-webkit-scrollbar-thumb\": {\n              background: \"#b5ac9a\",\n              borderRadius: \"10px\",\n            },\n            \"&::-webkit-scrollbar-thumb:hover\": {\n              background: \"#b89e6a\",\n            },\n            overflowX: 'hidden'\n          }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead >\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth, backgroundColor: 'rgba(248, 206, 172)' }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredRows.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={columns.length}>\n                    <Box sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      textAlign: 'center',\n                    }}>\n                      <Typography variant=\"h6\">\n                        \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D5 \u05E0\u05D5\u05E9\u05D0\u05D9\u05DD \u05DE\u05EA\u05D0\u05D9\u05DE\u05D9\u05DD \u05DC\u05E2\u05E8\u05DA \u05D4\u05D7\u05D9\u05E4\u05D5\u05E9\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                filteredRows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <Grow key={row.name} timeout={(index + 1) * 100} in={true} style={{ transformOrigin: '0 0 0' }}>\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} onClick={() => handleTopicRowClick(row)}>\n                        {/* can it recognize 'row' as topic? */}\n                        {columns.map((column) => {\n                          const value = row[column.id as keyof typeof row];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {column.format && typeof value === 'number'\n                                ? column.format(value)\n                                : String(value)}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    </Grow>\n                  ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={dataRow.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box >\n  );\n}", "import { prisma } from \"./prisma.server\";\n\nexport async function getTopics() {\n  return await prisma.topic.findMany({\n    include: {\n      _count: {\n        select: {\n          Lessons: true,\n        }\n      }\n    }\n  });\n}\n\n// export async function createTopic(\n//   topic: Omit<Topic, \"id\">,\n// ) {\n//   return await prisma.topic.create({\n//     data: {\n//       ...topic,\n//     },\n//   });\n// }", "import type { GridColDef } from \"@mui/x-data-grid\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport FullFeaturedCrudGrid from \"~/LessonComponents/DataGrid\";\r\nimport { getTopics } from \"~/utils/topic.server\";\r\n\r\nexport async function loader() {\r\n    const topics = await getTopics();\r\n    const topicWithLessonsCount = topics.map((topic) => { return { ...topic, _count: topic._count.Lessons } })\r\n\r\n    return { topics: topicWithLessonsCount }\r\n}\r\n\r\nexport default function TopicList() {\r\n    const { topics } = useLoaderData<typeof loader>();\r\n\r\n    const columns: GridColDef[] = [\r\n        { field: 'name', headerName: '\u05E9\u05DD \u05E0\u05D5\u05E9\u05D0', width: 180, editable: true },\r\n        { field: 'updatedAt', headerName: '\u05E0\u05E2\u05E8\u05DA \u05DC\u05D0\u05D7\u05E8\u05D5\u05E0\u05D4', width: 180, editable: false },\r\n        { field: '_count', headerName: '\u05DE\u05E1\u05E4\u05E8 \u05E9\u05D9\u05E2\u05D5\u05E8\u05D9\u05DD', width: 180, editable: false },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <FullFeaturedCrudGrid editable rows={topics} setRows={(oldRows) => { }} columnProps={columns} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n", "import { Box, Button, Typography } from \"@mui/material\";\nimport Particles from \"react-tsparticles\";\nimport UserGreetings from \"~/components/UserGreetings\";\n\nexport default function Index() {\n\n  return (\n    <>\n      {/* <Particles /> */}\n      <Box sx={{\n        gap: 1,\n      }}>\n        <Box sx={{ position: \"absolute\", top: '18px', left: '18px', color: 'white' }}>\n          <UserGreetings firstname={\"\u05D7\u05D9\u05D9\u05DE\u05D5\u05DF\"} lastname={\"\u05D7\u05D9\u05D9\u05DE\u05E7\u05D4\"} />\n        </Box>\n        <Particles id=\"tsparticles\" />\n        <Box sx={{ display: \"flex\", justify: 'center', color: 'white' }}>\n          <Typography sx={{ color: 'white' }}> I DID IT!!!!!!!!!!!!!!!!</Typography>\n          <Typography sx={{ color: 'white' }}> I DID IT!!!!!!!!!!!!!!!!</Typography>\n          <Button> ahhhhh </Button>\n          <Typography sx={{ color: 'white' }}> I DID IT!!!!!!!!!!!!!!!!</Typography>\n          <Typography sx={{ color: 'white' }}> I DID IT!!!!!!!!!!!!!!!!</Typography>\n        </Box>\n      </Box>\n    </>\n  );\n}", "interface IUserInfo {\n    firstname: string;\n    lastname: string;\n    // more?\n}\n\n// When the active directory function is complete there should be a connection between them\n\nfunction UserGreetings({ firstname, lastname }: IUserInfo) {\n    const currentHour = new Date().getHours();\n\n    if (currentHour >= 5 && currentHour < 12) {\n        return `\u05D1\u05D5\u05E7\u05E8 \u05D8\u05D5\u05D1, ${firstname} ${lastname}`;\n    } else if (currentHour >= 12 && currentHour < 17) {\n        return `\u05E6\u05D4\u05E8\u05D9\u05D9\u05DD \u05D8\u05D5\u05D1\u05D9\u05DD, ${firstname} ${lastname}`;\n    } else if (currentHour >= 17 && currentHour < 22) {\n        return `\u05E2\u05E8\u05D1 \u05D8\u05D5\u05D1, ${firstname} ${lastname}`;\n    } else {\n        return `\u05DC\u05D9\u05DC\u05D4 \u05D8\u05D5\u05D1, ${firstname} ${lastname}`;\n    }\n}\n\n\nexport default UserGreetings;", "// import { type NextPage } from \"next\";\n// import Link from \"next/link\";\n// import { useRouter } from \"next/router\";\nimport { Fragment, useCallback, useEffect, useRef, useState } from \"react\";\n// import { BottomBar } from \"~/components/BottomBar\";\nimport { SideBar } from \"~/components/SideBar\";\n// import { LoginScreen, useLoginScreen } from \"~/components/LoginScreen\";\n// import { RightBar } from \"~/components/RightBar\";\nimport {\n  ActiveBookSvg,\n  ActiveDumbbellSvg,\n  ActiveTrophySvg,\n  CheckmarkSvg,\n  FastForwardSvg,\n  GoldenBookSvg,\n  GoldenDumbbellSvg,\n  GoldenTrophySvg,\n  GuidebookSvg,\n  LessonCompletionSvg0,\n  LessonCompletionSvg1,\n  LessonCompletionSvg2,\n  LessonCompletionSvg3,\n  LockSvg,\n  LockedBookSvg,\n  LockedDumbbellSvg,\n  LockedTrophySvg,\n  PracticeExerciseSvg,\n  StarSvg,\n  UpArrowSvg\n} from \"~/components/Svgs\";\nimport Box from '@mui/material/Box';\n// import { TopBar } from \"~/components/TopBar\";\n// import { useBoundStore } from \"~/hooks/useBoundStore\";\nimport type { Tile, TileType, Unit } from \"~/utils/units\";\nimport { units } from \"~/utils/units\";\nimport { Button, Link, Typography } from \"@mui/material\";\n\ntype TileStatus = \"LOCKED\" | \"ACTIVE\" | \"COMPLETE\";\n\nconst tileStatus = (tile: Tile, lessonsCompleted: number): TileStatus => {\n  const lessonsPerTile = 4;\n  const tilesCompleted = Math.floor(lessonsCompleted / lessonsPerTile);\n  const tiles = units.flatMap((unit) => unit.tiles);\n  const tileIndex = tiles.findIndex((t) => t === tile);\n\n  if (tileIndex < tilesCompleted) {\n    return \"COMPLETE\";\n  }\n  if (tileIndex > tilesCompleted) {\n    return \"LOCKED\";\n  }\n  return \"ACTIVE\";\n};\n\nconst TileIcon = ({\n  tileType,\n  status,\n}: {\n  tileType: TileType;\n  status: TileStatus;\n}): JSX.Element => {\n  switch (tileType) {\n    case \"star\":\n      return status === \"COMPLETE\" ? (\n        <CheckmarkSvg />\n      ) : status === \"ACTIVE\" ? (\n        <StarSvg />\n      ) : (\n        <LockSvg />\n      );\n    case \"book\":\n      return status === \"COMPLETE\" ? (\n        <GoldenBookSvg />\n      ) : status === \"ACTIVE\" ? (\n        <ActiveBookSvg />\n      ) : (\n        <LockedBookSvg />\n      );\n    case \"dumbbell\":\n      return status === \"COMPLETE\" ? (\n        <GoldenDumbbellSvg />\n      ) : status === \"ACTIVE\" ? (\n        <ActiveDumbbellSvg />\n      ) : (\n        <LockedDumbbellSvg />\n      );\n    case \"fast-forward\":\n      return status === \"COMPLETE\" ? (\n        <CheckmarkSvg />\n      ) : status === \"ACTIVE\" ? (\n        <StarSvg />\n      ) : (\n        <FastForwardSvg />\n      );\n    case \"trophy\":\n      return status === \"COMPLETE\" ? (\n        <GoldenTrophySvg />\n      ) : status === \"ACTIVE\" ? (\n        <ActiveTrophySvg />\n      ) : (\n        <LockedTrophySvg />\n      );\n  }\n};\n\n// const tileLeftClassNames = [\n//   \"left-0\",\n//   \"left-[-45px]\",\n//   \"left-[-70px]\",\n//   \"left-[-45px]\",\n//   \"left-0\",\n//   \"left-[45px]\",\n//   \"left-[70px]\",\n//   \"left-[45px]\",\n// ] as const;\n\n// type TileLeftClassName = (typeof tileLeftClassNames)[number];\n\n// const getTileLeftClassName = ({\n//   index,\n//   unitNumber,\n//   tilesLength,\n// }: {\n//   index: number;\n//   unitNumber: number;\n//   tilesLength: number;\n// }): TileLeftClassName => {\n//   if (index >= tilesLength - 1) {\n//     return \"left-0\";\n//   }\n\n//   const classNames =\n//     unitNumber % 2 === 1\n//       ? tileLeftClassNames\n//       : [...tileLeftClassNames.slice(4), ...tileLeftClassNames.slice(0, 4)];\n\n//   return classNames[index % classNames.length] ?? \"left-0\";\n// };\n\nconst tileTooltipLeftOffsets = [140, 95, 70, 95, 140, 185, 210, 185] as const;\n\ntype TileTooltipLeftOffset = (typeof tileTooltipLeftOffsets)[number];\n\nconst getTileTooltipLeftOffset = ({\n  index,\n  unitNumber,\n  tilesLength,\n}: {\n  index: number;\n  unitNumber: number;\n  tilesLength: number;\n}): TileTooltipLeftOffset => {\n  if (index >= tilesLength - 1) {\n    return tileTooltipLeftOffsets[0];\n  }\n\n  const offsets =\n    unitNumber % 2 === 1\n      ? tileTooltipLeftOffsets\n      : [\n        ...tileTooltipLeftOffsets.slice(4),\n        ...tileTooltipLeftOffsets.slice(0, 4),\n      ];\n\n  return offsets[index % offsets.length] ?? tileTooltipLeftOffsets[0];\n};\n\nconst getTileColors = ({\n  tileType,\n  status,\n  defaultColors,\n}: {\n  tileType: TileType;\n  status: TileStatus;\n  defaultColors: `border-${string} bg-${string}`;\n}): `border-${string} bg-${string}` => {\n  switch (status) {\n    case \"LOCKED\":\n      if (tileType === \"fast-forward\") return defaultColors;\n      return \"border-[#b7b7b7] bg-[#e5e5e5]\";\n    case \"COMPLETE\":\n      return \"border-yellow-500 bg-yellow-400\";\n    case \"ACTIVE\":\n      return defaultColors;\n  }\n};\n\nconst TileTooltip = ({\n  selectedTile,\n  index,\n  unitNumber,\n  tilesLength,\n  description,\n  status,\n  closeTooltip,\n}: {\n  selectedTile: number | null;\n  index: number;\n  unitNumber: number;\n  tilesLength: number;\n  description: string;\n  status: TileStatus;\n  closeTooltip: () => void;\n}) => {\n  const tileTooltipRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const containsTileTooltip = (event: MouseEvent) => {\n      if (selectedTile !== index) return;\n      const clickIsInsideTooltip = tileTooltipRef.current?.contains(\n        event.target as Node\n      );\n      if (clickIsInsideTooltip) return;\n      closeTooltip();\n    };\n\n    window.addEventListener(\"click\", containsTileTooltip, true);\n    return () => window.removeEventListener(\"click\", containsTileTooltip, true);\n  }, [selectedTile, tileTooltipRef, closeTooltip, index]);\n\n  const unit = units.find((unit) => unit.unitNumber === unitNumber);\n  const activeBackgroundColor = unit?.backgroundColor ?? \"bg-green-500\";\n  const activeTextColor = unit?.textColor ?? \"text-green-500\";\n\n  return (\n    <div\n      className={[\n        \"relative h-0 w-full\",\n        index === selectedTile ? \"\" : \"invisible\",\n      ].join(\" \")}\n      ref={tileTooltipRef}\n    >\n      <div\n        className={[\n          \"absolute z-30 flex w-[300px] flex-col gap-4 rounded-xl p-4 font-bold transition-all duration-300\",\n          status === \"ACTIVE\"\n            ? activeBackgroundColor\n            : status === \"LOCKED\"\n              ? \"border-2 border-gray-200 bg-gray-100\"\n              : \"bg-yellow-400\",\n          index === selectedTile ? \"top-4 scale-100\" : \"-top-14 scale-0\",\n        ].join(\" \")}\n        style={{ left: \"calc(50% - 150px)\" }}\n      >\n        <div\n          className={[\n            \"absolute left-[140px] top-[-8px] h-4 w-4 rotate-45\",\n            status === \"ACTIVE\"\n              ? activeBackgroundColor\n              : status === \"LOCKED\"\n                ? \"border-l-2 border-t-2 border-gray-200 bg-gray-100\"\n                : \"bg-yellow-400\",\n          ].join(\" \")}\n          style={{\n            left: getTileTooltipLeftOffset({ index, unitNumber, tilesLength }),\n          }}\n        ></div>\n        <div\n          className={[\n            \"text-lg\",\n            status === \"ACTIVE\"\n              ? \"text-white\"\n              : status === \"LOCKED\"\n                ? \"text-gray-400\"\n                : \"text-yellow-600\",\n          ].join(\" \")}\n        >\n          {description}\n        </div>\n        {status === \"ACTIVE\" ? (\n          <Link\n            href=\"/lesson\"\n            className={[\n              \"flex w-full items-center justify-center rounded-xl border-b-4 border-gray-200 bg-white p-3 uppercase\",\n              activeTextColor,\n            ].join(\" \")}\n          >\n            \u05DC\u05D4\u05EA\u05D7\u05DC\u05D4 10+ \u05E0\u05E7\u05D5\u05D3\u05D5\u05EA\n          </Link>\n        ) : status === \"LOCKED\" ? (\n          <button\n            className=\"w-full rounded-xl bg-gray-200 p-3 uppercase text-gray-400\"\n            disabled\n          >\n            \u05E0\u05E2\u05D5\u05DC\n          </button>\n        ) : (\n          <Link\n            href=\"/lesson\"\n            className=\"flex w-full items-center justify-center rounded-xl border-b-4 border-yellow-200 bg-white p-3 uppercase text-yellow-400\"\n          >\n            Practice +5 XP\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst UnitSection = ({ unit }: { unit: Unit }): JSX.Element => {\n  // const router = useRouter();\n\n  const [isHovered, setHovered] = useState(false);\n  const [selectedTile, setSelectedTile] = useState<null | number>(null);\n\n  useEffect(() => {\n    const unselectTile = () => setSelectedTile(null);\n    window.addEventListener(\"scroll\", unselectTile);\n    return () => window.removeEventListener(\"scroll\", unselectTile);\n  }, []);\n\n  const closeTooltip = useCallback(() => setSelectedTile(null), []);\n\n  // const lessonsCompleted = useBoundStore((x) => x.lessonsCompleted);\n  // const increaseLessonsCompleted = useBoundStore(\n  //   (x) => x.increaseLessonsCompleted\n  // );\n\n  //added by yoffe himself.\n  const lessonsCompleted = 2\n\n  return (\n    <>\n      <UnitHeader\n        unitNumber={unit.unitNumber}\n        description={unit.description}\n        backgroundColor={unit.backgroundColor}\n        borderColor={unit.borderColor}\n      />\n      <Box sx={{\n        display: 'flex',\n        position: 'relative',\n        flexDirection: 'column',\n        gap: '1rem',\n        alignItems: 'center',\n        maxWidth: '42rem',\n      }}>\n        {unit.tiles.map((tile, i): JSX.Element => {\n          const status = tileStatus(tile, lessonsCompleted);\n          return (\n            <Fragment key={i}>\n              {(() => {\n                switch (tile.type) {\n                  case \"star\":\n                  case \"book\":\n                  case \"dumbbell\":\n                  case \"trophy\":\n                  case \"fast-forward\":\n                    if (tile.type === \"trophy\" && status === \"COMPLETE\") {\n                      return (\n                        <Box className=\"relative\">\n                          <TileIcon tileType={tile.type} status={status} />\n                          <Typography sx={{\n                            display: 'flex',\n                            position: 'absolute',\n                            right: 0,\n                            left: 0,\n                            top: '1.5rem',\n                            justifyContent: 'center',\n                            fontSize: '1.125rem',\n                            fontweight: 700,\n                            color: '#B45309',\n                          }}>\n                            {unit.unitNumber}\n                          </Typography>\n                        </Box>\n                      );\n                    }\n                    return (\n                      <Button\n                      // className={[\n                      //   \"relative -mb-4 h-[93px] w-[98px]\",\n                      //   getTileLeftClassName({\n                      //     index: i,\n                      //     unitNumber: unit.unitNumber,\n                      //     tilesLength: unit.tiles.length,\n                      //   }),\n                      // ].join(\" \")}\n                      >\n                        {tile.type === \"fast-forward\" && status === \"LOCKED\" ? (\n                          <HoverLabel\n                            text=\"\u05D3\u05DC\u05D2 \u05DC\u05DB\u05D0\u05DF?\"\n                            textColor={unit.textColor}\n                          />\n                        ) : selectedTile !== i && status === \"ACTIVE\" ? (\n                          <HoverLabel text=\"\u05D4\u05EA\u05D7\u05DC!\" textColor={unit.textColor} />\n                        ) : null}\n                        <LessonCompletionSvg\n                          lessonsCompleted={lessonsCompleted}\n                          status={status}\n                        />\n                        <Box\n                          sx={{\n                            position: 'relative',\n                            padding: '1rem',\n                            margin: ' 0.75rem',\n                            borderRadius: '9999px',\n                            borderBottomWidth: '8px',\n                            \"&:hover\": {\n                              \"& > .tooltip\": {\n                                opacity: 1,\n                              },\n                            },\n                          }}\n                        // onClick={() => {\n                        //   if (\n                        //     tile.type === \"fast-forward\" &&\n                        //     status === \"LOCKED\"\n                        //   ) {\n                        //     void router.push(\n                        //       `/lesson?fast-forward=${unit.unitNumber}`\n                        //     );\n                        //     return;\n                        //   }\n                        //   setSelectedTile(i);\n                        // }}\n                        >\n                          <TileIcon tileType={tile.type} status={status} />\n                          <Typography\n                            className=\"tooltip\"\n                            sx={{\n                              position: 'absolute',\n                              top: '100%',\n                              left: 0,\n                              opacity: isHovered ? 1 : 0,\n                              transition: 'opacity 0.3s ease-in-out',\n                            }}\n                            onMouseEnter={() => setHovered(true)}\n                            onMouseLeave={() => setHovered(false)}\n                          >\n                            \u05D4\u05E6\u05D2 \u05E9\u05D9\u05E2\u05D5\u05E8\n                          </Typography>\n                        </Box>\n                      </Button>\n                    );\n                }\n              })()}\n              <TileTooltip\n                selectedTile={selectedTile}\n                index={i}\n                unitNumber={unit.unitNumber}\n                tilesLength={unit.tiles.length}\n                description={(() => {\n                  switch (tile.type) {\n                    case \"book\":\n                    case \"dumbbell\":\n                    case \"star\":\n                      return tile.description;\n                    case \"fast-forward\":\n                      return status === \"LOCKED\"\n                        ? \"Jump here?\"\n                        : tile.description;\n                    case \"trophy\":\n                      return `Unit ${unit.unitNumber} review`;\n                  }\n                })()}\n                status={status}\n                closeTooltip={closeTooltip}\n              />\n            </Fragment>\n          );\n        })}\n      </Box >\n    </>\n  );\n};\n\n// const getTopBarColors = (\n//   scrollY: number\n// ): {\n//   backgroundColor: `bg-${string}`;\n//   borderColor: `border-${string}`;\n// } => {\n//   const defaultColors = {\n//     backgroundColor: \"bg-[#58cc02]\",\n//     borderColor: \"border-[#46a302]\",\n//   } as const;\n\n//   if (scrollY < 680) {\n//     return defaultColors;\n//   } else if (scrollY < 1830) {\n//     return units[1] ?? defaultColors;\n//   } else {\n//     return units[2] ?? defaultColors;\n//   }\n// };\n\nexport default function Learn() {\n  // const { loginScreenState, setLoginScreenState } = useLoginScreen();\n  const [scrollY, setScrollY] = useState(0);\n  useEffect(() => {\n    const updateScrollY = () => setScrollY(globalThis.scrollY ?? scrollY);\n    updateScrollY();\n    document.addEventListener(\"scroll\", updateScrollY);\n    return () => document.removeEventListener(\"scroll\", updateScrollY);\n  }, [scrollY]);\n\n  // const topBarColors = getTopBarColors(scrollY);\n\n  return (\n    <Box sx={{ overflowX: 'hidden' }}>\n      <Box sx={{\n        position: 'fixed', top: 0, left: 0, height: '100%'\n      }}>\n        <SideBar selectedTab={\"\u05DC\u05DE\u05D9\u05D3\u05D4\"} />\n      </Box>\n      <Box sx={{\n        display: 'flex', flexDirection: 'row', justifyContent: 'center', marginRight: '6rem', backgroundColor: '#d0a34c'\n      }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: '1', maxWidth: '48rem', }}>\n          {units.map((unit) => (\n            <UnitSection unit={unit} key={unit.unitNumber} />\n          ))}\n          <Box sx={{\n            display: 'flex', justifyContent: 'space-between', alignItems: 'flex-end',\n            position: 'sticky', right: 0, left: 0, bottom: '7rem',\n          }} >\n            <Link\n              href=\"/lesson?practice\"\n              sx={{\n                display: 'flex', position: 'absolute', right: '1rem', justifyContent: 'center',\n                alignItems: 'center', borderRadius: '9999px', borderWidth: '2px', borderBottomWidth: '4px',\n                borderColor: '#E5E7EB', width: '4rem', height: '4rem', backgroundColor: '#ffffff',\n              }}\n            >\n              <Typography>\u05D7\u05D6\u05E8\u05D5\u05EA \u05EA\u05D9\u05E8\u05D2\u05D5\u05DC</Typography>\n              <PracticeExerciseSvg style={{ width: '2rem', height: '2rem' }} />\n            </Link>\n            {scrollY > 100 && (\n              <Button\n                sx={{\n                  display: 'flex',\n                  position: 'absolute',\n                  right: '1rem',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  alignDelf: 'flex-end',\n                  borderRadius: '1rem',\n                  borderWidth: '2px',\n                  borderBottomWidth: '4px',\n                  borderColor: '#E5E7EB',\n                  width: '3.5rem',\n                  height: '3.5rem',\n                  backgroundColor: '#ffffff',\n                }}\n                onClick={() => scrollTo(0, 0)}\n              >\n                <Typography>\u05D7\u05D6\u05E8\u05D4 \u05DC\u05D4\u05EA\u05D7\u05DC\u05D4</Typography>\n                <UpArrowSvg />\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n      {/* <LoginScreen\n        loginScreenState={loginScreenState}\n        setLoginScreenState={setLoginScreenState}\n      /> */}\n    </Box >\n  );\n};\n\nconst LessonCompletionSvg = ({\n  lessonsCompleted,\n  status,\n  style = {},\n}: {\n  lessonsCompleted: number;\n  status: TileStatus;\n  style?: React.HTMLAttributes<SVGElement>[\"style\"];\n}) => {\n  if (status !== \"ACTIVE\") {\n    return null;\n  }\n  switch (lessonsCompleted % 4) {\n    case 0:\n      return <LessonCompletionSvg0 style={style} />;\n    case 1:\n      return <LessonCompletionSvg1 style={style} />;\n    case 2:\n      return <LessonCompletionSvg2 style={style} />;\n    case 3:\n      return <LessonCompletionSvg3 style={style} />;\n    default:\n      return null;\n  }\n};\n\nconst HoverLabel = ({\n  text,\n  textColor,\n}: {\n  text: string;\n  textColor: `text-${string}`;\n}) => {\n  const hoverElement = useRef<HTMLDivElement | null>(null);\n  const [width, setWidth] = useState(72);\n\n  useEffect(() => {\n    setWidth(hoverElement.current?.clientWidth ?? width);\n  }, [hoverElement.current?.clientWidth, width]);\n\n  return (\n    <div\n      className={`absolute z-10 w-max animate-bounce rounded-lg border-2 border-gray-200 bg-white px-3 py-2 font-bold uppercase ${textColor}`}\n      style={{\n        top: \"-25%\",\n        left: `calc(50% - ${width / 2}px)`,\n      }}\n      ref={hoverElement}\n    >\n      {text}\n      <div\n        className=\"absolute h-3 w-3 rotate-45 border-b-2 border-r-2 border-gray-200 bg-white\"\n        style={{ left: \"calc(50% - 8px)\", bottom: \"-8px\" }}\n      ></div>\n    </div>\n  );\n};\n\nconst UnitHeader = ({\n  unitNumber,\n  description,\n  backgroundColor,\n  borderColor,\n}: {\n  unitNumber: number;\n  description: string;\n  backgroundColor: `bg-${string}`;\n  borderColor: `border-${string}`;\n}) => {\n  // const language = useBoundStore((x) => x.language);\n  return (\n    <article\n      className={[\"max-w-2xl text-white sm:rounded-xl\", backgroundColor].join(\n        \" \"\n      )}\n    >\n      <header className=\"flex items-center justify-between gap-4 p-4\">\n        <div className=\"flex flex-col gap-1\">\n          <h2 className=\"text-2xl font-bold\">\u05D7\u05DC\u05E7 {unitNumber}</h2>\n          <p className=\"text-lg\">{description}</p>\n        </div>\n        <Link\n          // href={`https://duolingo.com/guidebook/${language.code}/${unitNumber}`}\n          className={[\n            \"flex items-center gap-3 rounded-2xl border-2 border-b-4 p-3 transition hover:text-gray-100\",\n            borderColor,\n          ].join(\" \")}\n        >\n          <GuidebookSvg />\n          <span className=\"sr-only font-bold uppercase lg:not-sr-only\">\n            Guidebook\n          </span>\n        </Link>\n      </header>\n    </article>\n  );\n};\n", "import type { ComponentProps } from \"react\";\nimport React from \"react\";\n\nexport const GlobeSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      width=\"360\"\n      height=\"360\"\n      viewBox=\"0 0 360 360\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M180 360C279.411 360 360 279.411 360 180C360 80.5887 279.411 0 180 0C80.5887 0 0 80.5887 0 180C0 279.411 80.5887 360 180 360Z\"\n        fill=\"#24D4DE\"\n        fillOpacity=\"0.04\"\n      />\n      <path\n        d=\"M180.382 331.398C263.786 331.398 331.398 263.786 331.398 180.382C331.398 96.9778 263.786 29.3656 180.382 29.3656C96.9779 29.3656 29.3657 96.9778 29.3657 180.382C29.3657 263.786 96.9779 331.398 180.382 331.398Z\"\n        fill=\"#24D4DE\"\n        fillOpacity=\"0.06\"\n      />\n      <path\n        d=\"M180.478 306.574C250.119 306.574 306.575 250.119 306.575 180.478C306.575 110.836 250.119 54.3807 180.478 54.3807C110.836 54.3807 54.3807 110.836 54.3807 180.478C54.3807 250.119 110.836 306.574 180.478 306.574Z\"\n        fill=\"#49C0F8\"\n      />\n      <path\n        opacity=\"0.732096\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M95.3311 195.735C118.141 195.735 136.633 214.226 136.633 237.037C136.633 258.078 120.898 275.444 100.554 278.011L100.551 278.013C76.428 258.222 59.7785 229.657 55.4786 197.194L55.48 197.192C58.9565 196.242 62.6159 195.735 66.3937 195.735H95.3311Z\"\n        fill=\"#58A700\"\n      />\n      <path\n        opacity=\"0.732096\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M162.59 91.2974C162.59 111.499 148.085 128.314 128.922 131.895L128.341 131.999L128.382 132.296C128.619 134.088 128.742 135.916 128.742 137.773C128.742 160.583 110.25 179.074 87.4401 179.074H58.5027C57.176 179.074 55.8639 179.012 54.5692 178.889L54.5665 178.888C55.274 121.617 94.1611 73.5406 146.951 58.9345L146.953 58.9361C156.48 66.5021 162.59 78.1863 162.59 91.2974Z\"\n        fill=\"#58A700\"\n      />\n      <path\n        opacity=\"0.732096\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M249.314 153.118C272.124 153.118 290.615 171.61 290.615 194.42C290.615 201.494 288.837 208.153 285.702 213.974L295.041 215.768C297.111 216.165 299.12 216.745 301.051 217.491L301.055 217.492C294.852 237.723 283.697 255.788 269.005 270.274L249.489 270.271C230.312 270.271 214.739 254.843 214.504 235.722L211.257 235.721C188.446 235.721 169.955 217.23 169.955 194.42C169.955 171.61 188.446 153.118 211.257 153.118H249.314Z\"\n        fill=\"#58A700\"\n      />\n      <path\n        opacity=\"0.732096\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M241.033 69.8457C263.696 82.2766 282.123 101.468 293.601 124.706L274.213 124.708C270.958 135.27 261.12 142.946 249.489 142.946H236.511C222.224 142.946 210.642 131.365 210.642 117.078C210.642 103.34 221.352 92.1025 234.879 91.2605C234.856 90.75 234.845 90.2359 234.845 89.7192C234.845 82.3763 237.106 75.5618 240.972 69.9344L241.033 69.8457Z\"\n        fill=\"#58A700\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M259.135 253.435C266.273 253.435 272.368 257.9 274.779 264.189C266.999 272.949 258.016 280.617 248.09 286.934L210.029 286.932C200.779 286.932 193.28 279.433 193.28 270.183C193.28 260.933 200.779 253.435 210.029 253.435H259.135Z\"\n        fill=\"#BBF3F6\"\n      />\n      <path\n        d=\"M184.774 74.5488H164.781C155.531 74.5488 148.032 82.0475 148.032 91.2975C148.032 100.547 155.531 108.046 164.781 108.046H184.774C194.024 108.046 201.523 100.547 201.523 91.2975C201.523 82.0475 194.024 74.5488 184.774 74.5488Z\"\n        fill=\"#BBF3F6\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M95.65 87.1767L106.979 87.1784C116.229 87.1784 123.728 94.677 123.728 103.927C123.728 106.194 123.277 108.356 122.461 110.329L127.849 110.328C137.099 110.328 144.598 117.827 144.598 127.077C144.598 136.327 137.099 143.826 127.849 143.826H107.856C98.606 143.826 91.1074 136.327 91.1074 127.077C91.1074 124.81 91.5579 122.648 92.3742 120.675L69.4354 120.675C76.1737 108.189 84.9564 96.9698 95.335 87.4643L95.65 87.1767Z\"\n        fill=\"#BBF3F6\"\n      />\n    </svg>\n  );\n};\n\nexport const GlobeIconSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg viewBox=\"0 0 46 46\" fill=\"none\" {...props}>\n      <rect\n        x=\"14.3356\"\n        width=\"29.533\"\n        height=\"29.533\"\n        rx=\"14.7665\"\n        transform=\"rotate(26.843 14.3356 0)\"\n        fill=\"#84D8FF\"\n      />\n      <path\n        d=\"M35.815 27.4202C39.9852 19.1801 36.7117 9.1259 28.5059 4.91498L28.42 4.87151C27.7585 4.53674 27.4936 3.7291 27.8284 3.06759C28.1631 2.40611 28.9707 2.14124 29.6322 2.47595L29.7521 2.53661C39.2561 7.42736 43.0445 19.0807 38.2105 28.6326C35.4596 34.0683 30.5066 37.657 24.9852 38.863V42.1031H27.4216C28.0945 42.1031 28.6399 42.6485 28.6399 43.3214C28.6399 43.9942 28.0945 44.5397 27.4216 44.5397H18.8936C18.2207 44.5397 17.6753 43.9942 17.6753 43.3214C17.6753 42.6485 18.2207 42.1031 18.8936 42.1031H21.3303V39.3058C18.2548 39.3855 15.1166 38.7355 12.1737 37.271L12.0537 37.2108C11.3922 36.8761 11.1273 36.0684 11.4621 35.4069C11.7968 34.7454 12.6045 34.4806 13.266 34.8153C21.5348 39 31.6303 35.6891 35.815 27.4202Z\"\n        fill=\"#FF9600\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M21.939 34.5711C19.3448 34.7666 16.6659 34.279 14.1754 33.0185C12.9784 32.4128 11.8994 31.6662 10.9485 30.8092C10.8494 30.0944 10.9605 29.343 11.313 28.6512C12.2294 26.8527 14.4303 26.1376 16.2288 27.054L20.5708 29.2664C22.3693 30.1828 23.0844 32.3836 22.168 34.1822C22.0988 34.3181 22.0222 34.4478 21.939 34.5711ZM35.367 17.1728C35.9334 20.2408 35.536 23.5124 34.0185 26.5109C33.112 28.3022 31.8902 29.8291 30.4548 31.0583L29.1899 30.4138C25.5928 28.581 24.1626 24.1792 25.9954 20.5822C27.7507 17.1371 31.8625 15.6797 35.367 17.1728ZM24.321 5.48865C26.3883 6.57048 27.2043 9.11783 26.1424 11.202C25.0733 13.3003 22.5056 14.1346 20.4073 13.0655L20.2654 12.9932C20.2119 14.0587 19.938 15.1304 19.4223 16.1425C17.4641 19.9856 12.7613 21.5136 8.91819 19.5555C7.85295 19.0127 6.96557 18.2591 6.28101 17.3713C6.52338 15.9462 6.9808 14.5328 7.66777 13.1754C10.8254 6.93606 17.8073 3.90455 24.321 5.48865Z\"\n        fill=\"#58CC02\"\n      />\n    </svg>\n  );\n};\n\nexport const PodcastIconSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg viewBox=\"0 0 46 46\" fill=\"none\" {...props}>\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M40.9961 31C40.9961 26.5817 37.4144 23 32.9961 23H29.9961V39H32.9961C37.4144 39 40.9961 35.4183 40.9961 31Z\"\n          fill=\"#CE82FF\"\n        />\n        <path\n          d=\"M4.99609 31C4.99609 26.5817 8.57782 23 12.9961 23H15.9961V39H12.9961C8.57782 39 4.99609 35.4183 4.99609 31Z\"\n          fill=\"#CE82FF\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7.99609 23C7.99609 14.7157 14.7118 8 22.9961 8C31.2804 8 37.9961 14.7157 37.9961 23V29H32.9961V32H37.9961H40.9961V29V23C40.9961 13.0589 32.9372 5 22.9961 5C13.055 5 4.99609 13.0589 4.99609 23V29V32H7.99609H11.9961V29H7.99609V23Z\"\n          fill=\"#CE82FF\"\n        />\n        <path\n          d=\"M10.9961 25C10.9961 22.7909 12.787 21 14.9961 21C17.2052 21 18.9961 22.7909 18.9961 25V37C18.9961 39.2091 17.2052 41 14.9961 41C12.787 41 10.9961 39.2091 10.9961 37V25Z\"\n          fill=\"#9069CD\"\n        />\n        <path\n          d=\"M26.9961 25C26.9961 22.7909 28.787 21 30.9961 21C33.2052 21 34.9961 22.7909 34.9961 25V37C34.9961 39.2091 33.2052 41 30.9961 41C28.787 41 26.9961 39.2091 26.9961 37V25Z\"\n          fill=\"#9069CD\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect\n            width=\"37.3484\"\n            height=\"36.2166\"\n            fill=\"white\"\n            transform=\"translate(4.32617 4.8916)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const ChevronDownSvg = () => {\n  return (\n    <svg height=\"40\" viewBox=\"0 96 960 960\" width=\"40\">\n      <path\n        fill=\"white\"\n        d=\"M480 717.138 233.623 470.761l53.71-53.71L480 610.385l192.667-192.667 53.71 53.71L480 717.138Z\"\n      />\n    </svg>\n  );\n};\n\nexport const TreasureProgressSvg = () => {\n  return (\n    <svg width=\"38\" height=\"40\" viewBox=\"0 0 38 40\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M22.6449 0H14.7191C13.4736 0 12.4546 1.01903 12.4546 2.26452V2.9248H4.8748C3.79785 2.9248 2.9248 3.79785 2.9248 4.8748V6.3732C1.75898 7.0475 0.974609 8.30793 0.974609 9.75156V20.485C0.383741 20.55 0 20.9835 0 21.6088V37.8693C0 38.5487 0.452903 39.0016 1.13226 39.0016H7.92581V38.9978H29.4395V39.0016H36.233C36.9124 39.0016 37.3653 38.5487 37.3653 37.8693V21.6088C37.3653 20.9295 36.9124 20.4766 36.233 20.4766H36.0746V9.75156C36.0746 8.30809 35.2904 7.04778 34.1248 6.37343V4.8748C34.1248 3.79785 33.2518 2.9248 32.1748 2.9248H24.9094V2.26452C24.9094 1.01903 23.8904 0 22.6449 0Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        d=\"M2.9248 4.87578C2.9248 3.79883 3.79785 2.92578 4.8748 2.92578H32.1748C33.2518 2.92578 34.1248 3.79883 34.1248 4.87578V15.6008C34.1248 16.6777 33.2518 17.5508 32.1748 17.5508H4.87481C3.79785 17.5508 2.9248 16.6777 2.9248 15.6008V4.87578Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        d=\"M14.7191 3.05176e-05H22.6449C23.8904 3.05176e-05 24.9094 1.01906 24.9094 2.26455V11.3226C24.9094 12.5681 23.8904 13.5871 22.6449 13.5871H14.7191C13.4736 13.5871 12.4546 12.5681 12.4546 11.3226V2.26455C12.4546 1.01906 13.4736 3.05176e-05 14.7191 3.05176e-05Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        d=\"M0.974609 9.75156C0.974609 7.59765 2.7207 5.85156 4.87461 5.85156H32.1746C34.3285 5.85156 36.0746 7.59765 36.0746 9.75156V22.4266H0.974609V9.75156Z\"\n        fill=\"#AA572A\"\n      />\n      <rect x=\"4.875\" y=\"9.75003\" width=\"27.3\" height=\"11.7\" fill=\"#743611\" />\n      <path d=\"M33.15 21.4499H4.875V36.0749H33.15V21.4499Z\" fill=\"#AA572A\" />\n      <path\n        d=\"M32.8358 34.4727H4.5293V39.0017H32.8358V34.4727Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        d=\"M14.7191 16.3516H22.6449C23.8904 16.3516 24.9094 17.3706 24.9094 18.6161V27.6741C24.9094 28.9196 23.8904 29.9387 22.6449 29.9387H14.7191C13.4736 29.9387 12.4546 28.9196 12.4546 27.6741V18.6161C12.4546 17.3706 13.4736 16.3516 14.7191 16.3516Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M21.5124 21.4439C21.5124 19.8588 20.2669 18.6133 18.6817 18.6133C17.0966 18.6133 15.8511 19.8588 15.8511 21.4439C15.8511 22.3854 16.2904 23.207 16.9793 23.7191L16.0781 26.0848V26.4244C16.0781 27.1038 16.531 27.5567 17.2104 27.5567H19.9278H20.2675C20.8336 27.4435 21.2865 26.7641 21.0601 26.198L20.384 23.7192C21.073 23.2071 21.5124 22.3854 21.5124 21.4439Z\"\n        fill=\"#E3A23C\"\n      />\n      <path\n        d=\"M1.13226 20.4766H6.79355C7.4729 20.4766 7.92581 20.9295 7.92581 21.6088V39.0016H1.13226C0.452903 39.0016 0 38.5487 0 37.8693V21.6088C0 20.9295 0.452903 20.4766 1.13226 20.4766Z\"\n        fill=\"#F9D448\"\n      />\n      <path\n        d=\"M30.5717 20.4766H36.233C36.9124 20.4766 37.3653 20.9295 37.3653 21.6088V37.8693C37.3653 38.5487 36.9124 39.0016 36.233 39.0016H29.4395V21.6088C29.4395 20.9295 29.8924 20.4766 30.5717 20.4766Z\"\n        fill=\"#F9D448\"\n      />\n    </svg>\n  );\n};\n\nexport const LightningProgressSvg = ({ size = 56 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 56 56\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M32.082 10.2876C31.7904 7.41973 28.1083 6.43313 26.4218 8.77092L12.5412 28.0121C11.2575 29.7916 12.1524 32.3055 14.2719 32.8734L22.1682 34.9892L23.3346 46.4591C23.6262 49.327 27.3083 50.3135 28.9948 47.9758L42.8754 28.7346C44.1592 26.9551 43.2642 24.4412 41.1447 23.8733L33.2485 21.7575L32.082 10.2876Z\"\n        fill=\"#FFD900\"\n      />\n      <path\n        d=\"M15.2647 30.5578C14.5466 30.3639 14.4773 29.3724 15.1614 29.0805L20.6493 26.739C21.1448 26.5276 21.7009 26.8677 21.7385 27.4051L22.011 31.3016C22.0485 31.839 21.5452 32.2531 21.0251 32.1127L15.2647 30.5578Z\"\n        fill=\"#F7C100\"\n      />\n      <path\n        d=\"M40.4157 25.8056C41.1338 25.9995 41.2031 26.991 40.519 27.2829L35.0311 29.6244C34.5356 29.8358 33.9795 29.4957 33.9419 28.9583L33.6695 25.0618C33.6319 24.5244 34.1353 24.1103 34.6554 24.2507L40.4157 25.8056Z\"\n        fill=\"#FFEF8F\"\n      />\n    </svg>\n  );\n};\n\nexport const ChevronLeftSvg = () => {\n  return (\n    <svg height=\"40\" viewBox=\"0 96 960 960\" width=\"40\">\n      <path\n        fill=\"currentColor\"\n        d=\"M560.667 822.377 313.623 575.333 560.667 328.29l53.71 53.71-193.334 193.333 193.334 193.334-53.71 53.71Z\"\n      />\n    </svg>\n  );\n};\n\nexport const ChevronRightSvg = () => {\n  return (\n    <svg height=\"40\" viewBox=\"0 96 960 960\" width=\"40\">\n      <path\n        fill=\"currentColor\"\n        d=\"m375.333 822.377-53.71-53.71 193.334-193.334L321.623 382l53.71-53.71 247.044 247.043-247.044 247.044Z\"\n      />\n    </svg>\n  );\n};\n\nexport const CheckmarkSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_7030_116512)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M18.5239 18.112L14.4053 13.9934C13.1459 12.734 11.104 12.734 9.84455 13.9934C8.58514 15.2528 8.58514 17.2947 9.84455 18.5541L16.1331 24.8427C16.7889 25.4985 17.6569 25.8128 18.5161 25.7856C19.3802 25.817 20.2545 25.5028 20.9142 24.8432L32.2521 13.5053C33.5115 12.2459 33.5115 10.204 32.2521 8.94456C30.9927 7.68515 28.9508 7.68515 27.6914 8.94456L18.5239 18.112Z\"\n          fill=\"#CD7900\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_7030_116512\">\n          <rect\n            width=\"24.2966\"\n            height=\"17.7878\"\n            fill=\"white\"\n            transform=\"translate(8.89999 8)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const GoldenShineSvg = () => {\n  return (\n    <svg width=\"56\" height=\"46\" viewBox=\"0 0 56 46\" fill=\"none\">\n      <path\n        d=\"M34.2346 3.25135C35.3157 2.1269 34.7053 0.276787 33.1512 0.143156C32.0512 0.0485729 30.9331 0 29.8002 0C13.342 0 0 10.2517 0 22.8979C0 26.3985 1.02236 29.7157 2.85016 32.6827C3.47761 33.7012 4.88715 33.7751 5.71626 32.9128L34.2346 3.25135Z\"\n        fill=\"#FFE700\"\n      />\n      <path\n        d=\"M55.0954 12.5231C53.3548 9.61289 49.8186 6.8733 47.2219 5.21074C46.2417 4.58319 44.9772 4.77038 44.1616 5.60066C34.5035 15.4328 18.3374 31.8498 12.05 38.0427C10.9724 39.1041 10.996 40.8688 12.249 41.716C16.2271 44.4058 20.9121 45.5851 23.4852 45.9072C24.1853 45.9949 24.8657 45.7259 25.3691 45.2315C34.775 35.9934 50.2041 19.9015 54.7166 15.0879C55.3787 14.3818 55.5923 13.3539 55.0954 12.5231Z\"\n        fill=\"#FFE700\"\n      />\n    </svg>\n  );\n};\n\nexport const StarSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_7030_116432)\">\n        <path\n          d=\"M18.7521 4.41157C19.6598 2.52948 22.3402 2.52948 23.2479 4.41157L25.8539 9.81517C26.225 10.5847 26.9639 11.1109 27.8125 11.2099L33.7906 11.9076C35.9269 12.1569 36.7684 14.8114 35.1658 16.2459L30.8845 20.0785C30.224 20.6697 29.9267 21.567 30.1035 22.4357L31.2468 28.053C31.6684 30.124 29.4857 31.7487 27.6228 30.7506L22.1786 27.8339C21.4424 27.4395 20.5576 27.4395 19.8214 27.8339L14.3772 30.7506C12.5143 31.7487 10.3316 30.124 10.7532 28.053L11.8965 22.4357C12.0733 21.567 11.776 20.6697 11.1155 20.0785L6.83415 16.2459C5.23162 14.8114 6.07307 12.1569 8.20939 11.9076L14.1875 11.2099C15.0361 11.1109 15.775 10.5847 16.1461 9.81517L18.7521 4.41157Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_7030_116432\">\n          <rect\n            width=\"30\"\n            height=\"28\"\n            fill=\"white\"\n            transform=\"translate(6 3)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const LockedBookSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        d=\"M42 8.49236C42 6.4901 40.3329 4.86694 38.2765 4.86694H29.9359C24.4521 4.86694 20.0066 9.19536 20.0066 14.5347V31.8401C20.0066 32.5075 20.5686 33.0638 21.2481 32.9753C25.129 32.4696 23.7034 29.5177 30.4323 29.5177C32.3039 29.5177 36.1106 29.5177 38.2776 29.5177C40.3341 29.5177 42 27.8945 42 25.8923V8.49236Z\"\n        fill=\"#AFAFAF\"\n      />\n      <path\n        d=\"M0 8.49237C0 6.4901 1.66706 4.86694 3.72348 4.86694H12.0641C17.5479 4.86694 21.9934 9.19536 21.9934 14.5347V31.8401C21.9934 32.5075 21.4313 33.0594 20.749 32.9948C15.97 32.5427 18.3992 29.3905 11.5676 29.3905C9.69604 29.3905 5.88932 29.3905 3.72233 29.3905C1.66591 29.3905 0 27.7673 0 25.765V8.49237Z\"\n        fill=\"#AFAFAF\"\n      />\n      <path\n        d=\"M36.8864 3.90058C36.8864 2.29877 35.5527 1.00024 33.9076 1.00024H27.95C23.563 1.00024 20.0066 4.46298 20.0066 8.73448V26.1365C20.0066 26.6704 20.4591 27.1221 20.9949 27.0082C23.3482 26.5078 23.1355 24.2029 28.4465 24.2029C29.9718 24.2029 32.1481 24.2029 33.9087 24.2029C35.5538 24.2029 36.8864 22.9044 36.8864 21.3026V3.90058Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M5.11316 3.90058C5.11316 2.29877 6.44681 1.00024 8.09194 1.00024H14.0495C18.4366 1.00024 21.9929 4.46298 21.9929 8.73448V26.1365C21.9929 26.6704 21.5445 27.1184 21.0036 27.0307C18.236 26.5817 18.9484 24.2029 13.5531 24.2029C12.0277 24.2029 9.85141 24.2029 8.09083 24.2029C6.44569 24.2029 5.11316 22.9044 5.11316 21.3026V3.90058Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        opacity=\"0.4\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5113 3.11898C20.0999 3.66189 20.6032 4.29157 20.9995 4.987C21.3964 4.29065 21.9005 3.66022 22.4901 3.11682V26.2959C22.2659 26.4645 22.0336 26.6186 21.769 26.7459C21.5866 26.9583 21.3098 27.0806 21.0034 27.0308C20.9797 27.027 20.9563 27.023 20.9332 27.0189C20.7276 27.0465 20.5368 26.9915 20.3824 26.8822C20.0419 26.7707 19.7625 26.6235 19.5113 26.4552V3.11898Z\"\n        fill=\"#AFAFAF\"\n      />\n    </svg>\n  );\n};\n\nexport const ActiveBookSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5113 8.14018C17.6919 6.13294 15.0298 4.86694 12.0641 4.86694H3.72348C1.66706 4.86694 0 6.4901 0 8.49237V25.765C0 27.7673 1.66591 29.3905 3.72233 29.3905H11.5676C15.368 29.3905 16.3025 30.366 17.2063 31.3095C17.9272 32.062 18.6285 32.7942 20.749 32.9948C20.853 33.0046 20.9541 33.0002 21.0509 32.9832C21.1152 32.9865 21.1811 32.984 21.2481 32.9753C22.8488 32.7667 23.5467 32.142 24.2865 31.4799C25.3402 30.5367 26.4787 29.5177 30.4323 29.5177H38.2776C40.3341 29.5177 42 27.8945 42 25.8923V8.49236C42 6.4901 40.3329 4.86694 38.2765 4.86694H29.9359C26.9709 4.86694 24.3095 6.13229 22.4901 8.13863V26.2959C22.2659 26.4645 22.0336 26.6186 21.769 26.7459C21.5866 26.9583 21.3098 27.0806 21.0034 27.0308C20.9797 27.027 20.9563 27.023 20.9332 27.0189C20.7276 27.0465 20.5368 26.9915 20.3824 26.8822C20.0419 26.7707 19.7625 26.6235 19.5113 26.4552V8.14018Z\"\n        fill=\"black\"\n        fillOpacity=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.11316 3.90058C5.11316 2.29877 6.44681 1.00024 8.09194 1.00024H14.0495C17.04 1.00024 19.6446 2.60928 20.9997 4.9867C20.9997 4.9868 20.9996 4.9869 20.9995 4.987C20.6032 4.29157 20.0999 3.66189 19.5113 3.11898V26.4549C19.2475 26.2781 19.0148 26.0781 18.7751 25.8721C17.8556 25.0819 16.8328 24.2029 13.5531 24.2029H8.09083C6.44569 24.2029 5.11316 22.9044 5.11316 21.3026V3.90058ZM21.5861 26.9072C21.6541 26.8626 21.7157 26.8081 21.7691 26.7458C22.2102 26.5336 22.5617 26.247 22.9349 25.9427C23.9252 25.1353 25.0687 24.2029 28.4465 24.2029H33.9087C35.5538 24.2029 36.8864 22.9044 36.8864 21.3026V3.90058C36.8864 2.29877 35.5527 1.00024 33.9076 1.00024H27.95C25.8352 1.00024 23.9135 1.80489 22.4901 3.1169V26.2959C22.2659 26.4645 22.0336 26.6186 21.769 26.7459C21.7156 26.8081 21.6541 26.8626 21.5861 26.9072Z\"\n        fill=\"white\"\n      />\n      <path\n        opacity=\"0.4\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5113 3.11898C20.0999 3.66189 20.6032 4.29157 20.9995 4.987C21.3964 4.29065 21.9005 3.66022 22.4901 3.11682V26.2959C22.2659 26.4645 22.0336 26.6186 21.769 26.7459C21.5866 26.9583 21.3098 27.0806 21.0034 27.0308C20.9797 27.027 20.9563 27.023 20.9332 27.0189C20.7276 27.0465 20.5368 26.9915 20.3824 26.8822C20.0419 26.7707 19.7625 26.6235 19.5113 26.4552V3.11898Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const GoldenBookSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        d=\"M42 8.49241C42 6.49014 40.3329 4.86699 38.2765 4.86699H29.9359C24.4521 4.86699 20.0066 9.19541 20.0066 14.5348V31.8401C20.0066 32.5075 20.5687 33.0638 21.2481 32.9753C25.1291 32.4696 23.7034 29.5177 30.4324 29.5177C32.304 29.5177 36.1107 29.5177 38.2777 29.5177C40.3341 29.5177 42 27.8946 42 25.8923V8.49241Z\"\n        fill=\"#CD7900\"\n      />\n      <path\n        d=\"M0 8.49241C0 6.49015 1.66706 4.86699 3.72348 4.86699H12.0641C17.5479 4.86699 21.9934 9.19541 21.9934 14.5348V31.8401C21.9934 32.5075 21.4313 33.0594 20.749 32.9949C15.97 32.5427 18.3992 29.3905 11.5676 29.3905C9.69604 29.3905 5.88932 29.3905 3.72233 29.3905C1.66591 29.3905 0 27.7674 0 25.7651V8.49241Z\"\n        fill=\"#CD7900\"\n      />\n      <path\n        d=\"M36.8864 3.90056C36.8864 2.29875 35.5528 1.00023 33.9076 1.00023H27.95C23.563 1.00023 20.0066 4.46296 20.0066 8.73446V26.1365C20.0066 26.6704 20.4592 27.1221 20.9949 27.0082C23.3482 26.5078 23.1356 24.2029 28.4465 24.2029C29.9719 24.2029 32.1482 24.2029 33.9087 24.2029C35.5539 24.2029 36.8864 22.9044 36.8864 21.3026V3.90056Z\"\n        fill=\"#FFF1C0\"\n      />\n      <path\n        d=\"M5.11316 3.90056C5.11316 2.29875 6.44681 1.00023 8.09194 1.00023H14.0495C18.4366 1.00023 21.9929 4.46296 21.9929 8.73446V26.1365C21.9929 26.6704 21.5445 27.1184 21.0036 27.0307C18.236 26.5817 18.9484 24.2029 13.5531 24.2029C12.0277 24.2029 9.85141 24.2029 8.09083 24.2029C6.44569 24.2029 5.11316 22.9044 5.11316 21.3026V3.90056Z\"\n        fill=\"#FFF1C0\"\n      />\n      <path\n        opacity=\"0.4\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5113 3.11903C20.0999 3.66193 20.6032 4.29162 20.9996 4.98705C21.3965 4.2907 21.9005 3.66027 22.4901 3.11687V26.2959C22.2659 26.4645 22.0336 26.6186 21.769 26.7459C21.5866 26.9584 21.3099 27.0806 21.0034 27.0309C20.9797 27.0271 20.9564 27.0231 20.9332 27.019C20.7277 27.0466 20.5368 26.9915 20.3824 26.8822C20.0419 26.7708 19.7625 26.6235 19.5113 26.4552V3.11903Z\"\n        fill=\"#E6A000\"\n      />\n    </svg>\n  );\n};\n\nexport const LockedDumbbellSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_334_225170)\">\n        <line\n          x1=\"16\"\n          y1=\"20.3246\"\n          x2=\"24.7589\"\n          y2=\"15.2676\"\n          stroke=\"#AFAFAF\"\n          strokeWidth={4}\n        />\n        <rect\n          x=\"17.7635\"\n          y=\"3.66309\"\n          width=\"9.1025\"\n          height=\"26.2961\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 17.7635 3.66309)\"\n          fill=\"#AFAFAF\"\n        />\n        <rect\n          x=\"2.87354\"\n          y=\"12.2598\"\n          width=\"9.1025\"\n          height=\"26.2961\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 2.87354 12.2598)\"\n          fill=\"#AFAFAF\"\n        />\n        <rect\n          x=\"25.9183\"\n          y=\"3.62891\"\n          width=\"9.1025\"\n          height=\"18.205\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 25.9183 3.62891)\"\n          fill=\"#AFAFAF\"\n        />\n        <rect\n          x=\"-1.23499\"\n          y=\"19.3027\"\n          width=\"9.1025\"\n          height=\"18.205\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 -1.23499 19.3027)\"\n          fill=\"#AFAFAF\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"2.81079\"\n          y=\"20.3145\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 2.81079 20.3145)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"31.1294\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 31.1294 5.14355)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"6.85596\"\n          y=\"13.2354\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 6.85596 13.2354)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"22.027\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 22.027 5.14355)\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_334_225170\">\n          <rect width=\"42\" height=\"34\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const ActiveDumbbellSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_334_225192)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.8461 15.9274L17.8332 19.9763L16.3162 17.3486L23.329 13.2998L24.8461 15.9274Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.8148 9.98445C4.63797 11.2412 3.89214 14.0247 5.14893 16.2016L5.27901 16.4269C4.41076 16.3693 3.51657 16.5597 2.7064 17.0274C0.529574 18.2842 -0.216264 21.0677 1.04053 23.2445L5.59178 31.1275C6.84857 33.3044 9.63207 34.0502 11.8089 32.7934C12.6191 32.3257 13.231 31.6464 13.6153 30.8657L13.7457 31.0917C15.0025 33.2685 17.786 34.0143 19.9629 32.7575C22.1397 31.5008 22.8855 28.7172 21.6287 26.5404L13.0319 11.6503C11.7751 9.47349 8.99163 8.72766 6.8148 9.98445Z\"\n          fill=\"black\"\n          fillOpacity=\"0.3\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M21.7049 1.38844C19.5281 2.64523 18.7823 5.42873 20.0391 7.60556L28.6359 22.4957C29.8926 24.6725 32.6761 25.4183 34.853 24.1615C37.0298 22.9047 37.7756 20.1212 36.5188 17.9444L36.3892 17.7198C37.2575 17.7774 38.1519 17.5871 38.9622 17.1193C41.139 15.8625 41.8849 13.079 40.6281 10.9022L36.0768 3.01915C34.82 0.842324 32.0365 0.0964886 29.8597 1.35328C29.0494 1.82111 28.4374 2.50048 28.0531 3.28136L27.922 3.05431C26.6653 0.877481 23.8818 0.131645 21.7049 1.38844Z\"\n          fill=\"black\"\n          fillOpacity=\"0.3\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"2.81067\"\n          y=\"20.3154\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 2.81067 20.3154)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"31.1292\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 31.1292 5.14355)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"22.0269\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 22.0269 5.14355)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"6.85583\"\n          y=\"13.2363\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 6.85583 13.2363)\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_334_225192\">\n          <rect width=\"42\" height=\"34\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const GoldenDumbbellSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_334_225119)\">\n        <line\n          x1=\"16\"\n          y1=\"20.3246\"\n          x2=\"24.7589\"\n          y2=\"15.2676\"\n          stroke=\"#E6A000\"\n          strokeWidth=\"4\"\n        />\n        <rect\n          x=\"17.7635\"\n          y=\"3.66309\"\n          width=\"9.1025\"\n          height=\"26.2961\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 17.7635 3.66309)\"\n          fill=\"#CD7900\"\n        />\n        <rect\n          x=\"2.87354\"\n          y=\"12.2598\"\n          width=\"9.1025\"\n          height=\"26.2961\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 2.87354 12.2598)\"\n          fill=\"#CD7900\"\n        />\n        <rect\n          x=\"25.9184\"\n          y=\"3.62891\"\n          width=\"9.1025\"\n          height=\"18.205\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 25.9184 3.62891)\"\n          fill=\"#CD7900\"\n        />\n        <rect\n          x=\"-1.23499\"\n          y=\"19.3027\"\n          width=\"9.1025\"\n          height=\"18.205\"\n          rx=\"4.55125\"\n          transform=\"rotate(-30 -1.23499 19.3027)\"\n          fill=\"#CD7900\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"2.81079\"\n          y=\"20.3145\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 2.81079 20.3145)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"31.1294\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"5.05694\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 31.1294 5.14355)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"6.85596\"\n          y=\"13.2354\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 6.85596 13.2354)\"\n          fill=\"white\"\n        />\n        <rect\n          opacity=\"0.2\"\n          x=\"22.0269\"\n          y=\"5.14355\"\n          width=\"3.03417\"\n          height=\"6.06833\"\n          rx=\"1.51708\"\n          transform=\"rotate(-30 22.0269 5.14355)\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_334_225119\">\n          <rect width=\"42\" height=\"34\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const GuidebookSvg = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path\n        d=\"M0.019043 4.83285C0.019043 4.10489 0.609167 3.51477 1.33712 3.51477H3.09456C3.82251 3.51477 4.41264 4.10489 4.41264 4.83285C4.41264 5.5608 3.82251 6.15093 3.09456 6.15093H1.33712C0.609167 6.15093 0.019043 5.5608 0.019043 4.83285Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M0.019043 11.8628C0.019043 11.1348 0.609167 10.5447 1.33712 10.5447H3.09456C3.82251 10.5447 4.41264 11.1348 4.41264 11.8628C4.41264 12.5907 3.82251 13.1808 3.09456 13.1808H1.33712C0.609167 13.1808 0.019043 12.5907 0.019043 11.8628Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M0.019043 18.8923C0.019043 18.1643 0.609167 17.5742 1.33712 17.5742H3.09456C3.82251 17.5742 4.41264 18.1643 4.41264 18.8923C4.41264 19.6202 3.82251 20.2104 3.09456 20.2104H1.33712C0.609167 20.2104 0.019043 19.6202 0.019043 18.8923Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.65527 3.51493V6.15108H3.09466C3.82261 6.15108 4.41274 5.56096 4.41274 4.83301C4.41274 4.10505 3.82261 3.51493 3.09466 3.51493H2.65527ZM3.09466 1.75749H3.09349C3.68239 0.708669 4.80532 0 6.09377 0H20.4134C22.3125 0 23.8519 1.53947 23.8519 3.4385V20.2869C23.8519 22.1859 22.3125 23.7254 20.4134 23.7254H6.09377C4.80535 23.7254 3.68244 23.0168 3.09353 21.968H3.09464C4.7932 21.968 6.17016 20.591 6.17016 18.8925C6.17016 17.1939 4.7932 15.817 3.09464 15.817H2.65527V14.9383H3.09464C4.7932 14.9383 6.17016 13.5614 6.17016 11.8628C6.17016 10.1643 4.7932 8.78731 3.09464 8.78731H2.65527V7.90852H3.09466C4.79322 7.90852 6.17017 6.53157 6.17017 4.83301C6.17017 3.13445 4.79322 1.75749 3.09466 1.75749ZM3.09464 20.2105H2.65527V17.5744H3.09464C3.8226 17.5744 4.41272 18.1645 4.41272 18.8925C4.41272 19.6204 3.8226 20.2105 3.09464 20.2105ZM3.09464 13.1809H2.65527V10.5448H3.09464C3.8226 10.5448 4.41272 11.1349 4.41272 11.8628C4.41272 12.5908 3.8226 13.1809 3.09464 13.1809ZM9.90473 3.95423C9.2981 3.95423 8.80633 4.446 8.80633 5.05263C8.80633 5.65926 9.2981 6.15103 9.90473 6.15103H19.1313C19.7379 6.15103 20.2297 5.65926 20.2297 5.05263C20.2297 4.446 19.7379 3.95423 19.1313 3.95423H9.90473ZM8.80633 10.3249C8.80633 9.71831 9.2981 9.22654 9.90473 9.22654H19.1313C19.7379 9.22654 20.2297 9.71831 20.2297 10.3249C20.2297 10.9316 19.7379 11.4233 19.1313 11.4233H9.90473C9.2981 11.4233 8.80633 10.9316 8.80633 10.3249ZM9.90473 14.4989C9.2981 14.4989 8.80633 14.9906 8.80633 15.5973C8.80633 16.2039 9.2981 16.6957 9.90473 16.6957H16.4951C17.1017 16.6957 17.5935 16.2039 17.5935 15.5973C17.5935 14.9906 17.1017 14.4989 16.4951 14.4989H9.90473Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const PracticeExerciseSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg width=\"23\" height=\"19\" viewBox=\"0 0 23 19\" {...props}>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g fill=\"#1CB0F6\" fillRule=\"nonzero\">\n          <g>\n            <g>\n              <g>\n                <g>\n                  <g>\n                    <g>\n                      <path d=\"M4.157 17.781a1.5 1.5 0 0 0 2.598-1.5l-3.5-6.062a1.5 1.5 0 0 0-2.598 1.5l3.5 6.062zm4.463-.268a1.5 1.5 0 0 0 2.599-1.5l-5.5-9.526a1.5 1.5 0 0 0-2.598 1.5l5.5 9.526zM18.843 1.219a1.5 1.5 0 0 0-2.598 1.5l3.5 6.062a1.5 1.5 0 0 0 2.598-1.5l-3.5-6.062zm-4.463.268a1.5 1.5 0 0 0-2.599 1.5l5.5 9.526a1.5 1.5 0 0 0 2.598-1.5l-5.5-9.526zm.035 8.062l-1.5-2.598-4.33 2.5 1.5 2.598z\" />\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const UpArrowSvg = () => {\n  return (\n    <svg width=\"18\" height=\"20\" viewBox=\"0 0 18 20\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0.820019 7.29641C-0.00641216 8.12284 -0.00641276 9.46275 0.820019 10.2892C1.64645 11.1156 2.98636 11.1156 3.81279 10.2892L6.89729 7.20468V17.8841C6.89729 19.0529 7.84474 20.0004 9.01349 20.0004C10.1822 20.0004 11.1297 19.0529 11.1297 17.8841V7.22501L14.1939 10.2892C15.0203 11.1156 16.3602 11.1156 17.1866 10.2892C18.0131 9.46275 18.0131 8.12284 17.1866 7.29641L10.5101 0.619824C10.0944 0.204119 9.54675 -0.00261376 9.00332 2.49416e-05C8.45989 -0.00261173 7.9123 0.204122 7.4966 0.619823L0.820019 7.29641Z\"\n        fill=\"#1CB0F6\"\n      />\n    </svg>\n  );\n};\n\nexport const FastForwardSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <g clipPath=\"url(#clip0_7030_116434)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M22.0423 14.9989C23.4698 15.8749 23.4698 17.9491 22.0423 18.825L8.91839 26.8783C7.42288 27.796 5.5 26.7199 5.5 24.9653L5.5 8.85865C5.5 7.10401 7.42288 6.02791 8.9184 6.94562L22.0423 14.9989Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M35.4535 14.9989C36.881 15.8749 36.881 17.9491 35.4535 18.825L22.3296 26.8783C20.8341 27.796 18.9112 26.7199 18.9112 24.9653L18.9112 8.85865C18.9112 7.10401 20.8341 6.02791 22.3296 6.94562L35.4535 14.9989Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_7030_116434\">\n          <rect\n            width=\"31\"\n            height=\"30\"\n            fill=\"white\"\n            transform=\"translate(5.5 2)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const LockedTrophySvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.0867 0.656357C11.241 -0.566997 7.97179 1.50405 7.97179 4.66166V13.4091C7.97179 19.8104 12.3546 25.1645 18.2181 26.5027C19.2287 26.8827 19.5393 27.3939 19.5793 27.8013V27.8899L19.579 27.8896L19.5793 27.8957V27.9759C19.5687 28.2279 19.4591 28.5701 19.1536 28.8471H15.9409C15.1526 28.8471 14.5136 29.4861 14.5136 30.2744C14.5136 30.435 14.5401 30.5893 14.5889 30.7333H13.0182C12.2272 30.7333 11.5859 31.3746 11.5859 32.1657C11.5859 32.9568 12.2272 33.598 13.0182 33.598H28.7601C29.5512 33.598 30.1925 32.9568 30.1925 32.1657C30.1925 31.3746 29.5512 30.7333 28.7601 30.7333H27.4615C27.5103 30.5893 27.5368 30.435 27.5368 30.2744C27.5368 29.4861 26.8978 28.8471 26.1095 28.8471H22.8507C22.5685 28.6241 22.4241 28.3499 22.3681 28.1133V27.8309C22.4457 27.3726 22.8765 26.805 24.2268 26.4375C29.9533 24.998 34.2011 19.711 34.2011 13.4091V4.66166C34.2011 1.50405 30.9319 -0.566996 28.0862 0.656358C25.4325 1.79713 22.5919 2.84158 21.0864 2.84158C19.581 2.84158 16.7403 1.79713 14.0867 0.656357ZM4.35009 16.3748C2.6223 15.4664 1.68222 13.4485 2.20034 11.4887C2.30684 11.0859 2.71874 10.8494 3.12034 10.9605L3.25989 10.9991C4.46034 11.3312 5.40222 12.1498 5.93 13.1841C6.27824 13.3866 6.50967 13.7663 6.50263 14.1977C6.48629 15.1997 6.65091 16.9075 7.20872 18.6485C7.76885 20.3967 8.68562 22.0565 10.0855 23.122C10.5909 23.5066 10.6887 24.2281 10.3041 24.7335C10.2195 24.8446 10.1187 24.936 10.0075 25.0069C9.05615 26.8441 6.86647 27.7005 4.88711 26.9278C4.50596 26.7791 4.31291 26.3477 4.45591 25.9643L4.57108 25.6556C5.00725 24.4863 5.91081 23.6374 6.98825 23.2401C6.67974 22.8379 6.40435 22.4164 6.15877 21.9847C4.26086 22.3411 2.32119 21.3362 1.55668 19.4685C1.39911 19.0836 1.58132 18.6388 1.96365 18.475L2.11386 18.4107C2.9626 18.0472 3.85995 17.9849 4.68935 18.1762C4.53785 17.5503 4.42727 16.9423 4.35009 16.3748ZM35.6154 13.2459C35.3208 13.4585 35.1315 13.8069 35.1379 14.1977C35.1542 15.1997 34.9896 16.9075 34.4318 18.6485C33.8717 20.3967 32.9549 22.0565 31.555 23.122C31.0496 23.5066 30.9518 24.2281 31.3364 24.7335C31.4351 24.8632 31.556 24.9661 31.6897 25.0408C32.6503 26.8546 34.8252 27.6957 36.7924 26.9278C37.1735 26.7791 37.3666 26.3477 37.2236 25.9643L37.1084 25.6556C36.6681 24.4753 35.7516 23.6214 34.6608 23.229C34.9786 22.8134 35.2612 22.3774 35.5122 21.9309C37.4859 22.4262 39.5623 21.4168 40.3598 19.4685C40.5174 19.0836 40.3352 18.6388 39.9528 18.475L39.8026 18.4107C38.852 18.0035 37.8405 17.9743 36.9317 18.2559C37.0997 17.5756 37.2193 16.9152 37.3 16.3035C39.0398 15.3373 39.9272 13.2427 39.3135 11.2768C39.1894 10.8792 38.7679 10.6618 38.372 10.7911L38.2291 10.8378C37.0073 11.2369 36.0835 12.1414 35.6154 13.2459Z\"\n        fill=\"#AFAFAF\"\n      />\n    </svg>\n  );\n};\n\nexport const ActiveTrophySvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.0867 0.656406C11.241 -0.566948 7.97179 1.5041 7.97179 4.66171V13.4091C7.97179 19.8104 12.3546 25.1645 18.2181 26.5027C19.2287 26.8828 19.5393 27.3939 19.5793 27.8013V27.8899L19.579 27.8896L19.5793 27.8958V27.9759C19.5687 28.2279 19.4591 28.5701 19.1536 28.8471H15.9409C15.1526 28.8471 14.5136 29.4862 14.5136 30.2745C14.5136 30.435 14.5401 30.5894 14.5889 30.7334H13.0182C12.2272 30.7334 11.5859 31.3747 11.5859 32.1657C11.5859 32.9568 12.2272 33.5981 13.0182 33.5981H28.7601C29.5512 33.5981 30.1925 32.9568 30.1925 32.1657C30.1925 31.3747 29.5512 30.7334 28.7601 30.7334H27.4615C27.5103 30.5894 27.5368 30.435 27.5368 30.2745C27.5368 29.4862 26.8978 28.8471 26.1095 28.8471H22.8507C22.5685 28.6242 22.4241 28.35 22.3681 28.1133V27.831C22.4457 27.3727 22.8765 26.805 24.2268 26.4375C29.9533 24.998 34.2011 19.711 34.2011 13.4091V4.66171C34.2011 1.5041 30.9319 -0.566947 28.0862 0.656407C25.4325 1.79718 22.5919 2.84163 21.0864 2.84163C19.581 2.84163 16.7403 1.79718 14.0867 0.656406ZM4.35009 16.3748C2.6223 15.4664 1.68222 13.4485 2.20034 11.4888C2.30684 11.0859 2.71874 10.8494 3.12034 10.9605L3.25989 10.9991C4.46034 11.3312 5.40222 12.1499 5.93 13.1842C6.27824 13.3866 6.50967 13.7664 6.50263 14.1978C6.48629 15.1998 6.65091 16.9075 7.20872 18.6485C7.76885 20.3967 8.68562 22.0566 10.0855 23.122C10.5909 23.5067 10.6887 24.2282 10.3041 24.7336C10.2195 24.8447 10.1187 24.9361 10.0075 25.007C9.05615 26.8441 6.86647 27.7005 4.88711 26.9279C4.50596 26.7791 4.31291 26.3477 4.45591 25.9644L4.57108 25.6556C5.00725 24.4864 5.91081 23.6374 6.98825 23.2401C6.67974 22.8379 6.40435 22.4165 6.15877 21.9847C4.26086 22.3411 2.32119 21.3362 1.55668 19.4686C1.39911 19.0837 1.58132 18.6389 1.96365 18.4751L2.11386 18.4107C2.9626 18.0472 3.85995 17.9849 4.68935 18.1762C4.53785 17.5503 4.42727 16.9424 4.35009 16.3748ZM35.6154 13.2459C35.3208 13.4585 35.1315 13.807 35.1379 14.1978C35.1542 15.1998 34.9896 16.9075 34.4318 18.6485C33.8717 20.3967 32.9549 22.0566 31.555 23.122C31.0496 23.5067 30.9518 24.2282 31.3364 24.7336C31.4351 24.8633 31.556 24.9661 31.6897 25.0409C32.6503 26.8546 34.8252 27.6957 36.7924 26.9279C37.1735 26.7791 37.3666 26.3477 37.2236 25.9644L37.1084 25.6556C36.6681 24.4754 35.7516 23.6215 34.6608 23.229C34.9786 22.8135 35.2612 22.3774 35.5122 21.9309C37.4859 22.4263 39.5623 21.4169 40.3598 19.4686C40.5174 19.0837 40.3352 18.6389 39.9528 18.4751L39.8026 18.4108C38.852 18.0036 37.8405 17.9743 36.9317 18.256C37.0997 17.5757 37.2193 16.9153 37.3 16.3036C39.0398 15.3374 39.9272 13.2427 39.3135 11.2768C39.1894 10.8793 38.7679 10.6618 38.372 10.7912L38.2291 10.8379C37.0073 11.2369 36.0835 12.1415 35.6154 13.2459Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const GoldenTrophySvg = () => {\n  return (\n    <svg width=\"105\" height=\"89\" viewBox=\"0 0 105 89\" fill=\"none\">\n      <ellipse\n        cx=\"52.5564\"\n        cy=\"67.7784\"\n        rx=\"22.4297\"\n        ry=\"20.3697\"\n        fill=\"#FFB800\"\n      />\n      <ellipse\n        cx=\"52.5564\"\n        cy=\"62.6959\"\n        rx=\"22.4297\"\n        ry=\"20.3697\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M35.2837 71.8353C37.0692 74.9453 41.8904 78.7941 46.7356 80.0312\"\n        stroke=\"#FFF500\"\n        strokeWidth=\"4.6734\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M40.97 69.3791C41.9876 71.1516 44.7353 73.3452 47.4968 74.0502\"\n        stroke=\"#FFF500\"\n        strokeWidth=\"4.6734\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M68.2007 64.1053C68.2007 70.8805 61.5298 76.8096 52.7121 76.8096C43.8943 76.8096 37.2235 70.8805 37.2235 64.1053C37.2235 57.3301 43.8943 51.401 52.7121 51.401C61.5298 51.401 68.2007 57.3301 68.2007 64.1053Z\"\n        stroke=\"#FFB800\"\n        strokeWidth=\"3.01241\"\n      />\n      <path\n        d=\"M17.3816 11.4355C17.3816 3.1568 26.1494 -2.27311 33.7815 0.934306C40.8985 3.92521 48.517 6.66357 52.5545 6.66357C56.5921 6.66357 64.2106 3.92521 71.3275 0.934308C78.9597 -2.27311 87.7275 3.1568 87.7275 11.4355V34.3697C87.7275 53.7952 71.98 69.5427 52.5545 69.5427C33.1291 69.5427 17.3816 53.7952 17.3816 34.3697V11.4355Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M87.7275 21.0444C86.643 41.5035 69.7102 57.7589 48.9808 57.7589C36.5675 57.7589 25.5156 51.9298 18.4131 42.8596C17.7392 40.1407 17.3816 37.297 17.3816 34.3697V11.4355C17.3816 3.1568 26.1494 -2.27311 33.7815 0.934306C40.8985 3.92521 48.517 6.66357 52.5545 6.66357C56.5921 6.66357 64.2106 3.92521 71.3275 0.934308C78.9597 -2.27311 87.7275 3.1568 87.7275 11.4355V21.0444Z\"\n        fill=\"#FFD600\"\n      />\n      <circle cx=\"29.6788\" cy=\"11.2542\" r=\"6.94978\" fill=\"#FFF500\" />\n      <path\n        d=\"M58.7405 13.872C64.2067 12.9001 67.262 11.6908 71.377 9.41648\"\n        stroke=\"#FFF500\"\n        strokeWidth=\"9.29181\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.26014 26.1716C3.24474 25.897 2.19899 26.4976 1.92438 27.513L1.79236 28.0011C0.251515 33.6987 3.62117 39.5665 9.31868 41.1073L10.0909 41.3162C10.2291 42.5931 10.495 44.0908 10.9274 45.6959C8.28389 44.4473 5.14154 44.2821 2.23252 45.5002L1.16946 45.9454C0.199208 46.3516 -0.257982 47.4675 0.148295 48.4378L0.343623 48.9043C2.62328 54.3484 8.88469 56.9138 14.3289 54.6341L14.8702 54.4075C15.5961 55.4647 16.4218 56.4893 17.3585 57.4489C13.4278 57.8114 9.85 60.3467 8.3477 64.2837L7.93681 65.3604C7.5618 66.3432 8.05448 67.4439 9.03724 67.8189L9.50972 67.9992C15.0241 70.1034 21.2002 67.3389 23.3044 61.8246L23.7153 60.7478C23.9141 60.2269 23.869 59.6728 23.6364 59.2112C23.5574 58.8347 23.3276 58.4909 22.9715 58.2775C19.8938 56.4338 17.6739 53.7916 16.1067 50.9741C15.9303 50.5815 15.733 50.2045 15.5165 49.844C15.354 49.5123 15.2 49.1793 15.0541 48.8461C13.5172 45.3356 12.9251 41.8875 12.8428 39.7864L12.899 39.5787C14.4398 33.8812 11.0702 28.0133 5.37267 26.4725L4.26014 26.1716Z\"\n        fill=\"#FFF500\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M99.0225 25.7233C100.025 25.4034 101.096 25.9563 101.416 26.9583L101.57 27.4401C103.365 33.0626 100.263 39.076 94.6403 40.8713L93.9755 41.0836C93.8396 42.4669 93.5502 44.1295 93.0544 45.9174C95.7851 44.4706 99.1184 44.2137 102.191 45.5004L103.254 45.9456C104.225 46.3518 104.682 47.4677 104.275 48.438L104.08 48.9045C101.801 54.3486 95.5391 56.914 90.0949 54.6343L89.2569 54.2834C88.5047 55.3934 87.6435 56.469 86.6603 57.4731C90.4992 57.9122 93.9664 60.4245 95.439 64.2839L95.8499 65.3606C96.2249 66.3434 95.7323 67.4441 94.7495 67.8191L94.277 67.9994C88.7627 70.1036 82.5866 67.3391 80.4824 61.8248L80.0715 60.748C79.7439 59.8896 80.0784 58.9412 80.8232 58.465C80.8973 58.3952 80.98 58.3322 81.0709 58.2777C84.9149 55.9749 87.4209 52.4263 88.9882 48.8463C90.4535 45.4995 91.0599 42.2096 91.1846 40.0893C91.1718 40.0557 91.1598 40.0215 91.1487 39.9868L90.9949 39.5051C89.1996 33.8826 92.3021 27.8692 97.9246 26.0739L99.0225 25.7233Z\"\n        fill=\"#FFF500\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.26014 27.92C3.24474 27.6454 2.19899 28.246 1.92438 29.2614L1.79236 29.7495C0.251515 35.4471 3.62117 41.3149 9.31868 42.8558L10.0909 43.0646C10.2291 44.3415 10.495 45.8392 10.9274 47.4443C8.28389 46.1957 5.14154 46.0305 2.23252 47.2486L1.16946 47.6938C0.199208 48.1001 -0.257982 49.2159 0.148295 50.1862L0.343623 50.6527C2.62328 56.0968 8.88469 58.6622 14.3289 56.3825L14.8702 56.1559C15.5961 57.2131 16.4218 58.2377 17.3585 59.1973C13.4278 59.5598 9.85 62.0951 8.3477 66.0321L7.93681 67.1088C7.5618 68.0916 8.05448 69.1923 9.03724 69.5673L9.50972 69.7476C15.0241 71.8518 21.2002 69.0874 23.3044 63.573L23.7153 62.4962C23.9141 61.9753 23.869 61.4212 23.6364 60.9596C23.5574 60.5831 23.3276 60.2393 22.9715 60.026C19.8939 58.1822 17.6739 55.54 16.1067 52.7225C15.9303 52.3299 15.733 51.9529 15.5165 51.5924C15.354 51.2607 15.2 50.9277 15.0541 50.5945C13.5172 47.084 12.9251 43.6359 12.8428 41.5348L12.899 41.3271C14.4398 35.6296 11.0702 29.7618 5.37267 28.2209L4.26014 27.92Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M99.0225 27.4717C100.025 27.1518 101.096 27.7047 101.416 28.7067L101.57 29.1885C103.365 34.811 100.263 40.8244 94.6403 42.6197L93.9755 42.832C93.8396 44.2153 93.5502 45.8779 93.0544 47.6658C95.7851 46.219 99.1184 45.9621 102.191 47.2488L103.254 47.694C104.225 48.1003 104.682 49.2162 104.275 50.1864L104.08 50.6529C101.801 56.0971 95.5391 58.6624 90.0949 56.3827L89.2569 56.0318C88.5047 57.1418 87.6435 58.2174 86.6603 59.2215C90.4992 59.6606 93.9664 62.173 95.439 66.0323L95.8499 67.109C96.2249 68.0918 95.7323 69.1925 94.7495 69.5675L94.277 69.7478C88.7627 71.852 82.5866 69.0876 80.4824 63.5732L80.0715 62.4964C79.7439 61.638 80.0784 60.6896 80.8232 60.2134C80.8973 60.1436 80.9799 60.0806 81.0709 60.0262C84.9149 57.7233 87.4209 54.1747 88.9882 50.5947C90.4535 47.2479 91.0599 43.958 91.1846 41.8377C91.1718 41.8041 91.1598 41.77 91.1487 41.7353L90.9949 41.2535C89.1996 35.631 92.3021 29.6176 97.9246 27.8223L99.0225 27.4717Z\"\n        fill=\"#FFB800\"\n      />\n    </svg>\n  );\n};\n\nexport const LockedTreasureSvg = () => {\n  return (\n    <svg width=\"80\" height=\"90\" viewBox=\"0 0 80 90\" fill=\"none\">\n      <rect opacity=\"0.3\" y=\"38\" width=\"80\" height=\"40\" rx=\"4\" fill=\"#AFAFAF\" />\n      <path\n        d=\"M8.28882 39.7366C8.28882 34.2001 12.777 29.7119 18.3135 29.7119H60.7557C66.2922 29.7119 70.7804 34.2001 70.7804 39.7366V66.3203C70.7804 68.5349 68.9851 70.3302 66.7705 70.3302H12.2987C10.0841 70.3302 8.28882 68.5349 8.28882 66.3203V39.7366Z\"\n        fill=\"#9A9A9A\"\n      />\n      <path\n        d=\"M6.12195 25.2274C6.12195 19.6909 10.6102 15.2027 16.1467 15.2027H63.2628C68.7993 15.2027 73.2876 19.6909 73.2876 25.2274V55.051H6.12195V25.2274Z\"\n        fill=\"#9A9A9A\"\n      />\n      <rect\n        x=\"3.10956\"\n        y=\"42.7716\"\n        width=\"73.8089\"\n        height=\"11.5284\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M67.0209 25.477H74.9174C76.0247 25.477 76.9223 26.3746 76.9223 27.4819V45.777H67.0209V25.477Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M3.10956 27.4819C3.10956 26.3746 4.0072 25.477 5.1145 25.477H11.5072C12.6145 25.477 13.5122 26.3746 13.5122 27.4819V43.7721C13.5122 44.8794 12.6145 45.777 11.5072 45.777H5.1145C4.0072 45.777 3.10956 44.8794 3.10956 43.7721V27.4819Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M6.12195 14.0049C6.12195 12.8976 7.01959 12 8.12689 12H18.6528C19.7601 12 20.6578 12.8976 20.6578 14.0049V34.5027H6.12195V14.0049Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M58.7524 14.0049C58.7524 12.8976 59.6501 12 60.7574 12H71.2833C72.3906 12 73.2883 12.8976 73.2883 14.0049V34.5027H58.7524V14.0049Z\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M6.25378 24.1446L20.6019 20.5723V33.2222L6.25378 33.0464V24.1446Z\"\n        fill=\"#EDEDED\"\n      />\n      <path\n        d=\"M6.12195 31.725H20.6578V46.2197H6.12195V31.725Z\"\n        fill=\"#BFBFBF\"\n      />\n      <path\n        d=\"M6.12195 52.5436C6.12195 51.4363 7.01959 50.5386 8.12689 50.5386H18.6528C19.7601 50.5386 20.6578 51.4363 20.6578 52.5436V70.3903C20.6578 71.4976 19.7601 72.3953 18.6528 72.3953H8.12689C7.01959 72.3953 6.12195 71.4976 6.12195 70.3903V52.5436Z\"\n        fill=\"#BFBFBF\"\n      />\n      <path\n        d=\"M57.4348 52.5436C57.4348 51.4363 58.3325 50.5386 59.4398 50.5386H69.9657C71.073 50.5386 71.9707 51.4363 71.9707 52.5436V70.3903C71.9707 71.4976 71.073 72.3953 69.9657 72.3953H59.4398C58.3325 72.3953 57.4348 71.4976 57.4348 70.3903V52.5436Z\"\n        fill=\"#BFBFBF\"\n      />\n      <rect\n        x=\"58.7524\"\n        y=\"31.725\"\n        width=\"14.5358\"\n        height=\"14.4947\"\n        fill=\"#BFBFBF\"\n      />\n      <rect\n        x=\"36.9485\"\n        y=\"49.9128\"\n        width=\"5.51359\"\n        height=\"9.71144\"\n        fill=\"#C4C4C4\"\n      />\n      <rect\n        x=\"6.12195\"\n        y=\"55.3079\"\n        width=\"14.5358\"\n        height=\"4.88705\"\n        fill=\"#9A9A9A\"\n      />\n      <rect\n        x=\"57.4348\"\n        y=\"55.3079\"\n        width=\"14.5358\"\n        height=\"4.88705\"\n        fill=\"#9A9A9A\"\n      />\n      <rect\n        x=\"20.6531\"\n        y=\"63.818\"\n        width=\"36.7782\"\n        height=\"2.63149\"\n        fill=\"#898989\"\n      />\n      <rect\n        x=\"20.6531\"\n        y=\"23.6395\"\n        width=\"38.0939\"\n        height=\"2.63149\"\n        fill=\"#898989\"\n      />\n      <rect\n        opacity=\"0.92\"\n        x=\"20.6531\"\n        y=\"55.3079\"\n        width=\"36.7782\"\n        height=\"4.88705\"\n        fill=\"#888888\"\n      />\n      <rect\n        opacity=\"0.92\"\n        x=\"20.6531\"\n        y=\"35.3047\"\n        width=\"38.0939\"\n        height=\"7.46567\"\n        fill=\"#898989\"\n      />\n      <path\n        d=\"M3.10956 46.2159H76.9185V55.3008C76.9185 56.4081 76.0208 57.3058 74.9135 57.3058H5.1145C4.0072 57.3058 3.10956 56.4081 3.10956 55.3008V46.2159Z\"\n        fill=\"#BFBFBF\"\n      />\n      <rect\n        x=\"28.9253\"\n        y=\"38.383\"\n        width=\"20.9266\"\n        height=\"18.2007\"\n        rx=\"3.00742\"\n        fill=\"#D8D8D8\"\n      />\n      <path\n        d=\"M33.6012 38.383H31.9327C30.2718 38.383 28.9253 39.7294 28.9253 41.3904V53.5763C28.9253 55.2372 30.2718 56.5837 31.9327 56.5837H32.9367C33.4621 56.5837 33.8848 56.1518 33.8735 55.6265L33.6012 42.9729V38.383Z\"\n        fill=\"#EDEDED\"\n      />\n      <rect\n        x=\"28.9253\"\n        y=\"42.8631\"\n        width=\"20.9266\"\n        height=\"17.9407\"\n        rx=\"3.00742\"\n        fill=\"#BFBFBF\"\n      />\n      <ellipse\n        cx=\"39.0436\"\n        cy=\"49.7057\"\n        rx=\"3.94723\"\n        ry=\"3.54472\"\n        fill=\"#8A8A8A\"\n      />\n      <path\n        d=\"M38.147 51.6033C38.5164 50.8645 39.5708 50.8645 39.9402 51.6033L41.7365 55.1957C42.0698 55.8622 41.5852 56.6465 40.8399 56.6465H37.2473C36.5021 56.6465 36.0174 55.8622 36.3507 55.1957L38.147 51.6033Z\"\n        fill=\"#8A8A8A\"\n      />\n      <path\n        d=\"M58.7855 16.3848L73.2562 12.8931V20.8578L58.7855 24.3496V16.3848Z\"\n        fill=\"#EDEDED\"\n      />\n      <rect\n        x=\"20.4848\"\n        y=\"42.358\"\n        width=\"8.44234\"\n        height=\"3.80299\"\n        fill=\"#EDEDED\"\n      />\n    </svg>\n  );\n};\n\nexport const ActiveTreasureSvg = () => {\n  return (\n    <svg width=\"80\" height=\"90\" viewBox=\"0 0 80 90\" fill=\"none\">\n      <rect opacity=\"0.3\" y=\"38\" width=\"80\" height=\"40\" rx=\"4\" fill=\"#AFAFAF\" />\n      <path\n        d=\"M8.43329 39.7366C8.43329 34.2001 12.9215 29.7119 18.458 29.7119H60.9001C66.4366 29.7119 70.9248 34.2001 70.9248 39.7366V66.3203C70.9248 68.5349 69.1296 70.3302 66.915 70.3302H12.4432C10.2286 70.3302 8.43329 68.5349 8.43329 66.3203V39.7366Z\"\n        fill=\"#CE7D03\"\n      />\n      <path\n        d=\"M6.26642 25.2274C6.26642 19.6909 10.7546 15.2027 16.2911 15.2027H63.4073C68.9438 15.2027 73.432 19.6909 73.432 25.2274V55.051H6.26642V25.2274Z\"\n        fill=\"#CE7D03\"\n      />\n      <rect\n        x=\"3.25403\"\n        y=\"42.7716\"\n        width=\"73.8089\"\n        height=\"11.5284\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M67.1654 25.477H75.0618C76.1691 25.477 77.0668 26.3746 77.0668 27.4819V45.777H67.1654V25.477Z\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M3.25403 27.4819C3.25403 26.3746 4.15167 25.477 5.25897 25.477H11.6517C12.759 25.477 13.6566 26.3746 13.6566 27.4819V43.7721C13.6566 44.8794 12.759 45.777 11.6517 45.777H5.25897C4.15167 45.777 3.25403 44.8794 3.25403 43.7721V27.4819Z\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M6.26642 14.0049C6.26642 12.8976 7.16406 12 8.27136 12H18.7973C19.9046 12 20.8023 12.8976 20.8023 14.0049V34.5027H6.26642V14.0049Z\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M58.8969 14.0049C58.8969 12.8976 59.7946 12 60.9019 12H71.4278C72.5351 12 73.4328 12.8976 73.4328 14.0049V34.5027H58.8969V14.0049Z\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M6.39819 24.1446L20.7463 20.5723V33.2222L6.39819 33.0464V24.1446Z\"\n        fill=\"#FEF400\"\n      />\n      <path\n        d=\"M6.26642 31.725H20.8023V46.2197H6.26642V31.725Z\"\n        fill=\"#EEAB00\"\n      />\n      <path\n        d=\"M6.26642 52.5436C6.26642 51.4363 7.16406 50.5386 8.27136 50.5386H18.7973C19.9046 50.5386 20.8023 51.4363 20.8023 52.5436V70.3903C20.8023 71.4976 19.9046 72.3953 18.7973 72.3953H8.27136C7.16406 72.3953 6.26642 71.4976 6.26642 70.3903V52.5436Z\"\n        fill=\"#EEAB00\"\n      />\n      <path\n        d=\"M57.5793 52.5436C57.5793 51.4363 58.4769 50.5386 59.5842 50.5386H70.1102C71.2175 50.5386 72.1151 51.4363 72.1151 52.5436V70.3903C72.1151 71.4976 71.2175 72.3953 70.1102 72.3953H59.5842C58.4769 72.3953 57.5793 71.4976 57.5793 70.3903V52.5436Z\"\n        fill=\"#EEAB00\"\n      />\n      <rect\n        x=\"58.8969\"\n        y=\"31.725\"\n        width=\"14.5358\"\n        height=\"14.4947\"\n        fill=\"#EEAB00\"\n      />\n      <rect\n        x=\"37.093\"\n        y=\"49.9128\"\n        width=\"5.51359\"\n        height=\"9.71144\"\n        fill=\"#C4C4C4\"\n      />\n      <rect\n        x=\"6.26642\"\n        y=\"55.3079\"\n        width=\"14.5358\"\n        height=\"4.88705\"\n        fill=\"#BF7402\"\n      />\n      <rect\n        x=\"57.5793\"\n        y=\"55.3079\"\n        width=\"14.5358\"\n        height=\"4.88705\"\n        fill=\"#BF7402\"\n      />\n      <rect\n        x=\"20.7975\"\n        y=\"63.818\"\n        width=\"36.7782\"\n        height=\"2.63149\"\n        fill=\"#B46C00\"\n      />\n      <rect\n        x=\"20.7975\"\n        y=\"23.6395\"\n        width=\"38.0939\"\n        height=\"2.63149\"\n        fill=\"#B46C00\"\n      />\n      <rect\n        opacity=\"0.92\"\n        x=\"20.7975\"\n        y=\"55.3079\"\n        width=\"36.7782\"\n        height=\"4.88705\"\n        fill=\"#8F5702\"\n      />\n      <rect\n        opacity=\"0.92\"\n        x=\"20.7975\"\n        y=\"35.3047\"\n        width=\"38.0939\"\n        height=\"7.46567\"\n        fill=\"#B46C00\"\n      />\n      <path\n        d=\"M3.25403 46.2159H77.063V55.3008C77.063 56.4081 76.1653 57.3058 75.058 57.3058H5.25897C4.15167 57.3058 3.25403 56.4081 3.25403 55.3008V46.2159Z\"\n        fill=\"#EEAB00\"\n      />\n      <rect\n        x=\"29.0696\"\n        y=\"38.383\"\n        width=\"20.9266\"\n        height=\"18.2007\"\n        rx=\"3.00742\"\n        fill=\"#FEC700\"\n      />\n      <path\n        d=\"M33.7456 38.383H32.0771C30.4161 38.383 29.0696 39.7294 29.0696 41.3904V53.5763C29.0696 55.2372 30.4161 56.5837 32.0771 56.5837H33.081C33.6064 56.5837 34.0291 56.1518 34.0178 55.6265L33.7456 42.9729V38.383Z\"\n        fill=\"#FEF400\"\n      />\n      <rect\n        x=\"29.0696\"\n        y=\"42.8631\"\n        width=\"20.9266\"\n        height=\"17.9407\"\n        rx=\"3.00742\"\n        fill=\"#EEAB00\"\n      />\n      <ellipse\n        cx=\"39.1881\"\n        cy=\"49.7057\"\n        rx=\"3.94723\"\n        ry=\"3.54472\"\n        fill=\"#BF7402\"\n      />\n      <path\n        d=\"M38.2915 51.6033C38.6609 50.8645 39.7153 50.8645 40.0847 51.6033L41.881 55.1957C42.2143 55.8622 41.7296 56.6465 40.9844 56.6465H37.3918C36.6465 56.6465 36.1618 55.8622 36.4951 55.1957L38.2915 51.6033Z\"\n        fill=\"#BF7402\"\n      />\n      <path\n        d=\"M58.9299 16.3848L73.4007 12.8931V20.8578L58.9299 24.3496V16.3848Z\"\n        fill=\"#FEF400\"\n      />\n      <rect\n        x=\"20.6292\"\n        y=\"42.358\"\n        width=\"8.44234\"\n        height=\"3.80299\"\n        fill=\"#FEF400\"\n      />\n    </svg>\n  );\n};\n\nexport const GoldenTreasureSvg = () => {\n  return (\n    <svg width=\"80\" height=\"90\" viewBox=\"0 0 80 90\" fill=\"none\">\n      <rect opacity=\"0.3\" y=\"49\" width=\"80\" height=\"40\" rx=\"4\" fill=\"#AFAFAF\" />\n      <path\n        d=\"M9.43689 49.1673C9.43689 43.6308 13.9251 39.1426 19.4616 39.1426H61.9037C67.4402 39.1426 71.9284 43.6308 71.9284 49.1673V75.7509C71.9284 77.9655 70.1332 79.7608 67.9186 79.7608H13.4468C11.2322 79.7608 9.43689 77.9655 9.43689 75.7509V49.1673Z\"\n        fill=\"#CE7D03\"\n      />\n      <path\n        d=\"M7.26642 34.6581C7.26642 29.1216 11.7546 24.6334 17.2911 24.6334H63.3456C68.8821 24.6334 73.3703 29.1216 73.3703 34.6581V64.4816H7.26642V34.6581Z\"\n        fill=\"#CE7D03\"\n      />\n      <path\n        d=\"M7.26642 61.9743C7.26642 60.867 8.16406 59.9693 9.27136 59.9693H19.7973C20.9046 59.9693 21.8023 60.867 21.8023 61.9743V79.821C21.8023 80.9283 20.9046 81.826 19.7973 81.826H9.27136C8.16406 81.826 7.26642 80.9283 7.26642 79.821V61.9743Z\"\n        fill=\"#EEAB00\"\n      />\n      <path\n        d=\"M58.5792 61.9743C58.5792 60.867 59.4769 59.9693 60.5842 59.9693H71.1101C72.2174 59.9693 73.1151 60.867 73.1151 61.9743V79.821C73.1151 80.9283 72.2174 81.826 71.1101 81.826H60.5842C59.4769 81.826 58.5792 80.9283 58.5792 79.821V61.9743Z\"\n        fill=\"#EEAB00\"\n      />\n      <rect\n        x=\"21.8011\"\n        y=\"73.2487\"\n        width=\"36.7782\"\n        height=\"2.63149\"\n        fill=\"#B46C00\"\n      />\n      <rect\n        x=\"7.26642\"\n        y=\"24.6334\"\n        width=\"66.1039\"\n        height=\"41.8457\"\n        fill=\"#724500\"\n      />\n      <rect\n        x=\"7.26642\"\n        y=\"3.0307\"\n        width=\"65.8487\"\n        height=\"25.6729\"\n        fill=\"#CE7D03\"\n      />\n      <rect\n        x=\"7.26642\"\n        y=\"60.9063\"\n        width=\"66.1039\"\n        height=\"5.57271\"\n        fill=\"#FEC700\"\n      />\n      <rect\n        x=\"73.3703\"\n        y=\"23.3889\"\n        width=\"42.3453\"\n        height=\"5.57271\"\n        transform=\"rotate(90 73.3703 23.3889)\"\n        fill=\"#FEC700\"\n      />\n      <rect\n        x=\"12.8409\"\n        y=\"23.3889\"\n        width=\"42.3453\"\n        height=\"5.57271\"\n        transform=\"rotate(90 12.8409 23.3889)\"\n        fill=\"#FEC700\"\n      />\n      <rect\n        x=\"7.26642\"\n        y=\"32.6273\"\n        width=\"5.57271\"\n        height=\"8.53299\"\n        fill=\"#EEAB00\"\n      />\n      <rect\n        x=\"67.7993\"\n        y=\"32.6273\"\n        width=\"5.57271\"\n        height=\"8.53299\"\n        fill=\"#EEAB00\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.26641 2.00494C7.26641 0.897644 8.16405 0 9.27135 0H19.7973C20.9046 0 21.8022 0.897644 21.8022 2.00494V18.0889L59.271 18.0889V2.00494C59.271 0.897644 60.1686 0 61.2759 0H71.8019C72.9092 0 73.8068 0.897644 73.8068 2.00494V18.0889H74.6741C75.7814 18.0889 76.6791 18.9865 76.6791 20.0938V30.6198C76.6791 31.7271 75.7814 32.6247 74.6741 32.6247L5.54334 32.6247C4.43604 32.6247 3.53839 31.7271 3.53839 30.6198L3.53839 20.0938C3.53839 18.9865 4.43604 18.0889 5.54333 18.0889H7.26641V2.00494Z\"\n        fill=\"#FEC700\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M76.4615 19.1845L30.164 32.6247H5.54334C4.43604 32.6247 3.53839 31.7271 3.53839 30.6198V20.0938C3.53839 18.9865 4.43604 18.0889 5.54333 18.0889H7.26641V15.0871L21.8022 10.8673V18.0889L59.271 18.0889V2.00494C59.271 0.897644 60.1686 0 61.2759 0H71.8019C72.9092 0 73.8068 0.897644 73.8068 2.00494V18.0889H74.6741C75.4541 18.0889 76.13 18.5342 76.4615 19.1845Z\"\n        fill=\"#FEF400\"\n      />\n      <rect\n        opacity=\"0.3\"\n        x=\"12.8409\"\n        y=\"45.936\"\n        width=\"54.9585\"\n        height=\"14.974\"\n        fill=\"#CE7D03\"\n      />\n      <rect\n        x=\"30.7248\"\n        y=\"15.3657\"\n        width=\"20.9266\"\n        height=\"19.5457\"\n        rx=\"3.00742\"\n        fill=\"#FEC700\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M51.6514 22.6388L30.7248 28.7138V18.3731C30.7248 16.7121 32.0713 15.3657 33.7322 15.3657H48.644C50.3049 15.3657 51.6514 16.7121 51.6514 18.3731V22.6388Z\"\n        fill=\"#FEF400\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M42.7647 26.1885C44.1615 25.6425 45.1381 24.392 45.1381 22.9367C45.1381 20.979 43.3709 19.392 41.1909 19.392C39.0109 19.392 37.2437 20.979 37.2437 22.9367C37.2437 24.392 38.2203 25.6425 39.6171 26.1885L38.498 28.4266C38.1647 29.0932 38.6493 29.8774 39.3946 29.8774H42.9872C43.7324 29.8774 44.2171 29.0932 43.8838 28.4266L42.7647 26.1885Z\"\n        fill=\"#BF7402\"\n      />\n      <rect\n        x=\"59.2802\"\n        y=\"16.1855\"\n        width=\"14.4799\"\n        height=\"1.87404\"\n        fill=\"#FEC700\"\n      />\n      <rect\n        x=\"7.26642\"\n        y=\"16.1855\"\n        width=\"14.4799\"\n        height=\"1.87404\"\n        fill=\"#FEC700\"\n      />\n    </svg>\n  );\n};\n\nexport const LockSvg = () => {\n  return (\n    <svg width=\"42\" height=\"34\" viewBox=\"0 0 42 34\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.8731 4.53816C16.9449 4.53816 13.7604 7.52403 13.7604 11.2073V13.483C13.7604 13.5386 13.7612 13.5941 13.7626 13.6493H13.7049C11.854 13.6493 10.3535 15.1498 10.3535 17.0007V25.9418C10.3535 27.7927 11.854 29.2932 13.7049 29.2932H28.0455C29.8965 29.2932 31.397 27.7927 31.397 25.9418V17.0008C31.397 15.1498 29.8965 13.6493 28.0455 13.6493H27.9837C27.9851 13.5941 27.9858 13.5386 27.9858 13.483V11.2073C27.9858 7.52402 24.8014 4.53816 20.8731 4.53816ZM24.4812 13.6493C24.484 13.5942 24.4855 13.5388 24.4855 13.483V11.2073C24.4855 9.33665 22.8682 7.82022 20.8731 7.82022C18.8781 7.82022 17.2608 9.33665 17.2608 11.2073V13.483C17.2608 13.5388 17.2622 13.5942 17.2651 13.6493H24.4812Z\"\n        fill=\"#AFAFAF\"\n      />\n    </svg>\n  );\n};\n\nexport const LessonFastForwardStartSvg = () => {\n  return (\n    <svg\n      width=\"214\"\n      height=\"233\"\n      viewBox=\"0 0 214 233\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M40.7734 182.392L51.4093 172.816C54.639 169.908 59.6145 170.169 62.5226 173.398L62.5242 173.399C65.4323 176.629 65.1716 181.605 61.9419 184.513C61.9419 184.513 61.9418 184.513 61.9418 184.513L51.3058 194.089C48.0761 196.997 43.1006 196.736 40.1925 193.506L40.1909 193.505C37.2828 190.276 37.5435 185.3 40.7731 182.392C40.7732 182.392 40.7732 182.392 40.7733 182.392L40.7734 182.392Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M46.5306 118.274L68.1354 131.773C76.2438 136.84 78.7098 147.52 73.6432 155.629C73.6431 155.629 73.643 155.629 73.643 155.629L60.1421 177.233C55.0754 185.341 44.3951 187.807 36.2868 182.74L14.6818 169.241C6.57333 164.175 4.1074 153.494 9.17398 145.386C9.17406 145.386 9.17414 145.385 9.17422 145.385L22.6751 123.782C27.7418 115.674 38.4221 113.208 46.5304 118.274L46.5306 118.274Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        d=\"M80.9277 111.64L162.503 45.635C166.875 42.0971 173.429 43.8501 175.446 49.0969C185.136 74.306 177.436 103.36 155.884 120.798C134.332 138.237 104.289 139.722 81.6256 125.01C76.9086 121.948 76.5552 115.178 80.9277 111.64Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M93.0455 49.5699C94.9888 47.7007 97.2856 46.2385 99.8012 45.2692C110.236 41.248 121.952 46.4526 125.97 56.8938L148.464 115.354C148.479 115.393 148.494 115.432 148.508 115.471C160.385 146.529 144.849 181.343 113.809 193.23C82.6861 205.149 47.7973 189.607 35.8245 158.491L13.4134 100.245C12.4312 97.6923 11.9759 94.967 12.0748 92.2334C12.4793 81.0519 21.866 72.3146 33.0405 72.7182C49.8299 73.3246 60.9302 72.5917 66.3413 70.5194C71.7954 68.4307 80.6968 61.4476 93.0455 49.5699Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        d=\"M90.7175 62.139C91.2276 60.8136 92.5241 60.5073 93.6287 61.3997C98.9362 65.6874 100.922 73.0108 98.4077 79.5434C95.8932 86.0761 89.5037 90.1932 82.6827 89.8377C81.263 89.7638 80.33 88.3284 80.8402 87.0031L90.7175 62.139Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M82.5098 81.8735C87.7444 95.3142 92.3779 107.356 96.4103 118C81.9801 123.443 74.779 126.201 74.8071 126.274C74.8493 126.383 66.4985 104.68 60.896 90.1192C68.8441 94.2307 79.2512 90.2767 82.5098 81.8735Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M100.736 63.1648C101.246 61.8386 102.903 61.3938 104.007 62.2865C109.314 66.5755 111.299 73.9028 108.783 80.44C106.266 86.9771 99.8755 91.0982 93.0539 90.7441C91.6341 90.6704 90.7014 89.2344 91.2119 87.9082L100.736 63.1648Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M42.641 80.6621L66.3956 92.9423C67.6494 93.6076 67.8863 95.3034 66.8633 96.2913C61.9484 101.038 54.4272 102.126 48.2469 98.8464C42.0666 95.567 38.7645 88.7361 39.9593 82.0155C40.2079 80.6167 41.3872 79.9967 42.641 80.6621Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M35.7541 88.0139L59.1628 100.435C60.4175 101.101 60.655 102.797 59.6317 103.785C54.7156 108.531 47.1906 109.616 41.0061 106.335C34.8215 103.053 31.5157 96.2203 32.7092 89.499C32.9576 88.1001 34.4994 87.3481 35.7541 88.0139Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M96.626 69.2154C108.203 64.782 121.18 70.563 125.634 82.1373L131.537 97.4796C131.543 97.4941 131.548 97.5087 131.554 97.5232C135.99 109.124 130.187 122.127 118.593 126.567L116.848 127.236C105.271 131.669 92.2936 125.888 87.8402 114.314L81.9369 98.9716C81.9313 98.957 81.9258 98.9425 81.9202 98.928C77.4843 87.3273 83.2869 74.3238 94.8808 69.8838L96.626 69.2154Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M42.1208 89.5711C42.1601 89.5561 42.1994 89.5411 42.2387 89.5263C53.8573 85.1515 66.8193 91.0292 71.1901 102.655L76.9754 118.042C81.3289 129.621 75.518 142.546 63.9701 146.968L62.3424 147.592C50.7655 152.025 37.788 146.244 33.3345 134.67L27.4313 119.327C27.4257 119.313 27.4201 119.298 27.4146 119.284C22.9786 107.683 28.7813 94.6796 40.3751 90.2396L42.1208 89.5711Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M100.353 76.9145C108.897 73.6426 118.474 77.9089 121.761 86.4508L125.304 95.6598C125.308 95.6705 125.312 95.6812 125.316 95.6918C128.577 104.218 124.312 113.774 115.791 117.037C107.248 120.309 97.6703 116.043 94.3836 107.501L90.8403 98.2921C90.8362 98.2814 90.8321 98.2708 90.828 98.2601C87.5679 89.7343 91.8324 80.1776 100.353 76.9145Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M45.2941 98.1694C53.8378 94.8975 63.4151 99.1638 66.7018 107.706L70.2451 116.915C70.2492 116.925 70.2533 116.936 70.2574 116.947C73.5175 125.472 69.253 135.029 60.7322 138.292C52.1885 141.564 42.6112 137.298 39.3246 128.756L35.7812 119.547C35.7771 119.536 35.773 119.526 35.7689 119.515C32.5088 110.989 36.7734 101.432 45.2941 98.1694Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M101.456 86.9142C105.483 85.3718 109.998 87.383 111.548 91.4099L114.592 99.3227C114.594 99.3277 114.596 99.3328 114.598 99.3378C116.135 103.357 114.125 107.862 110.108 109.401C106.08 110.943 101.565 108.932 100.016 104.905L96.9709 96.9923C96.969 96.9872 96.9671 96.9822 96.9651 96.9771C95.4282 92.9579 97.4387 88.4525 101.456 86.9142Z\"\n        fill=\"#4B4B4B\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M51.3575 105.759C55.3852 104.216 59.9002 106.228 61.4496 110.255L64.4942 118.167C64.4962 118.172 64.4981 118.177 64.5 118.183C66.0369 122.202 64.0265 126.707 60.0096 128.245C55.9818 129.788 51.4668 127.777 49.9174 123.75L46.8728 115.837C46.8709 115.832 46.8689 115.827 46.867 115.822C45.3301 111.803 47.3405 107.297 51.3575 105.759Z\"\n        fill=\"#4B4B4B\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M82.5186 113.537C86.9125 111.854 91.838 114.049 93.5282 118.441L94.3666 120.62C94.3687 120.626 94.3708 120.631 94.3729 120.637C96.0495 125.021 93.8563 129.936 89.4742 131.614C85.0803 133.297 80.1549 131.103 78.4646 126.71L77.6263 124.531C77.6241 124.526 77.622 124.52 77.6199 124.515C75.9433 120.13 78.1365 115.215 82.5186 113.537Z\"\n        fill=\"#F49000\"\n      />\n      <path\n        d=\"M96.6643 118.258L96.9102 118.897L86.5895 125.003L74.8241 127.355L74.5782 126.716C73.5668 121.323 76.7014 115.637 81.8631 113.661C87.6558 111.442 93.7987 113.575 96.6643 118.258Z\"\n        fill=\"#FFC200\"\n      />\n      <path\n        d=\"M86.5558 115.053C87.4875 115.037 88.256 115.779 88.2722 116.711C88.2884 117.644 87.5463 118.413 86.6146 118.429C85.1643 118.454 83.9253 118.929 82.8311 119.878C82.1268 120.488 81.0613 120.412 80.4511 119.707C79.8409 119.003 79.9172 117.937 80.6215 117.326C82.3142 115.858 84.3145 115.092 86.5558 115.053Z\"\n        fill=\"#FFDE00\"\n      />\n      <path\n        d=\"M117.568 146.575C118.324 146.286 119.135 146.793 119.169 147.578C119.333 151.345 116.955 154.9 113.226 156.326C109.496 157.753 105.342 156.697 102.934 153.788C102.433 153.183 102.695 152.265 103.451 151.975L117.568 146.575Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M50.4816 116.153C48.1304 117.565 45.0806 116.807 43.6696 114.459C42.2586 112.11 43.0208 109.062 45.372 107.649C47.7232 106.236 50.773 106.994 52.184 109.343C53.595 111.691 52.8328 114.74 50.4816 116.153Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M92.9693 156.275C93.726 155.985 94.537 156.493 94.571 157.277C94.7345 161.044 92.3568 164.599 88.6272 166.026C84.8977 167.452 80.7439 166.396 78.3355 163.487C77.8342 162.882 78.0962 161.964 78.8528 161.675L92.9693 156.275Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M109.917 163.446C110.674 163.157 111.485 163.664 111.519 164.449C111.682 168.216 109.305 171.771 105.575 173.197C101.845 174.624 97.6917 173.568 95.2833 170.659C94.782 170.054 95.0439 169.136 95.8006 168.847L109.917 163.446Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M99.6376 98.3509C97.2865 99.7636 94.2366 99.0052 92.8256 96.6569C91.4146 94.3086 92.1768 91.2598 94.528 89.847C96.8792 88.4343 99.929 89.1927 101.34 91.541C102.751 93.8893 101.989 96.9382 99.6376 98.3509Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M104.94 69.2627L118.678 77.3672C108.237 87.8207 98.0068 93.9657 84.8111 98.1574L82.668 82.8953C91.6254 80.9517 98.9253 76.4756 104.94 69.2627Z\"\n        fill=\"#8EE000\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M139.176 219.234C137.217 223.071 132.524 224.597 128.685 222.645L121.075 218.775C121.07 218.772 121.065 218.77 121.06 218.767C117.236 216.813 115.72 212.126 117.674 208.3C119.632 204.463 124.326 202.938 128.164 204.889L135.775 208.759C135.78 208.762 135.784 208.765 135.789 208.767C139.613 210.722 141.129 215.408 139.176 219.234Z\"\n        fill=\"#F49000\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M96.8213 215.73C96.8213 220.05 93.3211 223.553 89.0035 223.553H76.5168C72.1991 223.553 68.699 220.05 68.699 215.73C68.699 211.41 72.1991 207.907 76.5168 207.907H89.0035C93.3211 207.907 96.8213 211.41 96.8213 215.73Z\"\n        fill=\"#F49000\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M144.14 215.761C144.14 220.064 140.654 223.553 136.353 223.553H133.946C129.646 223.553 126.159 220.064 126.159 215.761C126.159 211.457 129.646 207.969 133.946 207.969H136.353C140.654 207.969 144.14 211.457 144.14 215.761Z\"\n        fill=\"#F49000\"\n      />\n      <path\n        opacity=\"0.3\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M152.671 223.553C155.277 223.553 157.39 225.667 157.39 228.275C157.39 230.883 155.277 232.998 152.671 232.998H47.1249C44.5185 232.998 42.4055 230.883 42.4055 228.275C42.4055 225.667 44.5185 223.553 47.1249 223.553H152.671Z\"\n        fill=\"#AFAFAF\"\n      />\n      <path\n        d=\"M105.13 30.8026C105.419 29.7337 106.52 29.1015 107.589 29.3906L108.76 29.7073C114.758 31.3293 118.305 37.5062 116.683 43.5038L116.544 44.0177C116.255 45.0866 115.154 45.7187 114.085 45.4297L112.914 45.1129C106.917 43.4909 103.369 37.314 104.991 31.3165L105.13 30.8026Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M209.863 30.2175C209.526 29.1627 208.398 28.5807 207.343 28.9175L206.187 29.2865C200.268 31.1764 197.002 37.5064 198.892 43.4251L199.054 43.9322C199.391 44.987 200.519 45.5691 201.574 45.2323L202.73 44.8632C208.648 42.9733 211.914 36.6433 210.024 30.7246L209.863 30.2175Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M103.261 52.8288C102.833 51.8075 103.314 50.6328 104.336 50.2051L105.455 49.7365C111.186 47.3368 117.777 50.0373 120.177 55.7682L120.382 56.2592C120.81 57.2806 120.329 58.4552 119.307 58.8829L118.188 59.3515C112.457 61.7512 105.866 59.0508 103.466 53.3199L103.261 52.8288Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M212.873 52.8288C213.3 51.8075 212.819 50.6328 211.798 50.2051L210.679 49.7365C204.948 47.3368 198.357 50.0373 195.957 55.7682L195.751 56.2592C195.324 57.2806 195.805 58.4552 196.826 58.8829L197.945 59.3515C203.676 61.7512 210.267 59.0508 212.667 53.3199L212.873 52.8288Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M112.619 73.2314C111.584 72.8366 111.066 71.678 111.46 70.6434L111.893 69.51C114.108 63.7052 120.609 60.7951 126.414 63.0102L126.911 63.2C127.946 63.5947 128.465 64.7534 128.07 65.7879L127.637 66.9214C125.422 72.7262 118.921 75.6362 113.116 73.4212L112.619 73.2314Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M202.845 73.2314C203.879 72.8366 204.398 71.678 204.003 70.6434L203.571 69.51C201.356 63.7052 194.854 60.7951 189.05 63.0102L188.552 63.2C187.518 63.5947 186.999 64.7534 187.394 65.7879L187.826 66.9214C190.041 72.7262 196.543 75.6362 202.347 73.4212L202.845 73.2314Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M121.405 12.0378C121.405 3.32306 130.635 -2.39283 138.669 0.983514C146.16 4.13194 154.18 7.01453 158.43 7.01453C162.681 7.01453 170.7 4.13194 178.192 0.983516C186.226 -2.39283 195.456 3.32306 195.456 12.0378V36.1799C195.456 56.6284 178.879 73.2053 158.43 73.2053C137.982 73.2053 121.405 56.6285 121.405 36.1799V12.0378Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M195.454 22.1429C194.317 43.6843 176.491 60.8011 154.666 60.8011C141.599 60.8011 129.966 54.6655 122.489 45.1181C121.78 42.2556 121.403 39.2617 121.403 36.1799V12.0378C121.403 3.32306 130.633 -2.39283 138.667 0.983514C146.159 4.13194 154.178 7.01453 158.428 7.01453C162.679 7.01453 170.698 4.13194 178.19 0.983516C186.224 -2.39283 195.454 3.32306 195.454 12.0378V22.1429Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M139.782 83.9932C139.782 81.8099 141.552 80.04 143.735 80.04H172.094C174.277 80.04 176.047 81.8099 176.047 83.9932C176.047 86.1765 174.277 87.9464 172.094 87.9464H143.735C141.552 87.9464 139.782 86.1765 139.782 83.9932Z\"\n        fill=\"#FFB800\"\n      />\n      <circle cx=\"134.012\" cy=\"11.5121\" r=\"7.3158\" fill=\"#FFF500\" />\n      <rect\n        x=\"154.173\"\n        y=\"68.918\"\n        width=\"7.87336\"\n        height=\"16.9914\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M148.585 80.113C153.222 80.113 154.242 77.4674 154.173 76.1445L160.073 81.2618L150.622 85.4392C148.011 83.6638 143.949 80.113 148.585 80.113Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M148.639 71.802C153.136 72.9334 154.187 74.8134 154.187 76.1621L160.075 71.0359L150.623 68.1985C148.013 69.9739 144.592 70.7837 148.639 71.802Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M167.557 72.0696C163.06 73.201 162.009 75.081 162.009 76.4297L156.121 71.3034L165.572 67.1261C168.183 68.9014 171.603 71.0513 167.557 72.0696Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M167.557 72.0696C163.06 73.201 162.009 75.081 162.009 76.4297L156.121 71.3034L165.572 67.1261C168.183 68.9014 171.603 71.0513 167.557 72.0696Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M167.691 79.9792C163.054 79.9792 161.9 77.3336 161.97 76.0107L156.204 81.128L165.655 85.3054C168.266 83.53 172.328 79.9792 167.691 79.9792Z\"\n        fill=\"#FFB800\"\n      />\n      <path\n        d=\"M131.606 87.9463C131.606 85.7631 133.376 83.9932 135.56 83.9932H180.184C182.367 83.9932 184.137 85.7631 184.137 87.9463C184.137 90.1296 182.367 91.8995 180.184 91.8995H135.56C133.376 91.8995 131.606 90.1296 131.606 87.9463Z\"\n        fill=\"#FFD600\"\n      />\n      <path\n        d=\"M115.114 43.6221C115.254 48.3819 117.73 59.2169 126.513 64.4781\"\n        stroke=\"#FFD600\"\n        strokeWidth=\"3.0119\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M200.619 43.6221C200.479 48.3819 198.003 59.2169 189.221 64.4781\"\n        stroke=\"#FFB800\"\n        strokeWidth=\"3.0119\"\n        strokeLinecap=\"round\"\n      />\n      <path\n        d=\"M168.753 74.4138C161.521 70.0153 161.763 59.4371 169.188 55.3732L171.694 54.0016C179.119 49.9376 188.16 55.4358 187.966 63.8983L187.901 66.7544C187.708 75.217 178.426 80.2969 171.194 75.8984L168.753 74.4138Z\"\n        fill=\"#58CC02\"\n      />\n      <rect\n        opacity=\"0.3\"\n        x=\"107.173\"\n        y=\"1.12598\"\n        width=\"13.6068\"\n        height=\"13.6068\"\n        rx=\"2.54446\"\n        transform=\"rotate(45 107.173 1.12598)\"\n        fill=\"#FFC800\"\n      />\n      <rect\n        opacity=\"0.3\"\n        x=\"195.606\"\n        y=\"90.0488\"\n        width=\"11.3225\"\n        height=\"11.3225\"\n        rx=\"1.27223\"\n        transform=\"rotate(45 195.606 90.0488)\"\n        fill=\"#FFC800\"\n      />\n    </svg>\n  );\n};\n\nexport const LessonFastForwardEndPassSvg = () => {\n  return (\n    <svg width=\"301\" height=\"265\" viewBox=\"0 0 301 265\" fill=\"none\">\n      <g clipPath=\"url(#clip0_2061_83374)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M210.08 246.097C210.08 242.034 213.374 238.741 217.437 238.741H228.858C232.921 238.741 236.215 242.034 236.215 246.097C236.215 250.16 232.921 253.454 228.858 253.454H217.437C213.374 253.454 210.08 250.16 210.08 246.097Z\"\n          fill=\"#F49000\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M145.459 246.097C145.459 242.034 148.753 238.741 152.816 238.741H164.237C168.3 238.741 171.594 242.034 171.594 246.097C171.594 250.16 168.3 253.454 164.237 253.454H152.816C148.753 253.454 145.459 250.16 145.459 246.097Z\"\n          fill=\"#F49000\"\n        />\n        <path\n          d=\"M160.688 140.591L120.395 108.758L106.692 117.704C106.692 117.704 105.037 128.481 106.083 134.724C109.236 153.541 139.298 170.553 139.298 170.553L160.688 140.591Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          d=\"M48.6327 67.9373C48.9422 66.7163 50.1829 65.9774 51.4038 66.2869L52.7415 66.626C59.5923 68.3626 63.7382 75.324 62.0016 82.1747L61.8528 82.7617C61.5434 83.9827 60.3027 84.7215 59.0818 84.412L57.7441 84.073C50.8933 82.3364 46.7474 75.375 48.484 68.5242L48.6327 67.9373Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M167.743 65.382C167.341 64.1883 166.048 63.5467 164.854 63.9488L163.546 64.3894C156.848 66.6457 153.248 73.9043 155.504 80.6019L155.698 81.1758C156.1 82.3694 157.394 83.011 158.587 82.6089L159.895 82.1683C166.593 79.912 170.193 72.6534 167.937 65.9558L167.743 65.382Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M46.9051 93.023C46.4002 91.869 46.9264 90.5243 48.0804 90.0195L49.3447 89.4663C55.8195 86.6335 63.3649 89.5859 66.1977 96.0608L66.4404 96.6156C66.9453 97.7695 66.4191 99.1142 65.2652 99.6191L64.0009 100.172C57.526 103.005 49.9806 100.053 47.1478 93.5778L46.9051 93.023Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M171.572 91.0441C172.04 89.8747 171.471 88.5474 170.302 88.0794L169.021 87.5666C162.459 84.9407 155.011 88.1311 152.385 94.6926L152.16 95.2548C151.692 96.4242 152.261 97.7515 153.43 98.2195L154.712 98.7323C161.273 101.358 168.721 98.1678 171.347 91.6063L171.572 91.0441Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M57.9171 116.059C56.7333 115.629 56.1225 114.321 56.5528 113.137L57.0243 111.84C59.4389 105.198 66.7808 101.771 73.423 104.185L73.9921 104.392C75.1759 104.822 75.7866 106.131 75.3563 107.315L74.8849 108.612C72.4703 115.254 65.1284 118.681 58.4862 116.266L57.9171 116.059Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M160.536 114.431C161.706 113.963 162.275 112.636 161.807 111.466L161.295 110.185C158.671 103.623 151.224 100.43 144.661 103.054L144.099 103.279C142.93 103.747 142.361 105.074 142.828 106.244L143.341 107.525C145.965 114.087 153.412 117.28 159.974 114.656L160.536 114.431Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M66.8042 46.3008C66.6469 36.3889 77.0412 29.7212 86.2399 33.4164C94.8177 36.8621 103.991 39.9959 108.825 39.9192C113.659 39.8425 122.729 36.4191 131.193 32.703C140.27 28.7178 150.87 35.0523 151.027 44.9642L151.463 72.4227C151.832 95.6803 133.278 114.834 110.02 115.203C86.7623 115.572 67.6091 97.017 67.24 73.7594L66.8042 46.3008Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M150.947 43.6632L151.062 50.9388C151.47 76.5959 131 97.7253 105.343 98.1325C90.1029 98.3744 76.46 91.2502 67.8089 80.0482C67.4684 77.9991 67.2754 75.8991 67.2414 73.7594L66.8057 46.3008C66.6484 36.3889 77.0427 29.7212 86.2414 33.4164C94.8191 36.8621 103.993 39.9959 108.827 39.9192C113.661 39.8425 122.73 36.4191 131.194 32.703C139.867 28.8951 149.931 34.5091 150.947 43.6632Z\"\n          fill=\"#FFD600\"\n        />\n        <circle\n          cx=\"81.134\"\n          cy=\"45.4758\"\n          r=\"8.32183\"\n          transform=\"rotate(-0.909229 81.134 45.4758)\"\n          fill=\"#FFF500\"\n        />\n        <path\n          d=\"M116.358 47.8611C122.884 46.5936 126.519 45.0876 131.403 42.2865\"\n          stroke=\"#FFF500\"\n          strokeWidth=\"11.1262\"\n          strokeLinecap=\"round\"\n        />\n        <rect\n          x=\"105.104\"\n          y=\"110.404\"\n          width=\"8.95607\"\n          height=\"19.328\"\n          transform=\"rotate(-0.909229 105.104 110.404)\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M99.0467 123.544C104.301 123.084 105.333 120.126 105.23 118.623L112.033 124.337L101.359 129.258C98.3577 127.286 93.9253 123.993 99.0467 123.544Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M98.8616 113.785C103.996 114.99 105.226 117.11 105.25 118.644L111.854 112.707L101.054 109.65C98.1161 111.717 94.2404 112.7 98.8616 113.785Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M120.383 113.746C115.289 115.114 114.127 117.272 114.151 118.806L107.362 113.081L118.036 108.16C121.038 110.132 124.967 112.515 120.383 113.746Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M120.383 113.746C115.289 115.114 114.127 117.272 114.151 118.806L107.362 113.081L118.036 108.16C121.038 110.132 124.967 112.515 120.383 113.746Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M120.631 122.979C115.383 122.454 114.041 119.836 114.096 118.33L107.63 124.255L118.455 128.835C121.392 126.769 125.924 123.508 120.631 122.979Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M60.2205 82.3379C60.4658 87.7491 63.4775 100.028 73.5611 105.853\"\n          stroke=\"#FFD600\"\n          strokeWidth=\"3.42608\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M157.47 80.7959C157.397 86.2121 154.776 98.5802 144.883 104.723\"\n          stroke=\"#FFB800\"\n          strokeWidth=\"3.42608\"\n          strokeLinecap=\"round\"\n        />\n        <ellipse\n          cx=\"111.884\"\n          cy=\"129.697\"\n          rx=\"25.5525\"\n          ry=\"7.0642\"\n          transform=\"rotate(-0.264391 111.884 129.697)\"\n          fill=\"#FFB800\"\n        />\n        <rect\n          x=\"79.7495\"\n          y=\"134.613\"\n          width=\"64.3076\"\n          height=\"7.1573\"\n          transform=\"rotate(-0.264391 79.7495 134.613)\"\n          fill=\"#FFD600\"\n        />\n        <ellipse\n          cx=\"111.906\"\n          cy=\"134.585\"\n          rx=\"32.1538\"\n          ry=\"7.79638\"\n          transform=\"rotate(-0.264391 111.906 134.585)\"\n          fill=\"#FFD600\"\n        />\n        <ellipse\n          cx=\"111.939\"\n          cy=\"142.261\"\n          rx=\"32.1538\"\n          ry=\"7.79638\"\n          transform=\"rotate(-0.264391 111.939 142.261)\"\n          fill=\"#FFB800\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M95.3845 135.269C95.8816 135.197 96.244 134.759 96.2144 134.257L95.9269 129.375C95.8939 128.816 95.3913 128.403 94.8379 128.488C92.265 128.879 89.9579 129.364 87.9999 129.923C87.575 130.044 87.297 130.447 87.323 130.888L87.6051 135.677C87.6414 136.294 88.2432 136.717 88.841 136.56C90.7513 136.058 92.955 135.622 95.3845 135.269Z\"\n          fill=\"#FFF500\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M99.645 133.715C99.6772 134.262 100.16 134.671 100.706 134.618C101.892 134.504 103.117 134.407 104.372 134.331C104.904 134.298 105.311 133.843 105.28 133.312L104.988 128.357C104.957 127.83 104.505 127.426 103.977 127.46C102.684 127.543 101.425 127.647 100.206 127.771C99.6984 127.822 99.324 128.267 99.3541 128.776L99.645 133.715Z\"\n          fill=\"#FFF500\"\n        />\n        <path\n          d=\"M200.513 109.709C197.394 107.241 189.558 102.097 176.221 100.368C159.694 98.225 143.603 112.058 142.249 122.496C139.699 142.164 135.27 173.707 135.015 175.678C134.695 178.143 131.475 227.99 184.678 234.889C227.24 240.408 243.525 205.078 246.347 186.724C248.766 168.071 253.847 131.513 254.825 123.974C256.047 114.551 249.529 104.567 237.497 103.007C227.871 101.759 208.83 106.955 200.513 109.709Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M141.323 129.628L145.358 132.04L144.315 153.721L153.321 161.006L168.606 159.081L169.794 155.034L171.655 140.682L179.927 137.701L207.736 136.959C210.547 139.164 213.13 131.669 215.097 125.964C215.361 125.197 215.615 124.462 215.856 123.787C218.4 116.673 217.32 113.069 216.188 112.701C215.283 112.407 208.276 116.122 204.886 118.016C210.711 109.88 210.347 109.024 209.959 108.111C209.951 108.093 209.943 108.076 209.936 108.058C208.816 107.673 202.593 110.81 195.076 114.598C184.116 120.123 170.407 127.033 165.764 126.431C157.935 125.416 162.242 111.528 163.441 109.104C164.64 106.68 164.128 105.508 161.954 105.226C159.576 104.918 154.93 108.05 152.904 109.654L151.585 108.222C146.387 112.51 142.851 117.841 142.247 122.497C141.96 124.712 141.649 127.111 141.323 129.628Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M170.445 126.3C167.638 130.096 165.731 134.639 165.081 139.653L164.002 147.973C161.964 163.69 173.053 178.083 188.77 180.121C204.487 182.159 218.88 171.07 220.918 155.353L221.997 147.033C223.442 135.885 218.284 125.404 209.554 119.524L208.043 131.176L170.445 126.3Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M142.295 122.138L137.089 162.29C136.471 167.054 139.832 171.416 144.596 172.034C149.359 172.652 153.722 169.291 154.34 164.527L160.258 118.884C160.724 115.288 158.923 111.92 155.962 110.22L154.216 123.684L142.295 122.138Z\"\n          fill=\"#89E219\"\n        />\n        <rect\n          x=\"176.457\"\n          y=\"123.542\"\n          width=\"38.0074\"\n          height=\"46.7784\"\n          rx=\"19.0037\"\n          transform=\"rotate(7.38809 176.457 123.542)\"\n          fill=\"white\"\n        />\n        <rect\n          x=\"183.119\"\n          y=\"134.908\"\n          width=\"17.5253\"\n          height=\"26.3231\"\n          rx=\"8.76266\"\n          transform=\"rotate(7.38809 183.119 134.908)\"\n          fill=\"#535353\"\n        />\n        <path\n          d=\"M142.972 130.554C143.772 124.387 147.081 119.733 150.364 120.158C153.646 120.584 155.659 125.928 154.859 132.095L151.89 154.993C151.091 161.16 147.781 165.814 144.499 165.389C141.216 164.963 139.203 159.619 140.003 153.452L142.972 130.554Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M153.476 161.895C154.22 158.099 157.784 155.533 161.62 156.03C165.639 156.551 168.475 160.232 167.954 164.251L166.804 173.119C166.262 177.297 162.436 180.244 158.258 179.703C153.888 179.136 150.906 174.994 151.754 170.67L153.476 161.895Z\"\n          fill=\"#F49000\"\n        />\n        <path\n          opacity=\"0.61\"\n          d=\"M154.998 159.959C155.503 157.334 157.964 155.555 160.616 155.899C163.507 156.274 165.484 159.009 164.933 161.872L162.834 172.77C162.328 175.395 159.867 177.174 157.216 176.83C154.325 176.455 152.348 173.72 152.899 170.857L154.998 159.959Z\"\n          fill=\"#8E4D00\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M154.832 132.309L151.891 154.994C151.822 155.527 151.734 156.049 151.629 156.558C150.816 157.033 149.9 157.25 148.966 157.129C146.305 156.784 144.495 153.83 144.923 150.532L146.759 136.371C147.187 133.073 149.69 130.679 152.351 131.024C153.31 131.148 154.159 131.612 154.832 132.309Z\"\n          fill=\"#535353\"\n        />\n        <path\n          d=\"M154.023 161.408C150.426 151.89 143.923 149.458 139.004 150.35L140.139 162.045L146.194 169.631C147.008 169.582 152.388 165.618 154.023 161.408Z\"\n          fill=\"#89E219\"\n        />\n        <circle\n          cx=\"184.47\"\n          cy=\"138.628\"\n          r=\"5.04329\"\n          transform=\"rotate(7.38809 184.47 138.628)\"\n          fill=\"white\"\n        />\n        <ellipse\n          cx=\"147.835\"\n          cy=\"133.613\"\n          rx=\"2.9695\"\n          ry=\"4.71024\"\n          transform=\"rotate(7.38809 147.835 133.613)\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M163.801 167.75L162.835 172.77C162.329 175.396 159.868 177.174 157.217 176.83C155.39 176.594 153.929 175.415 153.239 173.858C154.144 169.713 158.088 166.88 162.373 167.436C162.866 167.499 163.343 167.606 163.801 167.75Z\"\n          fill=\"#FEB7FF\"\n        />\n        <path\n          d=\"M149.606 160.531C150.247 157.096 155.358 152.935 160.933 153.658C167.085 154.456 168.995 160.243 169.182 163.33L151.798 163.226C151.318 162.903 150.441 161.734 149.606 160.531Z\"\n          fill=\"#FFC200\"\n        />\n        <path\n          d=\"M97.1701 120.404L95.0631 116.077C94.4716 114.862 95.4178 113.463 96.7654 113.559L108.305 114.385C111.118 114.587 112.556 117.857 110.802 120.066L109.466 121.749C106.122 125.962 99.5251 125.241 97.1701 120.404Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          d=\"M175.936 166.247C185.198 156.73 199.208 154.099 211.873 154.991L208.949 166.686L192.361 175.272C190.266 175.223 180.146 170.457 175.936 166.247Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M157.432 156.192C158.177 155.87 160.229 155.639 161.767 156.192\"\n          stroke=\"#FFDE00\"\n          strokeWidth=\"3.33483\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M177.89 197.763L162.741 195.798C162.27 195.737 161.436 195.629 161.262 196.97C161.088 198.311 163.992 203.773 169.5 204.487C175.009 205.202 178.86 200.8 179.057 199.278C179.215 198.06 178.345 197.76 177.89 197.763Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M165.37 208.336C163.54 208.099 154.819 205.439 153.17 205.225C152.373 205.122 152.077 205.415 151.981 206.158C151.884 206.901 153.842 212.83 159.333 213.542C163.726 214.112 165.8 211.653 166.288 210.353C166.335 209.991 167.2 208.574 165.37 208.336Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M253.901 203.216C257.375 194.185 253.833 184.226 249.098 176.219C245.076 169.416 235.54 170.419 231.577 177.257L223.057 191.96C207.124 193.568 202.886 216.518 209.902 220.319C216.919 224.12 245.588 224.83 253.901 203.216Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M228.23 221.966C223.013 222.611 218.345 221.829 214.588 220.518C210.637 219.139 207.855 215.71 207.931 211.937C208.097 203.608 214.894 195.468 226.859 195.468C227.989 195.468 228.906 194.552 228.906 193.422C228.906 192.291 227.989 191.375 226.859 191.375C212.762 191.375 204.052 201.202 203.838 211.855C203.719 217.792 208.02 222.561 213.239 224.382C216.103 225.382 219.425 226.107 223.077 226.26C224.917 224.928 226.633 223.488 228.23 221.966Z\"\n          fill=\"#38AD00\"\n        />\n        <path\n          d=\"M152.829 192.965C149.169 192.491 146.139 189.997 144.435 189.776C143.566 189.663 143.071 190.336 143.13 191.45C143.189 192.581 144.916 198.572 148.903 199.089C152.89 199.606 154.543 195.951 154.623 195.335C154.703 194.719 154.786 193.219 152.829 192.965Z\"\n          fill=\"#89E219\"\n        />\n        <rect\n          opacity=\"0.3\"\n          x=\"102.318\"\n          y=\"253.454\"\n          width=\"171.964\"\n          height=\"10.574\"\n          rx=\"5.28698\"\n          fill=\"#AFAFAF\"\n        />\n        <path\n          d=\"M247.636 47.7783C244.236 46.1783 240.511 42.8617 239.511 41.2783C239.111 44.6783 242.969 49.695 244.511 51.9033C245.219 51.0908 246.836 49.1283 247.636 47.7783Z\"\n          fill=\"#FF6E6E\"\n        />\n        <path\n          d=\"M52.4003 186.004C48.6719 184.048 44.84 180.951 42.5193 178.539C41.8658 177.86 40.7136 178.249 40.9137 179.17C41.8716 183.579 45.5478 188.746 47.7612 191.857L47.7765 191.878C48.1535 192.408 48.9271 192.448 49.3435 191.948C50.374 190.712 51.7788 188.944 52.7963 187.423C53.1242 186.932 52.9226 186.278 52.4003 186.004Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M279.015 201.037C275.335 198.946 271.674 195.931 269.429 193.574C268.779 192.892 267.622 193.279 267.812 194.202C268.682 198.442 271.998 203.381 274.362 206.73C275.112 207.792 276.665 207.865 277.483 206.854C278.219 205.943 279.035 204.894 279.753 203.887C280.438 202.927 280.041 201.62 279.015 201.037Z\"\n          fill=\"#FF6E6E\"\n        />\n        <path\n          d=\"M89.005 188.623C86.5059 186.644 84.2659 183.114 82.8918 180.497C82.3451 179.456 82.8995 178.209 84.0211 177.855C84.8425 177.596 85.7958 177.301 86.7885 177.005C88.0546 176.627 89.4911 177.586 90.1007 178.759C91.0192 180.525 92.5918 182.556 94.0055 184.186C94.8802 185.195 94.6322 186.782 93.4535 187.409C92.7511 187.783 91.912 188.229 90.946 188.742C90.3215 189.074 89.5594 189.062 89.005 188.623Z\"\n          fill=\"#1CB0F6\"\n        />\n        <path\n          d=\"M261.851 144.465C264.864 142.341 267.561 137.803 268.915 135.02C269.173 134.491 268.895 133.869 268.335 133.688C267.057 133.276 265.161 132.682 263.264 132.135C262.629 131.952 261.962 132.435 261.743 133.058C260.924 135.389 258.317 138.612 256.418 140.683C255.967 141.175 256.089 141.967 256.679 142.281C257.626 142.786 259.043 143.539 260.871 144.51C261.183 144.676 261.562 144.669 261.851 144.465Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          d=\"M78.5675 13.1232C76.0684 11.1441 73.8284 7.61448 72.4543 4.9971C71.9076 3.95581 72.462 2.70922 73.5836 2.35516C74.405 2.09585 75.3583 1.80107 76.351 1.50503C77.6171 1.12748 79.0536 2.08643 79.6632 3.2586C80.5817 5.02495 82.1543 7.05623 83.568 8.68636C84.4427 9.695 84.1947 11.2823 83.016 11.9093C82.3136 12.283 81.4745 12.7291 80.5085 13.2425C79.884 13.5743 79.1219 13.5622 78.5675 13.1232Z\"\n          fill=\"#1CB0F6\"\n        />\n        <path\n          d=\"M186 82.2783C182.4 80.7129 179.167 76.5267 178 74.6293C179.25 74.3328 182.475 73.5976 185.375 73.0283C185.375 74.8783 189.708 78.4834 191.875 80.0548C191.25 80.2919 189.2 81.0687 186 82.2783Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M224.605 93.9234C226.82 92.7353 228.847 90.653 230.269 88.8773C231.121 87.8139 230.51 86.309 229.18 86.0138C228.469 85.856 227.687 85.6855 226.882 85.5152C225.65 85.2547 224.215 86.1848 223.425 87.1655C222.749 88.0058 221.827 88.9066 220.887 89.7366C219.695 90.7894 219.976 92.8037 221.464 93.3666L223.114 93.9908C223.602 94.175 224.146 94.1696 224.605 93.9234Z\"\n          fill=\"#BD8AFF\"\n        />\n        <path\n          d=\"M214.708 164.606C212.073 163.193 209.663 160.717 207.972 158.605C206.96 157.341 207.686 155.551 209.267 155.2C210.112 155.013 211.043 154.81 212.001 154.607C213.466 154.298 215.171 155.404 216.111 156.57C216.915 157.569 218.011 158.64 219.129 159.627C220.547 160.879 220.212 163.275 218.443 163.944L216.481 164.686C215.901 164.905 215.254 164.899 214.708 164.606Z\"\n          fill=\"#BD8AFF\"\n        />\n        <path\n          d=\"M80.875 238.778C84.475 237.213 87.7083 233.027 88.875 231.129C87.625 230.833 84.4 230.098 81.5 229.528C81.5 231.378 77.1667 234.983 75 236.555C75.625 236.792 77.675 237.569 80.875 238.778Z\"\n          fill=\"#BD8AFF\"\n        />\n        <path\n          d=\"M293.875 238.778C297.475 237.213 300.708 233.027 301.875 231.129C300.625 230.833 297.4 230.098 294.5 229.528C294.5 231.378 290.167 234.983 288 236.555C288.625 236.792 290.675 237.569 293.875 238.778Z\"\n          fill=\"#1CB0F6\"\n        />\n        <path\n          d=\"M7.31921 109.385C9.77401 108.069 12.0197 105.761 13.5954 103.793C14.539 102.615 13.8624 100.947 12.3887 100.62C11.6011 100.445 10.7341 100.257 9.84181 100.068C8.47669 99.7792 6.88723 100.81 6.01199 101.896C5.26198 102.828 4.24124 103.826 3.19936 104.746C1.8779 105.912 2.18981 108.144 3.83847 108.768L5.6673 109.46C6.20717 109.664 6.81057 109.658 7.31921 109.385Z\"\n          fill=\"#FF6E6E\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_2061_83374\">\n          <rect\n            width=\"301\"\n            height=\"264\"\n            fill=\"white\"\n            transform=\"translate(0 0.77832)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const LessonFastForwardEndFailSvg = () => {\n  return (\n    <svg width=\"207\" height=\"159\" viewBox=\"0 0 207 159\" fill=\"none\">\n      <g clipPath=\"url(#clip0_1883_314216)\">\n        <path\n          d=\"M5.69174 89.1438H43.9035V82.8086L61.3777 101.028C61.5119 101.162 61.645 101.298 61.777 101.435C72.236 112.33 71.9881 129.673 61.1394 140.212C50.2906 150.75 33.1363 150.314 22.6774 139.42C22.274 139 21.8865 138.57 21.5149 138.132C9.38905 124.393 3.95657 106.519 5.69174 89.1438Z\"\n          fill=\"#4EC602\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M204.414 124.777C200.987 128.453 195.229 128.654 191.554 125.227L181.068 115.448C177.393 112.021 177.192 106.264 180.619 102.589C184.046 98.9135 189.804 98.7125 193.479 102.14L203.965 111.918C207.64 115.345 207.841 121.102 204.414 124.777Z\"\n          fill=\"#F49000\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M204.414 63.9872C200.987 60.3121 195.229 60.111 191.554 63.5381L181.068 73.3162C177.393 76.7433 177.192 82.5009 180.619 86.176C184.046 89.8511 189.804 90.0522 193.479 86.6251L203.965 76.8469C207.64 73.4198 207.841 67.6623 204.414 63.9872Z\"\n          fill=\"#F49000\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M25.4197 55.7247C38.4827 23.3927 75.2826 7.77205 107.615 20.835L145.45 36.1214C177.782 49.1844 193.403 85.9844 180.34 118.316C175.261 130.887 166.594 140.932 155.996 147.746H84.6311L60.3094 137.92C27.9774 124.857 12.3568 88.0567 25.4197 55.7247Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M83.0251 147.096C86.2048 144.719 87.8716 140.871 87.2763 137.132C87.1343 136.24 86.1299 135.783 85.2927 136.228L72.7053 142.927L83.0251 147.096Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M94.485 147.746H108.004C108.795 145.978 109.089 144.023 108.782 142.096C108.64 141.205 107.636 140.748 106.799 141.193L94.485 147.746Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M19.9164 84.1809C24.9415 84.1809 29.0152 80.1073 29.0152 75.0822C29.0152 70.0571 24.9415 65.9834 19.9164 65.9834C14.8913 65.9834 10.8176 70.0571 10.8176 75.0822C10.8176 80.1073 14.8913 84.1809 19.9164 84.1809Z\"\n          fill=\"#8EE000\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M0.891602 90.7981C0.891602 86.8389 4.10115 83.6294 8.06032 83.6294H17.9862C21.9454 83.6294 25.155 86.8389 25.155 90.7981C25.155 94.7573 21.9454 97.9668 17.9862 97.9668H8.06032C4.10115 97.9668 0.891602 94.7573 0.891602 90.7981Z\"\n          fill=\"#4EC602\"\n        />\n        <path\n          d=\"M129.328 1.71704C100.341 10.3065 81.5476 14.6012 72.9477 14.6012C68.0325 14.6012 62.9129 12.5094 57.5889 8.32573C47.316 0.253017 32.4439 2.03664 24.3712 12.3096C21.0957 16.4778 19.3152 21.6253 19.3152 26.9265V77.8313C19.3152 105.067 41.3937 127.145 68.629 127.145C75.8452 127.145 82.9734 125.561 89.5107 122.506C121.283 128.87 152.199 108.274 158.563 76.5017C159.323 72.7074 159.706 68.8472 159.706 64.9775V24.399C159.706 11.3337 149.115 0.742188 136.049 0.742188C133.774 0.742188 131.51 1.07052 129.328 1.71704Z\"\n          fill=\"#58CC02\"\n        />\n        <path\n          d=\"M93.3367 132.953L108.892 124.675C109.725 124.231 110.735 124.704 110.885 125.608C111.607 129.954 109.361 134.416 105.252 136.603C101.142 138.79 96.1909 138.158 92.9952 135.129C92.33 134.498 92.503 133.397 93.3367 132.953Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M94.0857 79.2178H115.592L109.25 88.0408H94.0857V79.2178Z\"\n          fill=\"#8EE000\"\n        />\n        <path\n          opacity=\"0.3\"\n          d=\"M182.459 158.631C185.428 158.631 187.835 156.159 187.835 153.111C187.835 150.062 185.428 147.591 182.459 147.591H10.6068C7.63785 147.591 5.23103 150.062 5.23103 153.111C5.23103 156.159 7.63785 158.631 10.6068 158.631H182.459Z\"\n          fill=\"#AFAFAF\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M79.1956 35.873C73.1556 42.4558 63.2952 41.3623 58.2387 35.8084C50.4037 27.3874 49.0519 40.028 54.1833 73.7299H83.5806C84.6839 44.1034 83.2223 31.4845 79.1956 35.873Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M103.157 26.1826H101.262C86.7572 26.1826 74.999 37.9408 74.999 52.4454V68.3938C74.999 82.8983 86.7572 94.6565 101.262 94.6565H103.157C117.662 94.6565 129.42 82.8983 129.42 68.3938V52.4454C129.42 37.9408 117.662 26.1826 103.157 26.1826Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M97.9937 15.4489L76.7098 38.5677C75.5932 39.8069 76.0091 41.772 77.5311 42.4486C84.844 45.6995 93.5694 43.8655 99.0732 37.7576C104.577 31.6497 105.49 22.787 101.49 15.8595C100.658 14.4177 99.1103 14.2097 97.9937 15.4489Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M108.586 20.9452L87.7543 44.0639C86.6377 45.3031 87.0536 47.2682 88.5757 47.9448C95.8885 51.1957 104.614 49.3617 110.118 43.2538C115.622 37.1459 116.535 28.2832 112.535 21.3557C111.702 19.9139 109.703 19.7061 108.586 20.9452Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M40.1664 16.3017L57.4646 34.9966C58.3697 36.0009 57.8103 37.7937 56.3599 38.5373C49.3912 42.11 41.5997 41.2715 37.1384 36.3215C32.6772 31.3714 32.6558 23.541 36.9392 16.9886C37.8307 15.6249 39.2613 15.2974 40.1664 16.3017Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M31.7426 21.7621L48.6402 40.5112C49.5459 41.5162 48.987 43.3095 47.5364 44.0529C40.5667 47.6246 32.7725 46.7831 28.3082 41.8296C23.8439 36.8761 23.8199 29.0427 28.1023 22.4894C28.9936 21.1254 30.8369 20.7571 31.7426 21.7621Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M39.8095 26.1826C28.3888 26.1826 19.1305 35.4409 19.1305 46.8616V73.9775C19.1305 85.3982 28.3888 94.6565 39.8095 94.6565C51.2302 94.6565 60.4885 85.3982 60.4885 73.9775V46.8616C60.4885 35.4409 51.2302 26.1826 39.8095 26.1826Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M101.422 35.3467C90.7502 35.3467 82.0988 43.9981 82.0988 54.6702V66.5651C82.0988 77.2371 90.7502 85.8886 101.422 85.8886C112.094 85.8886 120.746 77.2371 120.746 66.5651V54.6702C120.746 43.9981 112.094 35.3467 101.422 35.3467Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M42.5051 35.8994C33.9686 35.8994 27.0483 42.8197 27.0483 51.3562V70.433C27.0483 78.9696 33.9686 85.8899 42.5051 85.8899C51.0417 85.8899 57.9619 78.9696 57.9619 70.433V51.3562C57.9619 42.8197 51.0417 35.8994 42.5051 35.8994Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M99.6818 55.4504C101.144 54.4391 102.918 53.8467 104.831 53.8467C109.836 53.8467 113.894 57.9043 113.894 62.9096V73.1435C113.894 78.1489 109.836 82.2065 104.831 82.2065C99.8254 82.2065 95.7678 78.1489 95.7678 73.1435V64.5627C96.4239 64.8825 97.161 65.062 97.94 65.062C100.681 65.062 102.903 62.84 102.903 60.099C102.903 57.971 101.564 56.1558 99.6818 55.4504Z\"\n          fill=\"#4B4B4B\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M44.8481 55.5788C46.147 54.4973 47.8174 53.8467 49.6397 53.8467C53.7779 53.8467 57.1325 57.2013 57.1325 61.3395V74.7837C57.1325 78.9219 53.7779 82.2765 49.6397 82.2765C45.5016 82.2765 42.147 78.9219 42.147 74.7837V65.0199C42.3594 65.0477 42.5761 65.062 42.7962 65.062C45.5371 65.062 47.7591 62.84 47.7591 60.099C47.7591 58.0899 46.5652 56.3595 44.8481 55.5788Z\"\n          fill=\"#4B4B4B\"\n        />\n        <path\n          d=\"M19.7786 83.667C14.9063 83.7431 10.8949 79.8551 10.8187 74.9828C10.7426 70.1106 14.6306 66.0992 19.5029 66.023C19.9161 66.0166 20.5807 66.0206 21.4646 66.0476C22.8756 66.0907 24.4386 66.1825 26.1222 66.3361C30.9447 66.7762 35.8362 67.6297 40.564 69.0277C45.5072 70.4894 50.003 72.4734 53.9189 75.0994C57.966 77.8133 59.0468 83.2942 56.3328 87.3413C53.6189 91.3884 48.138 92.4692 44.0909 89.7552C41.7907 88.2128 38.8997 86.937 35.5603 85.9495C32.0488 84.9112 28.2667 84.2513 24.5185 83.9092C23.2023 83.7891 21.9926 83.7181 20.9252 83.6854C20.3221 83.667 19.9281 83.6646 19.7786 83.667Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.8207 31.5576L52.9262 30.5762L64.0908 50.0502C57.4321 49.2166 51.2086 48.7998 45.4202 48.7998C39.6318 48.7998 32.9963 49.6657 25.5135 51.3974L24.8207 31.5576Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M119.285 33.8939L89.7805 29.1015L77.9472 49.7558C84.7164 48.7296 90.9043 48.4003 96.511 48.768C102.118 49.1358 110.234 50.4397 120.86 52.6797L119.285 33.8939Z\"\n          fill=\"#89E219\"\n        />\n        <path\n          d=\"M21.775 75.2242C20.1211 75.4894 18.5653 74.3637 18.3001 72.7098C18.0348 71.0559 19.1605 69.5002 20.8144 69.2349C24.0717 68.7125 26.9748 69.1168 29.4214 70.5206C30.8743 71.3542 31.3763 73.2078 30.5427 74.6607C29.7091 76.1135 27.8555 76.6156 26.4026 75.7819C25.2477 75.1193 23.7392 74.9091 21.775 75.2242Z\"\n          fill=\"#9AF300\"\n        />\n        <path\n          d=\"M52.6326 79.4564C53.8652 73.0529 59.4456 68.084 67.1475 68.084C74.0105 68.084 80.1782 73.0529 81.4108 79.4564V80.6802C81.4108 82.6012 79.1656 83.8124 77.4513 82.9456C74.6438 81.526 70.6859 79.9859 66.728 79.9859C62.9674 79.9859 59.3608 81.3763 56.7373 82.7327C54.9922 83.6349 52.6326 82.4079 52.6326 80.4435V79.4564Z\"\n          fill=\"#FFC200\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M63.1817 74.5208C63.179 74.5223 63.1764 74.5237 63.1737 74.5252C63.1747 74.5246 63.1764 74.5237 63.1787 74.5225C63.1882 74.5177 63.2081 74.5075 63.2378 74.493C63.2975 74.4639 63.3959 74.4176 63.5281 74.3613C63.7939 74.2481 64.1875 74.098 64.6698 73.965C65.6524 73.6939 66.8962 73.5227 68.1491 73.7771C69.2884 74.0083 70.3994 73.2722 70.6307 72.1329C70.862 70.9936 70.1259 69.8826 68.9866 69.6513C66.8709 69.2218 64.9201 69.5287 63.5502 69.9067C62.8562 70.0981 62.2841 70.3153 61.8782 70.4882C61.6746 70.5749 61.5107 70.6514 61.392 70.7093C61.3326 70.7383 61.2843 70.7627 61.2478 70.7816L61.202 70.8055L61.1858 70.8141L61.1795 70.8176L61.1767 70.819L61.1754 70.8197C61.1748 70.8201 61.1743 70.8204 62.1785 72.6702L61.1743 70.8204C60.1526 71.375 59.774 72.6529 60.3286 73.6746C60.8816 74.6932 62.1535 75.0726 63.1737 74.5252\"\n          fill=\"#FFDE00\"\n        />\n        <path\n          d=\"M61.4429 83.9428C61.4429 83.9428 67.2854 80.4185 72.6018 83.9428\"\n          stroke=\"#F49000\"\n          strokeWidth=\"10.5984\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M76.8177 95.6979C77.066 94.7796 78.0118 94.2365 78.9301 94.4848L79.9363 94.7569C85.0891 96.1505 88.1366 101.457 86.743 106.61L86.6236 107.052C86.3753 107.97 85.4295 108.513 84.5112 108.265L83.505 107.993C78.3522 106.599 75.3047 101.292 76.6983 96.1394L76.8177 95.6979Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M166.798 95.1965C166.509 94.2903 165.54 93.7902 164.634 94.0796L163.641 94.3967C158.556 96.0203 155.75 101.459 157.373 106.544L157.513 106.979C157.802 107.886 158.771 108.386 159.677 108.096L160.67 107.779C165.755 106.156 168.561 100.717 166.937 95.6322L166.798 95.1965Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M75.2117 114.622C74.8443 113.745 75.2577 112.735 76.1352 112.368L77.0966 111.965C82.0203 109.904 87.6831 112.224 89.7448 117.147L89.9215 117.569C90.2889 118.447 89.8754 119.456 88.998 119.823L88.0365 120.226C83.1128 122.288 77.4501 119.968 75.3883 115.044L75.2117 114.622Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M169.384 114.622C169.751 113.745 169.338 112.735 168.46 112.368L167.499 111.965C162.575 109.904 156.913 112.224 154.851 117.147L154.674 117.569C154.307 118.447 154.72 119.456 155.598 119.823L156.559 120.226C161.483 122.288 167.146 119.968 169.207 115.044L169.384 114.622Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M83.2519 132.151C82.3631 131.812 81.9175 130.817 82.2567 129.928L82.6283 128.954C84.5313 123.967 90.1169 121.467 95.1041 123.37L95.5314 123.533C96.4202 123.872 96.8658 124.867 96.5266 125.756L96.155 126.73C94.252 131.717 88.6664 134.217 83.6792 132.314L83.2519 132.151Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M160.769 132.151C161.658 131.812 162.103 130.817 161.764 129.928L161.393 128.954C159.49 123.967 153.904 121.467 148.917 123.37L148.489 123.533C147.601 123.872 147.155 124.867 147.494 125.756L147.866 126.73C149.769 131.717 155.355 134.217 160.342 132.314L160.769 132.151Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M90.7999 79.5766C90.7999 72.0894 98.7295 67.1786 105.632 70.0794C112.068 72.7843 118.959 75.2609 122.61 75.2609C126.262 75.2609 133.152 72.7843 139.588 70.0794C146.491 67.1786 154.42 72.0894 154.42 79.5766V100.318C154.42 117.886 140.178 132.128 122.61 132.128C105.042 132.128 90.7999 117.886 90.7999 100.318V79.5766Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M154.419 88.2609C153.441 106.767 138.126 121.471 119.376 121.471C108.15 121.471 98.155 116.2 91.7315 107.997C91.122 105.538 90.7986 102.966 90.7986 100.318V79.5766C90.7986 72.0894 98.7281 67.1786 105.631 70.0794C112.067 72.7843 118.957 75.2609 122.609 75.2609C126.26 75.2609 133.15 72.7843 139.587 70.0794C146.489 67.1786 154.419 72.0894 154.419 79.5766V88.2609Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M106.589 141.396C106.589 139.521 108.109 138 109.985 138H134.35C136.225 138 137.746 139.521 137.746 141.396C137.746 143.272 136.225 144.793 134.35 144.793H109.985C108.109 144.793 106.589 143.272 106.589 141.396Z\"\n          fill=\"#FFB800\"\n        />\n        <circle cx=\"101.631\" cy=\"79.1252\" r=\"6.28534\" fill=\"#FFF500\" />\n        <rect\n          x=\"118.953\"\n          y=\"128.444\"\n          width=\"6.76437\"\n          height=\"14.5981\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M114.152 138.064C118.136 138.064 119.012 135.791 118.953 134.654L124.022 139.051L115.902 142.64C113.659 141.114 110.169 138.064 114.152 138.064Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M114.198 130.922C118.061 131.894 118.965 133.509 118.965 134.668L124.023 130.264L115.903 127.826C113.66 129.351 110.721 130.047 114.198 130.922Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M130.451 131.152C126.588 132.125 125.684 133.74 125.684 134.898L120.626 130.494L128.746 126.905C130.989 128.431 133.928 130.278 130.451 131.152Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M130.451 131.152C126.588 132.125 125.684 133.74 125.684 134.898L120.626 130.494L128.746 126.905C130.989 128.431 133.928 130.278 130.451 131.152Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M130.567 137.949C126.583 137.949 125.592 135.676 125.651 134.539L120.697 138.936L128.817 142.525C131.06 140.999 134.551 137.949 130.567 137.949Z\"\n          fill=\"#FFB800\"\n        />\n        <path\n          d=\"M99.5647 144.793C99.5647 142.917 101.085 141.396 102.961 141.396H141.3C143.175 141.396 144.696 142.917 144.696 144.793C144.696 146.669 143.175 148.189 141.3 148.189H102.961C101.085 148.189 99.5647 146.669 99.5647 144.793Z\"\n          fill=\"#FFD600\"\n        />\n        <path\n          d=\"M85.3955 106.712C85.516 110.801 87.6432 120.11 95.1884 124.63\"\n          stroke=\"#FFD600\"\n          strokeWidth=\"2.58766\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M158.857 106.712C158.737 110.801 156.609 120.11 149.064 124.63\"\n          stroke=\"#FFB800\"\n          strokeWidth=\"2.58766\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M152.622 122.381C158.93 126.197 160.306 134.761 155.511 140.361L153.255 142.995C146.64 150.72 134.013 147.165 132.4 137.124L131.688 132.695C130.075 122.654 140.953 115.322 149.655 120.586L152.622 122.381Z\"\n          fill=\"#58CC02\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_1883_314216\">\n          <rect\n            width=\"206\"\n            height=\"158\"\n            fill=\"white\"\n            transform=\"translate(0.853516 0.234375)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const LessonTopBarHeart = () => {\n  return (\n    <svg width=\"28\" height=\"23\" viewBox=\"0 0 28 23\" fill=\"none\">\n      <path\n        d=\"M0.5 7.67929C0.5 10.2722 1.81423 12.5649 3.82688 13.9554L12.4105 21.4445C13.4302 22.3342 14.9537 22.3223 15.9595 21.4169L24.592 13.6451C26.3662 12.2371 27.5001 10.0877 27.5001 7.67929C27.5001 3.43814 23.9839 0 19.6464 0C17.43 0 15.428 0.897744 14 2.34164C12.5721 0.897744 10.5701 0 8.35369 0C4.01622 0 0.5 3.43814 0.5 7.67929Z\"\n        fill=\"#FF4B4B\"\n      />\n      <path\n        opacity=\"0.3\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.0348 10.9896C9.76872 10.9896 11.1743 9.54248 11.1743 7.75737C11.1743 5.97226 9.76872 4.52515 8.0348 4.52515C6.30088 4.52515 4.89526 5.97226 4.89526 7.75737C4.89526 9.54248 6.30088 10.9896 8.0348 10.9896Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const LessonTopBarEmptyHeart = () => {\n  return (\n    <svg width=\"28\" height=\"23\" viewBox=\"0 0 28 23\" fill=\"none\">\n      <path\n        d=\"M0.5 7.67929C0.5 10.2722 1.81423 12.5649 3.82688 13.9554L12.4105 21.4445C13.4302 22.3342 14.9537 22.3223 15.9595 21.4169L24.592 13.6451C26.3662 12.2371 27.5001 10.0877 27.5001 7.67929C27.5001 3.43814 23.9839 0 19.6464 0C17.43 0 15.428 0.897744 14 2.34164C12.5721 0.897744 10.5701 0 8.35369 0C4.01622 0 0.5 3.43814 0.5 7.67929Z\"\n        fill=\"#E5E5E5\"\n      />\n    </svg>\n  );\n};\n\nexport const LessonCompletionSvg0 = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      style={{ transitionDuration: \"400ms\" }}\n      viewBox=\"0 0 100 100\"\n      className=\"absolute\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"clip-session/ProgressRing1\">\n          <path d=\"M3.061616997868383e-15,-50L2.5717582782094417e-15,-42Z\"></path>\n        </clipPath>\n      </defs>\n      <g transform=\"translate(50, 50)\">\n        <path\n          d=\"M3.061616997868383e-15,-50A50,50,0,1,1,-3.061616997868383e-15,50A50,50,0,1,1,3.061616997868383e-15,-50M-7.715274834628325e-15,-42A42,42,0,1,0,7.715274834628325e-15,42A42,42,0,1,0,-7.715274834628325e-15,-42Z\"\n          fill=\"rgb(229,229,229)\"\n        ></path>\n        <circle\n          clipPath=\"url(#clip-session/ProgressRing1)\"\n          cx=\"-3.9949609477190866\"\n          cy=\"-45.82619651494328\"\n          fill=\"rgb(255,255,255)\"\n          r=\"4\"\n        ></circle>\n        <path\n          d=\"M3.061616997868383e-15,-50L2.5717582782094417e-15,-42Z\"\n          fill=\"rgb(255,200,0)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n\nexport const LessonCompletionSvg1 = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      style={{ transitionDuration: \"400ms\" }}\n      viewBox=\"0 0 100 100\"\n      className=\"absolute\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"clip-session/ProgressRing614\">\n          <path d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,0,1,49.979156518488836,1.4435767040219651A4,4,0,0,1,45.51809422092188,5.301235563081284L45.51809422092188,5.301235563081285A4,4,0,0,1,41.98249147553062,1.2126044313784499A42,42,0,0,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"></path>\n        </clipPath>\n      </defs>\n      <g transform=\"translate(50, 50)\">\n        <path\n          d=\"M3.061616997868383e-15,-50A50,50,0,1,1,-3.061616997868383e-15,50A50,50,0,1,1,3.061616997868383e-15,-50M-7.715274834628325e-15,-42A42,42,0,1,0,7.715274834628325e-15,42A42,42,0,1,0,-7.715274834628325e-15,-42Z\"\n          fill=\"#E5E5E5\"\n        ></path>\n        <circle\n          clipPath=\"url(#clip-session/ProgressRing614)\"\n          cx=\"45.82619651494328\"\n          cy=\"-3.994960947719092\"\n          fill=\"#FFFFFF\"\n          r=\"6.666666666666666\"\n        ></circle>\n        <path\n          d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,0,1,49.81060537995478,-4.347826086956522A4,4,0,0,1,45.8257569495584,0L45.8257569495584,0A4,4,0,0,1,41.840908519162014,-3.652173913043479A42,42,0,0,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"\n          fill=\"#FFC800\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n\nexport const LessonCompletionSvg2 = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      viewBox=\"0 0 100 100\"\n      style={{ transitionDuration: \"400ms\" }}\n      className=\"absolute\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"clip-session/ProgressRing1043\">\n          <path d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,0,1,-1.4435767040219774,49.979156518488836A4,4,0,0,1,-5.30123556308129,45.51809422092188L-5.301235563081291,45.51809422092188A4,4,0,0,1,-1.2126044313784563,41.98249147553062A42,42,0,0,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"></path>\n        </clipPath>\n      </defs>\n      <g transform=\"translate(50, 50)\">\n        <path\n          d=\"M3.061616997868383e-15,-50A50,50,0,1,1,-3.061616997868383e-15,50A50,50,0,1,1,3.061616997868383e-15,-50M-7.715274834628325e-15,-42A42,42,0,1,0,7.715274834628325e-15,42A42,42,0,1,0,-7.715274834628325e-15,-42Z\"\n          fill=\"rgb(229,229,229)\"\n        ></path>\n        <circle\n          clipPath=\"url(#clip-session/ProgressRing1043)\"\n          cx=\"3.9949609477190924\"\n          cy=\"45.82619651494328\"\n          fill=\"rgb(255,255,255)\"\n          r=\"6.666666666666666\"\n        ></circle>\n        <path\n          d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,0,1,4.347826086956521,49.81060537995478A4,4,0,0,1,3.552713678800501e-15,45.8257569495584L3.552713678800501e-15,45.8257569495584A4,4,0,0,1,3.6521739130434816,41.840908519162014A42,42,0,0,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"\n          fill=\"rgb(255,200,0)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n\nexport const LessonCompletionSvg3 = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      viewBox=\"0 0 100 100\"\n      style={{ transitionDuration: \"400ms\" }}\n      className=\"absolute\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"clip-session/ProgressRing1577\">\n          <path d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,1,1,-49.979156518488836,-1.4435767040219978A4,4,0,0,1,-45.518094220921874,-5.301235563081309L-45.518094220921874,-5.301235563081308A4,4,0,0,1,-41.982491475530615,-1.212604431378473A42,42,0,1,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"></path>\n        </clipPath>\n      </defs>\n      <g transform=\"translate(50, 50)\">\n        <path\n          d=\"M3.061616997868383e-15,-50A50,50,0,1,1,-3.061616997868383e-15,50A50,50,0,1,1,3.061616997868383e-15,-50M-7.715274834628325e-15,-42A42,42,0,1,0,7.715274834628325e-15,42A42,42,0,1,0,-7.715274834628325e-15,-42Z\"\n          fill=\"rgb(229,229,229)\"\n        ></path>\n        <circle\n          clipPath=\"url(#clip-session/ProgressRing1577)\"\n          cx=\"-45.82619651494328\"\n          cy=\"3.994960947719095\"\n          fill=\"rgb(255,255,255)\"\n          r=\"6.666666666666666\"\n        ></circle>\n        <path\n          d=\"M3.552713678800501e-15,-45.8257569495584A4,4,0,0,1,4.347826086956525,-49.81060537995478A50,50,0,1,1,-49.81060537995478,4.347826086956535A4,4,0,0,1,-45.8257569495584,5.329070518200751e-15L-45.8257569495584,5.329070518200751e-15A4,4,0,0,1,-41.840908519162014,3.652173913043483A42,42,0,1,0,3.6521739130434776,-41.840908519162014A4,4,0,0,1,3.552713678800501e-15,-45.8257569495584Z\"\n          fill=\"rgb(255,200,0)\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n\nexport const EmptyFireSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      width=\"25px\"\n      height=\"30px\"\n      viewBox=\"0 0 25 30\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      {...props}\n    >\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g\n          id=\"streak-empty\"\n          transform=\"translate(1.000000, 1.000000)\"\n          fillRule=\"nonzero\"\n        >\n          <g id=\"Group\" fill=\"#E5E5E5\" stroke=\"#FFFFFF\" strokeWidth=\"2\">\n            <path\n              d=\"M0.068,15.675 L0.044,7.216 C0.039,5.334 1.25,3.942 3.056,4.246 C3.413,4.306 3.998,4.491 4.306,4.656 L5.997,5.561 L9.247,1.464 C9.79255754,0.776391272 10.6222536,0.37555895 11.5,0.37555895 C12.3777464,0.37555895 13.2074425,0.776391272 13.753,1.464 L20.523,10 C22.1231469,11.939276 22.9988566,14.3747884 23,16.889 C23,23.034 17.843,28 11.5,28 C5.157,28 0,23.034 0,16.889 C0,16.481 0.023,16.076 0.068,15.675 Z\"\n              id=\"Path\"\n            />\n          </g>\n          <g\n            id=\"Group\"\n            transform=\"translate(7.000000, 11.000000)\"\n            fill=\"#FFFFFF\"\n          >\n            <path\n              d=\"M1.012,5.077 C1.02645313,5.04002851 1.04561094,5.00507392 1.069,4.973 L3.719,1.364 C3.89306825,1.12674185 4.1697362,0.986581193 4.464,0.986581193 C4.7582638,0.986581193 5.03493175,1.12674185 5.209,1.364 L7.732,4.8 C8.54117469,5.59477404 8.99791508,6.68079318 9,7.815 C9,10.208 6.985,12.148 4.5,12.148 C2.015,12.148 0,10.208 0,7.815 C0,6.776 0.38,5.823 1.012,5.077 L1.012,5.077 Z\"\n              id=\"Path\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const FireSvg = () => {\n  return (\n    <svg width=\"25px\" height=\"30px\" viewBox=\"0 0 25 30\">\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth={1}\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g\n          id=\"streak\"\n          transform=\"translate(1.000000, 1.000000)\"\n          fillRule=\"nonzero\"\n        >\n          <g id=\"Group\" fill=\"#FF9600\" stroke=\"#FFFFFF\" strokeWidth={2}>\n            <path\n              d=\"M0.068,15.675 L0.044,7.216 C0.039,5.334 1.25,3.942 3.056,4.246 C3.413,4.306 3.998,4.491 4.306,4.656 L5.997,5.561 L9.247,1.464 C9.79255754,0.776391272 10.6222536,0.37555895 11.5,0.37555895 C12.3777464,0.37555895 13.2074425,0.776391272 13.753,1.464 L20.523,10 C22.1231469,11.939276 22.9988566,14.3747884 23,16.889 C23,23.034 17.843,28 11.5,28 C5.157,28 0,23.034 0,16.889 C0,16.481 0.023,16.076 0.068,15.675 Z\"\n              id=\"Path\"\n            />\n          </g>\n          <g\n            id=\"Group\"\n            transform=\"translate(7.000000, 11.000000)\"\n            fill=\"#FFC800\"\n          >\n            <path\n              d=\"M1.012,5.077 C1.02645313,5.04002851 1.04561094,5.00507392 1.069,4.973 L3.719,1.364 C3.89306825,1.12674185 4.1697362,0.986581193 4.464,0.986581193 C4.7582638,0.986581193 5.03493175,1.12674185 5.209,1.364 L7.732,4.8 C8.54117469,5.59477404 8.99791508,6.68079318 9,7.815 C9,10.208 6.985,12.148 4.5,12.148 C2.015,12.148 0,10.208 0,7.815 C0,6.776 0.38,5.823 1.012,5.077 L1.012,5.077 Z\"\n              id=\"Path\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const EmptyGemSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg width=\"26\" height=\"30\" viewBox=\"0 0 26 30\" {...props}>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g fill=\"#E5E5E5\" stroke=\"#FFF\" strokeWidth=\"2\">\n          <path d=\"M4.12 6.36l6.475-3.908a4.387 4.387 0 0 1 4.534 0l6.475 3.907a4.387 4.387 0 0 1 2.12 3.757v9.666a4.387 4.387 0 0 1-2.12 3.756l-6.475 3.907a4.387 4.387 0 0 1-4.534 0L4.12 23.538A4.387 4.387 0 0 1 2 19.782v-9.666c0-1.538.804-2.962 2.12-3.757z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const GemSvg = () => {\n  return (\n    <svg width=\"24px\" height=\"30px\" viewBox=\"0 0 24 30\">\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth={1}\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g\n          id=\"lingot\"\n          transform=\"translate(1.000000, 1.000000)\"\n          fillRule=\"nonzero\"\n        >\n          <path\n            d=\"M2.12,5.36 L8.595,1.452 C9.9891922,0.61047923 11.7348078,0.61047923 13.129,1.452 L19.604,5.359 C20.9201138,6.15339332 21.7243996,7.57872448 21.7240001,9.116 L21.7240001,18.782 C21.7240001,20.3189192 20.9198086,21.7437908 19.604,22.538 L13.129,26.445 C11.7348078,27.2865208 9.9891922,27.2865208 8.595,26.445 L2.12,22.538 C0.804191377,21.7437908 0,20.3189192 0,18.782 L0,9.116 C0,7.578 0.804,6.154 2.12,5.359 L2.12,5.36 Z\"\n            id=\"Path\"\n            stroke=\"#FFFFFF\"\n            strokeWidth={2}\n            fill=\"#FC4848\"\n          />\n          <path\n            d=\"M10.89,5.273 L10.89,8.438 C10.89,8.816 10.692,9.166 10.37,9.362 L7.422,11.145 C7.05578595,11.3664376 6.59336378,11.350749 6.243,11.105 L3.857,9.433 C3.55901568,9.22418286 3.38621247,8.87935269 3.39729469,8.51565441 C3.40837691,8.15195613 3.60185462,7.81828687 3.912,7.628 L9.245,4.352 C9.57820431,4.14746267 9.99593499,4.1389799 10.3371682,4.32982156 C10.6784014,4.52066323 10.8898476,4.88102607 10.89,5.272 L10.89,5.273 Z\"\n            id=\"Path\"\n            fill=\"#FFFFFF\"\n            opacity=\"0.793\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const LingotsTreasureChestSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg width=\"124\" height=\"124\" viewBox=\"0 0 124 124\" {...props}>\n      <title>lingot_chest</title>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(12 16)\">\n          <rect\n            fill=\"#FFBC00\"\n            x=\"41.074\"\n            y=\"13.018\"\n            width=\"19.396\"\n            height=\"11.343\"\n            rx=\"3.404\"\n          />\n          <rect\n            fill=\"#FFBC00\"\n            x=\"13.691\"\n            y=\"17.555\"\n            width=\"73.02\"\n            height=\"11.343\"\n            rx=\"3.404\"\n          />\n          <path\n            d=\"M16.561 24.766c-.738 0-1.337.599-1.337 1.337V60.05c0 .738.599 1.337 1.337 1.337h66.14c.737 0 1.336-.599 1.336-1.337V26.103c0-.738-.599-1.337-1.337-1.337H16.561z\"\n            stroke=\"#AA572A\"\n            strokeWidth=\"5.348\"\n            fill=\"#864624\"\n          />\n          <g fill=\"#E33535\">\n            <path d=\"M54.805 31.994l10.76-3.007c1.433-.4 2.97.012 4.01 1.075l7.815 7.984a4.076 4.076 0 0 1 1.025 3.906l-3.55 13.247a4.076 4.076 0 0 1-2.84 2.87l-10.76 3.007a4.076 4.076 0 0 1-4.01-1.074l-7.815-7.985a4.076 4.076 0 0 1-1.024-3.905l3.55-13.247a4.076 4.076 0 0 1 2.84-2.87z\" />\n          </g>\n          <g>\n            <path\n              d=\"M48.95 24.032l-10.588-3.566a4.076 4.076 0 0 0-4.06.863l-8.223 7.564a4.076 4.076 0 0 0-1.227 3.847l2.85 13.415a4.076 4.076 0 0 0 2.687 3.015l10.588 3.566a4.076 4.076 0 0 0 4.06-.863l8.223-7.565a4.076 4.076 0 0 0 1.227-3.847l-2.851-13.414a4.076 4.076 0 0 0-2.686-3.015z\"\n              fill=\"#FF4B4B\"\n            />\n            <path\n              d=\"M36.967 24.627l1.773 8.343a1.3 1.3 0 0 1-1.609 1.525l-8.308-2.237a1.3 1.3 0 0 1-.549-2.204l6.534-6.106a1.3 1.3 0 0 1 2.159.68z\"\n              fill=\"#FFA6A6\"\n            />\n          </g>\n          <g fill=\"#E33535\">\n            <path d=\"M53.073 39.666l-11.153.66a4.076 4.076 0 0 0-3.441 2.322l-4.79 10.094a4.076 4.076 0 0 0 .302 4.026l7.67 11.37a4.076 4.076 0 0 0 3.619 1.789l11.153-.66a4.076 4.076 0 0 0 3.442-2.321l4.79-10.094a4.076 4.076 0 0 0-.304-4.026l-7.669-11.37a4.076 4.076 0 0 0-3.62-1.79z\" />\n          </g>\n          <g>\n            <path\n              d=\"M64.07 36.264l11.153.66a4.076 4.076 0 0 1 3.441 2.32l4.79 10.095a4.076 4.076 0 0 1-.303 4.026l-7.669 11.37a4.076 4.076 0 0 1-3.62 1.79l-11.153-.661a4.076 4.076 0 0 1-3.441-2.321l-4.79-10.094a4.076 4.076 0 0 1 .303-4.026l7.67-11.37a4.076 4.076 0 0 1 3.619-1.79z\"\n              fill=\"#FF4B4B\"\n            />\n            <path\n              d=\"M74.642 41.65l-4.77 7.071a1.3 1.3 0 0 1-2.215-.098l-4.161-7.53a1.3 1.3 0 0 1 1.204-1.926l8.93.459a1.3 1.3 0 0 1 1.012 2.024z\"\n              fill=\"#FFA6A6\"\n            />\n          </g>\n          <g fill=\"#FF4B4B\">\n            <path d=\"M34.98 37.059l-11.052.615a4.076 4.076 0 0 0-3.462 2.335l-4.71 10.017a4.076 4.076 0 0 0 .309 4.014l7.68 11.385a4.076 4.076 0 0 0 3.605 1.79l11.052-.615a4.076 4.076 0 0 0 3.462-2.335l4.71-10.017a4.076 4.076 0 0 0-.309-4.014l-7.68-11.385a4.076 4.076 0 0 0-3.605-1.79z\" />\n          </g>\n          <path\n            d=\"M21.564 41.801l5.424 9.238a1.3 1.3 0 0 0 2.38-.976l-2.354-9.323a1.3 1.3 0 0 0-1.296-.98l-3.07.084a1.3 1.3 0 0 0-1.084 1.957z\"\n            fill=\"#FFA6A6\"\n          />\n          <path\n            d=\"M1.35 28.913l1.307-2.252a2.674 2.674 0 0 1 3.644-.976l2.278 1.308a2.674 2.674 0 0 1 .981 3.662l-1.307 2.251a2.674 2.674 0 0 1-3.644.977l-2.278-1.308a2.674 2.674 0 0 1-.981-3.662zM79.269 8.04l-3.02-5.199a2.674 2.674 0 0 0-3.642-.976l-5.243 3.01a2.674 2.674 0 0 0-.981 3.661l3.019 5.199a2.674 2.674 0 0 0 3.643.976l5.243-3.01a2.674 2.674 0 0 0 .981-3.661zM99.276 50.658l-.737-1.27a2.674 2.674 0 0 0-3.643-.976l-1.29.74a2.674 2.674 0 0 0-.982 3.663l.737 1.269a2.674 2.674 0 0 0 3.644.976l1.29-.74a2.674 2.674 0 0 0 .981-3.662z\"\n            fill=\"#FF4B4B\"\n            opacity=\".301\"\n          />\n          <path fill=\"#AA572A\" d=\"M13.691 50.49H85.57v41.97H13.691z\" />\n          <path\n            d=\"M21.207 78.28H73.49\"\n            stroke=\"#904821\"\n            strokeWidth=\"2.674\"\n            strokeLinecap=\"square\"\n          />\n          <g>\n            <path fill=\"#FFBC00\" d=\"M21.678 84.52h54.765v7.94H21.678z\" />\n            <path\n              d=\"M24.621 84.52h50.02l-7.987 7.94H21.678v-5.015l2.943-2.926z\"\n              fill=\"#FFD300\"\n            />\n          </g>\n          <path\n            d=\"M21.207 62.4H73.49\"\n            stroke=\"#904821\"\n            strokeWidth=\"2.674\"\n            strokeLinecap=\"square\"\n          />\n          <g transform=\"translate(10.268 50.49)\">\n            <rect\n              fill=\"#FFBC00\"\n              x=\"0\"\n              y=\"0\"\n              width=\"15.973\"\n              height=\"41.969\"\n              rx=\"2.674\"\n            />\n            <path\n              d=\"M15.973 2.786L0 18.666V2.674A2.674 2.674 0 0 1 2.674 0h10.625a2.674 2.674 0 0 1 2.674 2.674v.112zM15.973 28.218v11.077a2.674 2.674 0 0 1-2.674 2.674H2.674a2.69 2.69 0 0 1-.488-.045l13.787-13.706z\"\n              fill=\"#FFD300\"\n            />\n          </g>\n          <g transform=\"translate(73.02 50.49)\">\n            <rect\n              fill=\"#FFBC00\"\n              x=\"0\"\n              y=\"0\"\n              width=\"15.973\"\n              height=\"41.969\"\n              rx=\"2.674\"\n            />\n            <path\n              d=\"M15.973 19.761L0 35.641V2.674A2.674 2.674 0 0 1 2.674 0h10.625a2.674 2.674 0 0 1 2.674 2.674V19.76z\"\n              fill=\"#FFD300\"\n            />\n          </g>\n          <rect\n            fill=\"#FFBC00\"\n            x=\"38.792\"\n            y=\"47.088\"\n            width=\"21.678\"\n            height=\"26.089\"\n            rx=\"2.674\"\n          />\n          <g transform=\"translate(44.496 51.625)\" fill=\"#DB8500\">\n            <ellipse cx=\"5.134\" cy=\"5.293\" rx=\"5.134\" ry=\"5.293\" />\n            <path d=\"M7.717 8.424l1.726 4.89a1.925 1.925 0 0 1-1.815 2.566H2.544a1.925 1.925 0 0 1-1.815-2.565l1.726-4.89a2.79 2.79 0 0 1 5.262 0z\" />\n          </g>\n          <ellipse\n            fill=\"#F8A201\"\n            cx=\"18.825\"\n            cy=\"57.863\"\n            rx=\"2.852\"\n            ry=\"2.836\"\n          />\n          <ellipse\n            fill=\"#F8A201\"\n            cx=\"18.825\"\n            cy=\"83.952\"\n            rx=\"2.852\"\n            ry=\"2.836\"\n          />\n          <ellipse\n            fill=\"#F8A201\"\n            cx=\"81.577\"\n            cy=\"83.952\"\n            rx=\"2.852\"\n            ry=\"2.836\"\n          />\n          <ellipse\n            fill=\"#F8A201\"\n            cx=\"81.577\"\n            cy=\"57.863\"\n            rx=\"2.852\"\n            ry=\"2.836\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const MoreOptionsSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      width=\"46\"\n      height=\"46\"\n      viewBox=\"0 0 46 46\"\n      fill=\"none\"\n      className=\"h-[36px] w-[36px]\"\n      {...props}\n    >\n      <circle\n        cx=\"23\"\n        cy=\"23\"\n        r=\"19\"\n        fill=\"none\"\n        stroke=\"white\"\n        strokeWidth={2}\n      />\n      <circle cx=\"15\" cy=\"23\" r=\"2\" fill=\"white\" />\n      <circle cx=\"23\" cy=\"23\" r=\"2\" fill=\"white\" />\n      <circle cx=\"31\" cy=\"23\" r=\"2\" fill=\"white\" />\n    </svg>\n  );\n};\n\nexport const CloseSvg = () => {\n  return (\n    <svg height=\"24\" width=\"24\">\n      <path\n        fill=\"currentColor\"\n        d=\"m6.4 19.2-1.6-1.6 5.6-5.6-5.6-5.6 1.6-1.6 5.6 5.6 5.6-5.6 1.6 1.6-5.6 5.6 5.6 5.6-1.6 1.6-5.6-5.6Z\"\n      />\n    </svg>\n  );\n};\n\nexport const BigCloseSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg height=\"48\" viewBox=\"0 96 960 960\" width=\"48\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"m249 873-66-66 231-231-231-231 66-66 231 231 231-231 66 66-231 231 231 231-66 66-231-231-231 231Z\"\n      />\n    </svg>\n  );\n};\n\nexport const DoneSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg height=\"48\" viewBox=\"0 96 960 960\" width=\"48\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M378 834 130 586l68-68 180 180 383-383 68 68-451 451Z\"\n      />\n    </svg>\n  );\n};\n\nexport const AppleSvg = () => {\n  return (\n    <svg width=\"212px\" height=\"212px\" viewBox=\"0 0 212 212\" className=\"w-full\">\n      <title>apple</title>\n      <desc>Created with Sketch.</desc>\n      <g\n        id=\"apple\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g id=\"Group\" transform=\"translate(14.000000, 14.000000)\">\n          <path\n            d=\"M92,29.7321429 C95.0928396,29.7321429 97.6000815,32.2393847 97.6000815,35.3322243 C97.6000815,35.4793895 97.5942804,35.6264975 97.5826918,35.7732057 L94.9713949,68.8314433 C94.8489343,70.3817572 93.555143,71.577381 92,71.577381 C90.444857,71.577381 89.1510657,70.3817572 89.0286051,68.8314433 L86.4173082,35.7732057 C86.1737609,32.6899701 88.4757831,29.9930798 91.5590187,29.7495325 C91.7057268,29.7379439 91.8528348,29.7321429 92,29.7321429 Z\"\n            id=\"Rectangle-197\"\n            fill=\"#743D00\"\n            opacity=\"0.807142857\"\n          />\n          <path\n            d=\"M70.4556019,51.9405926 L70.5913656,51.9406255 C95.7944998,51.9689234 116.224153,72.3985749 116.252452,97.6017091 L116.258899,124.146291 C116.28719,149.358084 95.8539538,169.801248 70.6421557,169.807372 C70.6347648,169.807374 70.6273739,169.807374 70.6199884,169.785205 L70.4842247,169.785172 C45.2810905,169.756874 24.8514378,149.327222 24.8231383,124.124088 L24.816691,97.5795063 C24.7884002,72.3677136 45.2216366,51.9245489 70.4334347,51.9184253 C70.4408255,51.9184235 70.4482164,51.9184235 70.4556019,51.9405926 Z\"\n            id=\"Rectangle-196\"\n            fill=\"#FF4B4B\"\n            transform=\"translate(70.537795, 110.862899) rotate(-31.000000) translate(-70.537795, -110.862899)\"\n          />\n          <path\n            d=\"M113.425662,51.9405926 L113.561426,51.9406255 C138.76456,51.9689234 159.194212,72.3985749 159.222512,97.6017091 L159.228959,124.146291 C159.25725,149.358084 138.824014,169.801248 113.612216,169.807372 C113.604825,169.807374 113.597434,169.807374 113.590048,169.785205 L113.454285,169.785172 C88.2511504,169.756874 67.8214977,149.327222 67.7931982,124.124088 L67.7867509,97.5795063 C67.75846,72.3677136 88.1916965,51.9245489 113.403495,51.9184253 C113.410885,51.9184235 113.418276,51.9184235 113.425662,51.9405926 Z\"\n            id=\"Rectangle-196\"\n            fill=\"#FF4B4B\"\n            transform=\"translate(113.507855, 110.862899) scale(-1, 1) rotate(-31.000000) translate(-113.507855, -110.862899)\"\n          />\n          <ellipse\n            id=\"Oval\"\n            fill=\"#FF7878\"\n            cx=\"58.3952096\"\n            cy=\"92.5\"\n            rx=\"16.5269461\"\n            ry=\"16.5178571\"\n          />\n          <path\n            d=\"M123.034317,60.3070264 C125.907803,60.306238 137.767642,44.9188732 137.596227,31.3705908 C137.424812,17.8223085 125.578094,1.99694752 123.050316,1.99764111 C120.522537,1.99833469 108.505205,17.5953626 108.488265,31.3785776 C108.471362,45.1617926 120.160831,60.3078149 123.034317,60.3070264 Z\"\n            id=\"Oval-2\"\n            fill=\"#5ABB1A\"\n            transform=\"translate(123.043166, 31.152334) scale(-1, -1) rotate(-313.000000) translate(-123.043166, -31.152334)\"\n          />\n          <ellipse\n            id=\"Oval-3\"\n            fill=\"#EA2B2B\"\n            cx=\"133.868263\"\n            cy=\"118.377976\"\n            rx=\"9.36526946\"\n            ry=\"9.36011905\"\n          />\n          <ellipse\n            id=\"Oval-3-Copy\"\n            fill=\"#EA2B2B\"\n            cx=\"120.095808\"\n            cy=\"136.547619\"\n            rx=\"6.61077844\"\n            ry=\"6.60714286\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const LeaderboardBannerSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg width=\"267\" height=\"169\" viewBox=\"0 0 267 169\" {...props}>\n      <title>Locked Tab NEW</title>\n      <g fill=\"none\" fillRule=\"nonzero\">\n        <path\n          d=\"M7.315 72.39L51.1 47.11c6.801-3.927 15.498-1.596 19.425 5.205l19.22 33.29c10.035 17.381 4.08 39.606-13.301 49.641l-5.474 3.16c-17.38 10.035-39.606 4.08-49.641-13.301L2.11 91.815C-1.817 85.014.514 76.317 7.315 72.39z\"\n          fill=\"#CF9C6D\"\n        />\n        <path\n          d=\"M40.982 52.952l10.107-5.835c6.801-3.927 15.513-1.57 19.459 5.264l6.886 11.927-20.772 78.763c-13.55 1.423-27.327-4.898-34.904-17.225l19.224-72.894z\"\n          fill=\"#D3A67B\"\n        />\n        <path\n          d=\"M17.851 119.08c8.322 8.055 15.466 12.5 21.433 13.334 5.967.836 16.329-1.16 31.087-5.984 8.374-8.526 13.465-15.453 15.273-20.782 1.808-5.328 2.016-14.017.623-26.068l3.479 6.025c10.035 17.381 4.08 39.606-13.301 49.641l-5.474 3.16c-17.38 10.035-39.606 4.08-49.641-13.301l-3.479-6.025z\"\n          fill=\"#C88E57\"\n        />\n        <path\n          d=\"M22.483 123.294c6.372 5.404 11.972 8.445 16.8 9.12 4.503.63 11.51-.35 21.018-2.944l-3.588 13.603c-13.582 1.463-27.379-4.842-34.915-17.18l.685-2.6z\"\n          fill=\"#CD9968\"\n        />\n        <path\n          d=\"M11.182 79.917a5.374 5.374 0 0 0-1.96 7.343l16.905 29.28c7.426 12.862 23.855 17.28 36.695 9.868l7.306-4.219c12.84-7.413 17.228-23.85 9.802-36.713l-16.905-29.28a5.374 5.374 0 0 0-7.339-1.973L11.182 79.917zm-4.226-7.32L51.46 46.903c6.603-3.812 15.052-1.54 18.872 5.075l16.904 29.28c9.76 16.906 3.993 38.508-12.881 48.251l-7.307 4.219c-16.875 9.742-38.467 3.936-48.228-12.97L1.916 91.478c-3.82-6.615-1.563-15.069 5.04-18.88z\"\n          fill=\"#E5AE7C\"\n        />\n        <path\n          d=\"M24.849 114.325l1.278 2.214c7.048 12.208 22.205 16.81 34.707 10.91l-2.61 9.893c-13.24 3.418-27.53-1.18-36.275-12.02l2.9-10.997zM74.42 75.933L63.025 56.197a5.374 5.374 0 0 0-7.339-1.974L38.008 64.429l3.036-11.512 10.416-6.014c6.603-3.812 15.052-1.54 18.872 5.075l7.143 12.373-3.055 11.582z\"\n          fill=\"#E7B689\"\n        />\n        <g>\n          <path\n            d=\"M215.815 47.11L259.6 72.39c6.801 3.927 9.132 12.624 5.205 19.425l-19.22 33.29c-10.035 17.381-32.26 23.336-49.641 13.301l-5.474-3.16c-17.38-10.035-23.336-32.26-13.301-49.641l19.22-33.29c3.927-6.801 12.624-9.132 19.425-5.205z\"\n            fill=\"#C2D1DD\"\n          />\n          <path\n            d=\"M249.482 66.548l10.107 5.835c6.801 3.927 9.116 12.65 5.17 19.484l-6.885 11.927-78.597 21.392c-8.008-11.024-9.422-26.114-2.535-38.84l72.74-19.798z\"\n            fill=\"#D1DCE5\"\n          />\n          <path\n            d=\"M180.649 79.58c-2.815 11.234-3.093 19.643-.832 25.228 2.26 5.585 9.169 13.562 20.726 23.93 11.57 2.99 20.115 3.935 25.634 2.836 5.518-1.098 13.147-5.263 22.888-12.494l-3.479 6.025c-10.035 17.381-32.26 23.336-49.641 13.301l-5.474-3.16c-17.38-10.035-23.336-32.26-13.301-49.641l3.479-6.025z\"\n            fill=\"#AAC1D4\"\n          />\n          <path\n            d=\"M179.315 85.698c-1.495 8.22-1.328 14.59.502 19.11 1.705 4.215 6.058 9.791 13.058 16.73l-13.574 3.694c-8.058-11.031-9.496-26.132-2.58-38.828l2.594-.706z\"\n            fill=\"#BFD0DE\"\n          />\n          <path\n            d=\"M211.23 54.223a5.374 5.374 0 0 0-7.339 1.974l-16.905 29.28c-7.426 12.862-3.038 29.3 9.802 36.712l7.306 4.219c12.84 7.413 29.269 2.994 36.695-9.869l16.905-29.28a5.374 5.374 0 0 0-1.96-7.342L211.23 54.223zm4.226-7.32l44.504 25.694c6.603 3.812 8.86 12.266 5.04 18.881l-16.904 29.28c-9.76 16.906-31.353 22.712-48.228 12.97l-7.307-4.219c-16.874-9.743-22.642-31.345-12.881-48.251l16.904-29.28c3.82-6.615 12.269-8.887 18.872-5.075z\"\n            fill=\"#D6E4EF\"\n          />\n          <path\n            d=\"M188.265 83.262l-1.279 2.214c-7.048 12.208-3.454 27.636 7.906 35.512l-9.872 2.687c-9.581-9.758-12.745-24.433-7.729-37.426l10.974-2.987zm58.034 23.734l11.395-19.736a5.374 5.374 0 0 0-1.96-7.343L238.055 69.71l11.489-3.127 10.416 6.014c6.603 3.812 8.86 12.266 5.04 18.881l-7.143 12.373-11.558 3.145z\"\n            fill=\"#E0EAF3\"\n          />\n        </g>\n        <rect\n          fill=\"#FFF1BF\"\n          transform=\"rotate(45 85.728 11.728)\"\n          x=\"76.728\"\n          y=\"2.728\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"5\"\n        />\n        <rect\n          fill=\"#FEE68C\"\n          transform=\"rotate(45 71 29.757)\"\n          x=\"65\"\n          y=\"23.757\"\n          width=\"12\"\n          height=\"12\"\n          rx=\"2\"\n        />\n        <rect\n          fill=\"#FFF1BF\"\n          transform=\"rotate(45 184.728 157.728)\"\n          x=\"175.728\"\n          y=\"148.728\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"5\"\n        />\n        <g>\n          <path\n            d=\"M100.54 35h65.92C176.7 35 185 43.3 185 53.54v49.08c0 26.167-21.213 47.38-47.38 47.38h-8.24C103.213 150 82 128.787 82 102.62V53.54C82 43.3 90.3 35 100.54 35z\"\n            fill=\"#FEC701\"\n          />\n          <path\n            d=\"M151.226 35h15.216c10.239 0 18.54 8.266 18.54 18.462v17.796l-74.8 74.717C93.954 138.812 82.52 122.839 82 104.15L151.226 35z\"\n            fill=\"#FED540\"\n          />\n          <path\n            d=\"M130.798 67.728l6.688-6.688c5.81-5.81 15.426-5.612 21.479.441 6.053 6.053 6.25 15.67.441 21.479l-16.404 16.405c-.34.34-.805.524-1.285.51l-8.68-.25a.576.576 0 0 0-.425.166.6.6 0 0 0 .018.848l3.932 3.932c.34.34.34.893 0 1.234l-3.224 3.223c-1.466 1.466-3.594 2.081-5.682 1.643l-14.775-3.106-3.106-14.775c-.438-2.089.177-4.216 1.643-5.682l12.956-12.956a.872.872 0 0 1 1.234 0l3.915 3.915a.6.6 0 0 0 .847.017.576.576 0 0 0 .167-.425l-.25-8.647c-.013-.48.171-.945.51-1.284z\"\n            fill=\"#F89701\"\n          />\n          <path\n            d=\"M145.125 75.622l-36.94 36.94\"\n            stroke=\"#ED8200\"\n            strokeWidth=\"4.292\"\n            strokeLinecap=\"round\"\n          />\n          <path\n            d=\"M82 94.054c4.145 14.39 9.314 23.98 15.507 28.769 6.193 4.79 19.194 9.252 39.003 13.387 15.013-4.13 25.277-8.593 30.792-13.387 5.515-4.795 11.414-14.384 17.698-28.769v8.566c0 26.167-21.213 47.38-47.38 47.38h-8.24C103.213 150 82 128.787 82 102.62v-8.566z\"\n            fill=\"#FFC100\"\n          />\n          <path\n            d=\"M84.483 101.762c3.67 10.164 8.012 17.185 13.024 21.06 4.673 3.615 13.223 7.043 25.65 10.285l-12.893 12.879c-16.187-7.146-27.62-23.09-28.238-41.77l2.457-2.454z\"\n            fill=\"#FFD040\"\n          />\n          <path\n            d=\"M100 45.922c-3.866 0-7 3.111-7 6.95v43.686c0 19.192 15.67 34.75 35 34.75h11c19.33 0 35-15.558 35-34.75V52.872c0-3.839-3.134-6.95-7-6.95h-67zM100 35h67c9.941 0 18 8.001 18 17.872v43.686c0 25.224-20.595 45.672-46 45.672h-11c-25.405 0-46-20.448-46-45.672V52.872C82 43.002 90.059 35 100 35z\"\n            fill=\"#FEE333\"\n          />\n          <path\n            d=\"M93 93.255v3.303c0 18.215 14.115 33.156 32.077 34.63l-9.395 9.386c-17.18-4.73-30.318-19.107-33.125-36.888L93 93.255zm81-10.935V52.872c0-3.839-3.134-6.95-7-6.95h-26.615L151.32 35H167c9.941 0 18 8.001 18 17.872v18.46L174 82.32z\"\n            fill=\"#FEEA66\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const LockedLeaderboardSvg = () => {\n  return (\n    <div\n      className=\"relative grid w-full items-center gap-5\"\n      style={{ gridTemplateColumns: \"min-content 1fr min-content\" }}\n    >\n      <svg width=\"16\" height=\"448\" viewBox=\"0 0 16 448\" fill=\"none\">\n        <rect width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"72\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"144\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"216\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"288\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"360\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n        <rect y=\"432\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#E5E5E5\" />\n      </svg>\n\n      <svg\n        width=\"208\"\n        height=\"480\"\n        viewBox=\"0 0 208 480\"\n        fill=\"none\"\n        className=\"grow\"\n      >\n        <circle cx=\"24\" cy=\"312\" r=\"24\" fill=\"#ECECEC\" />\n        <g opacity=\"0.5\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M29.9714 291.533C29.9714 294.663 27.4196 297.2 24.2718 297.2C21.124 297.2 18.5723 294.663 18.5723 291.533C18.5723 290.383 18.917 289.313 19.5093 288.419C20.9639 288.144 22.4649 288 23.9996 288C25.7556 288 27.4676 288.189 29.1163 288.547C29.6584 289.414 29.9714 290.437 29.9714 291.533Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M40.2227 329.685C35.9508 333.606 30.2543 336 23.9987 336C17.9989 336 12.5133 333.798 8.30566 330.158C11.46 326.353 16.223 323.929 21.5522 323.929H27.3828C32.4877 323.929 37.0731 326.153 40.2227 329.685Z\"\n            fill=\"#A7A7A7\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M17.4372 298.576H31.0192C37.5203 298.576 42.7904 303.846 42.7904 310.347C42.7904 316.848 37.5203 322.118 31.0192 322.118H17.4372C10.9361 322.118 5.66602 316.848 5.66602 310.347C5.66602 303.846 10.9361 298.576 17.4372 298.576Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M31.0189 322.117H17.4368C11.4397 322.117 6.49008 317.633 5.75879 311.834H42.6969C41.9656 317.633 37.016 322.117 31.0189 322.117Z\"\n            fill=\"white\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24.3695 303.097C32.4198 303.097 38.9459 309.623 38.9459 317.673V328.581H9.79297V317.673C9.79297 309.623 16.3191 303.097 24.3695 303.097Z\"\n            fill=\"#D7D7D7\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M14.2812 302.048H35.5727V305.52H14.2812V302.048Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M10.4413 302.834H13.3377C15.0344 302.834 16.4098 304.209 16.4098 305.906V308.803C16.4098 310.499 15.0344 311.875 13.3377 311.875H10.4413C8.74458 311.875 7.36914 310.499 7.36914 308.803V305.906C7.36914 304.209 8.74458 302.834 10.4413 302.834Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M35.4012 302.507H37.9046C39.6013 302.507 40.9767 303.882 40.9767 305.579V308.803C40.9767 310.5 39.6013 311.875 37.9046 311.875H35.4012C33.7045 311.875 32.3291 310.5 32.3291 308.803V305.579C32.3291 303.882 33.7045 302.507 35.4012 302.507Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <circle cx=\"24\" cy=\"240\" r=\"24\" fill=\"#ECECEC\" />\n        <g opacity=\"0.5\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M46.2142 249.102C43.8318 248.419 40.7872 246.323 39.5756 241.918C39.2232 240.636 39.13 237.453 39.2962 232.368C39.2983 232.302 39.2994 232.237 39.2994 232.171C39.2994 228.847 36.6042 226.151 33.2795 226.151H14.681L14.6217 226.152C11.2971 226.184 8.62865 228.906 8.66143 232.231C8.7014 236.285 8.75315 238.847 8.81667 239.917C9.39786 249.707 12.5321 254.602 15.2095 254.602C15.6131 254.602 16.1596 254.575 16.8239 254.524L13.9968 254.972L14.0473 255.291C14.5828 258.672 17.7582 260.979 21.1397 260.444L40.5646 257.367C42.9854 255.057 44.9241 252.247 46.2142 249.102Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M36.996 260.181C33.2507 262.598 28.7893 264.001 24.0004 264.001C19.0787 264.001 14.503 262.519 10.6949 259.978V242.814C10.3336 242.975 9.93319 243.065 9.51181 243.065C7.90884 243.065 6.60938 241.766 6.60938 240.163C6.60938 238.56 7.90884 237.26 9.51181 237.26C9.93319 237.26 10.3336 237.35 10.6949 237.511V235.97C10.6949 232.843 13.2297 230.309 16.3565 230.309H31.3345C34.4613 230.309 36.996 232.843 36.996 235.97V237.618C37.4105 237.39 37.8868 237.26 38.3933 237.26C39.9963 237.26 41.2958 238.56 41.2958 240.163C41.2958 241.766 39.9963 243.065 38.3933 243.065C37.8868 243.065 37.4105 242.935 36.996 242.707V260.181Z\"\n            fill=\"white\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24.0947 219.2C27.6568 219.2 30.5445 222.088 30.5445 225.65C30.5445 229.212 27.6568 232.1 24.0947 232.1C21.5266 232.1 19.3091 230.599 18.2714 228.427C17.8126 228.15 17.3877 227.803 17.0141 227.387C15.4199 225.612 15.1559 223.036 16.3152 221.023C16.5565 220.604 17.0048 220.543 17.3282 220.903L18.5932 222.282C19.7274 220.433 21.7671 219.2 24.0947 219.2Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <circle cx=\"24\" cy=\"384\" r=\"24\" fill=\"#ECECEC\" />\n        <g opacity=\"0.4\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24.0948 367.467C27.6569 367.467 30.5446 370.354 30.5446 373.917C30.5446 377.479 27.6569 380.367 24.0948 380.367C21.5268 380.367 19.3093 378.866 18.2716 376.693C17.8127 376.417 17.3877 376.069 17.0141 375.653C15.4199 373.879 15.1559 371.303 16.3152 369.289C16.5565 368.87 17.0048 368.81 17.3282 369.17L18.5933 370.548C19.7275 368.7 21.7671 367.467 24.0948 367.467Z\"\n            fill=\"white\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M36.996 404.181C33.2507 406.598 28.7893 408.001 24.0004 408.001C19.0787 408.001 14.503 406.519 10.6949 403.978V386.814C10.3336 386.975 9.93319 387.065 9.51181 387.065C7.90884 387.065 6.60938 385.766 6.60938 384.163C6.60938 382.56 7.90884 381.26 9.51181 381.26C9.93319 381.26 10.3336 381.35 10.6949 381.511V379.97C10.6949 376.843 13.2297 374.309 16.3565 374.309H31.3345C34.4613 374.309 36.996 376.843 36.996 379.97V381.618C37.4105 381.39 37.8868 381.26 38.3933 381.26C39.9963 381.26 41.2958 382.56 41.2958 384.163C41.2958 385.766 39.9963 387.065 38.3933 387.065C37.8868 387.065 37.4105 386.935 36.996 386.707V404.181Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24 192C37.2548 192 48 181.255 48 168C48 154.745 37.2548 144 24 144C10.7452 144 0 154.745 0 168C0 181.255 10.7452 192 24 192Z\"\n          fill=\"#ECECEC\"\n        />\n        <g opacity=\"0.5\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M31.6205 160.014C31.6205 165.32 27.2657 169.627 21.9001 169.627H16.5553C11.1897 169.627 6.83496 165.32 6.83496 160.014C6.83496 154.707 11.1828 150.4 16.5484 150.4H21.8932C27.2657 150.4 31.6205 154.707 31.6205 160.014Z\"\n            fill=\"white\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M36.6187 188.42C32.9528 190.69 28.6301 192 24.0014 192C19.6181 192 15.5092 190.825 11.9727 188.773C14.916 185.187 19.4092 182.896 24.4448 182.896C29.3132 182.896 33.6746 185.037 36.6187 188.42Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M19.1366 191.507V183.778C17.1219 184.477 15.2941 185.559 13.7433 186.935C13.1124 187.494 12.5058 188.102 11.9375 188.753C14.1387 190.035 16.5624 190.977 19.1366 191.507ZM36.6404 188.405C34.5204 189.721 32.1802 190.716 29.6877 191.322V183.751C31.7301 184.456 33.5786 185.545 35.1433 186.935C35.6615 187.393 36.1631 187.885 36.6404 188.405Z\"\n            fill=\"#CECECE\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M17.7385 159.611H31.1351C35.5932 159.611 39.36 162.549 40.5638 166.576C40.894 166.446 41.2542 166.375 41.6312 166.375C43.2257 166.375 44.5183 167.653 44.5183 169.23C44.5183 170.807 43.2257 172.085 41.6312 172.085C41.3228 172.085 41.0256 172.037 40.7469 171.949C39.7943 176.337 35.8507 179.625 31.1282 179.625H17.7385C12.9891 179.619 9.02753 176.293 8.1038 171.871C7.70412 172.034 7.2612 172.111 6.8007 172.078C5.21023 171.967 4.01252 170.601 4.12555 169.028C4.23858 167.455 5.61955 166.27 7.21002 166.382C7.59255 166.409 7.95236 166.509 8.27668 166.666C9.45126 162.592 13.2418 159.611 17.7385 159.611Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M19.1572 177.645H29.6876V183.807H19.1572V177.645Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M21.1245 160.677V161.328C21.1245 165.265 17.8982 168.462 13.9104 168.462C9.92256 168.462 6.69629 165.265 6.69629 161.328V160.677C6.69629 156.74 9.92256 153.543 13.9104 153.543C17.8982 153.543 21.1245 156.734 21.1245 160.677Z\"\n            fill=\"white\"\n          />\n        </g>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24 120C37.2548 120 48 109.255 48 96C48 82.7452 37.2548 72 24 72C10.7452 72 0 82.7452 0 96C0 109.255 10.7452 120 24 120Z\"\n          fill=\"#ECECEC\"\n        />\n        <g opacity=\"0.5\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M43.412 110.117C39.0482 116.107 31.9791 120 24.0008 120C15.982 120 8.88178 116.068 4.52346 110.026C4.52345 110.019 4.52344 110.012 4.52344 110.005V83.9833C4.52344 83.1811 4.6072 82.3985 4.76645 81.6437C8.03007 77.2783 12.7449 74.061 18.1959 72.707H22.5943C28.0678 72.707 32.6305 76.6068 33.6553 81.7794H35.0271C39.658 81.7794 43.412 85.5335 43.412 90.1643V110.117Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M31.0481 118.949C28.8197 119.632 26.4532 120 24.0008 120C22.0742 120 20.2006 119.773 18.4053 119.344L19.7031 115.35V103.32C19.7031 101.262 20.3504 99.5928 21.1488 99.5928H28.4494C29.2479 99.5928 29.8951 101.262 29.8951 103.32V115.4L31.0481 118.949Z\"\n            fill=\"#D5D5D5\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M18.2574 84.7432H31.1238C34.4373 84.7432 37.1234 87.4293 37.1234 90.7427V104.26C37.1234 107.573 34.4373 110.259 31.1238 110.259H18.2574C14.9439 110.259 12.2578 107.573 12.2578 104.26V90.7427C12.2578 87.4293 14.9439 84.7432 18.2574 84.7432Z\"\n            fill=\"#D5D5D5\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M15.6553 81.0566C17.9308 81.0566 19.7755 82.9013 19.7755 85.1768V88.7187C19.7755 90.9942 17.9308 92.8389 15.6553 92.8389C13.3798 92.8389 11.5352 90.9942 11.5352 88.7187V85.1768C11.5352 82.9013 13.3798 81.0566 15.6553 81.0566Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24 48C37.2548 48 48 37.2548 48 24C48 10.7452 37.2548 0 24 0C10.7452 0 0 10.7452 0 24C0 37.2548 10.7452 48 24 48Z\"\n          fill=\"#ECECEC\"\n        />\n        <g opacity=\"0.4\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M23.5421 0.00390625C25.2155 0.953972 26.5513 2.40045 27.3709 4.12296C28.6614 6.59224 29.7022 7.86834 30.4931 7.95147C31.1318 8.01859 31.8378 7.96117 32.6112 7.77919C32.8002 7.73472 32.9893 7.70931 33.1766 7.70175C33.6219 7.61856 34.0866 7.59759 34.5601 7.64736C37.1929 7.92408 39.1029 10.2827 38.8261 12.9154C38.5494 15.5482 36.1908 17.4582 33.5581 17.1814C31.045 16.9173 29.1905 14.7562 29.2677 12.2705L27.3993 12.0742C25.762 15.5857 22.029 17.84 17.9597 17.4123C12.8317 16.8733 9.11156 12.2794 9.65053 7.15136C9.76229 6.0881 10.0484 5.08536 10.4774 4.16856C14.2107 1.61809 18.7011 0.0943357 23.5421 0.00390625Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M40.1983 41.7079C35.9292 45.6152 30.2427 47.9991 23.9993 47.9991C17.7857 47.9991 12.1236 45.6378 7.86146 41.7636V23.9077C7.86146 23.5713 7.87173 23.2374 7.89198 22.9061C6.45096 22.9047 5.2832 21.7361 5.2832 20.2948C5.2832 18.8526 6.45231 17.6835 7.89448 17.6835H9.10293C11.5409 11.8436 17.3061 7.73926 24.0299 7.73926C30.7537 7.73926 36.5189 11.8436 38.9569 17.6835H40.3029C41.7451 17.6835 42.9142 18.8526 42.9142 20.2948C42.9142 21.737 41.7451 22.9061 40.3029 22.9061H40.1678C40.1881 23.2374 40.1983 23.5713 40.1983 23.9077V41.7079Z\"\n            fill=\"#C2C2C2\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M40.1982 41.7082C35.9291 45.6154 30.2426 47.9993 23.9993 47.9993C17.7857 47.9993 12.1235 45.638 7.86133 41.7637V38.3457H19.3292L23.8213 43.3154C24.1393 43.6671 24.6821 43.6945 25.0339 43.3766C25.0553 43.3572 25.0757 43.3368 25.0951 43.3154L29.5872 38.3457H40.1982V41.7082Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24 480C37.2548 480 48 469.255 48 456C48 442.745 37.2548 432 24 432C10.7452 432 0 442.745 0 456C0 469.255 10.7452 480 24 480Z\"\n          fill=\"#ECECEC\"\n        />\n        <g opacity=\"0.4\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M23.5421 432.004C25.2155 432.954 26.5513 434.4 27.3709 436.123C28.6614 438.592 29.7022 439.868 30.4931 439.951C31.1318 440.019 31.8378 439.961 32.6112 439.779C32.8002 439.735 32.9893 439.709 33.1766 439.702C33.6219 439.619 34.0866 439.598 34.5601 439.647C37.1929 439.924 39.1029 442.283 38.8261 444.915C38.5494 447.548 36.1908 449.458 33.5581 449.181C31.045 448.917 29.1905 446.756 29.2677 444.27L27.3993 444.074C25.762 447.586 22.029 449.84 17.9597 449.412C12.8317 448.873 9.11156 444.279 9.65053 439.151C9.76229 438.088 10.0484 437.085 10.4774 436.169C14.2107 433.618 18.7011 432.094 23.5421 432.004Z\"\n            fill=\"#AFAFAF\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M40.1983 473.708C35.9292 477.615 30.2427 479.999 23.9993 479.999C17.7857 479.999 12.1236 477.638 7.86146 473.764V455.908C7.86146 455.571 7.87173 455.237 7.89198 454.906C6.45096 454.905 5.2832 453.736 5.2832 452.295C5.2832 450.853 6.45231 449.684 7.89448 449.684H9.10293C11.5409 443.844 17.3061 439.739 24.0299 439.739C30.7537 439.739 36.5189 443.844 38.9569 449.684H40.3029C41.7451 449.684 42.9142 450.853 42.9142 452.295C42.9142 453.737 41.7451 454.906 40.3029 454.906H40.1678C40.1881 455.237 40.1983 455.571 40.1983 455.908V473.708Z\"\n            fill=\"#C2C2C2\"\n          />\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M40.1982 473.708C35.9291 477.615 30.2426 479.999 23.9993 479.999C17.7857 479.999 12.1235 477.638 7.86133 473.764V470.346H19.3292L23.8213 475.315C24.1393 475.667 24.6821 475.695 25.0339 475.377C25.0553 475.357 25.0757 475.337 25.0951 475.315L29.5872 470.346H40.1982V473.708Z\"\n            fill=\"#AFAFAF\"\n          />\n        </g>\n        <rect x=\"76\" y=\"18\" width=\"52\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"90\" width=\"82\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"162\" width=\"42\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"234\" width=\"112\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"306\" width=\"62\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"378\" width=\"132\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect x=\"76\" y=\"450\" width=\"52\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n      </svg>\n\n      <svg width=\"48\" height=\"444\" viewBox=\"0 0 48 444\" fill=\"none\">\n        <rect width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"72\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"144\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"216\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"288\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"360\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n        <rect y=\"432\" width=\"48\" height=\"12\" rx=\"6\" fill=\"#E5E5E5\" />\n      </svg>\n\n      <div\n        className=\"absolute bottom-0 left-0 right-0 h-3/4\"\n        style={{ background: \"linear-gradient(0deg, white, #ffffff00\" }}\n      ></div>\n    </div>\n  );\n};\n\nexport const LeaderboardExplanationSvg = () => {\n  return (\n    <svg\n      width=\"107\"\n      height=\"158\"\n      viewBox=\"0 0 107 158\"\n      fill=\"none\"\n      className=\"absolute right-0\"\n    >\n      <path\n        d=\"M28.4774 76.1387L39.0343 77.7164C40.2236 77.8941 41.2935 78.537 42.0087 79.5036L48.3579 88.084C49.0731 89.0506 49.3751 90.2617 49.1974 91.4509L47.6196 102.008C47.4419 103.197 46.799 104.267 45.8325 104.982L37.252 111.331C36.2854 112.047 35.0743 112.349 33.8851 112.171L23.3282 110.593C22.139 110.415 21.0691 109.773 20.3539 108.806L14.0046 100.225C13.2894 99.2589 12.9874 98.0478 13.1652 96.8586L14.7429 86.3017C14.9206 85.1125 15.5635 84.0426 16.5301 83.3273L25.1106 76.9781C26.0771 76.2629 27.2882 75.9609 28.4774 76.1387Z\"\n        fill=\"#676767\"\n      />\n      <path\n        d=\"M35.5968 104.884L82.544 74.3263C85.0604 72.6884 88.4302 73.9744 89.199 76.8659C92.8933 90.7588 87.1614 105.744 74.758 113.817C62.355 121.89 46.3649 121.044 35.2048 112.01C32.8819 110.13 33.0804 106.522 35.5968 104.884Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        d=\"M65.0387 90.1495C62.2153 83.8079 54.7855 80.9559 48.4439 83.7794C42.1023 86.6028 39.2503 94.0326 42.0738 100.374C44.8972 106.716 52.327 109.568 58.6686 106.744C65.0102 103.921 67.8622 96.4911 65.0387 90.1495Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        d=\"M26.3758 80.8707L37.4213 82.5215C38.6731 82.7086 39.7993 83.3853 40.5522 84.4027L47.1953 93.3804C47.9482 94.3978 48.266 95.6727 48.0789 96.9245L46.4282 107.97C46.2411 109.222 45.5644 110.348 44.547 111.101L35.5693 117.744C34.5519 118.497 33.277 118.815 32.0252 118.628L20.9797 116.977C19.7279 116.79 18.6017 116.113 17.8488 115.096L11.2057 106.118C10.4528 105.101 10.135 103.826 10.322 102.574L11.9728 91.5284C12.1599 90.2766 12.8366 89.1503 13.854 88.3975L22.8317 81.7544C23.8491 81.0015 25.124 80.6836 26.3758 80.8707Z\"\n        fill=\"#7B7B7B\"\n      />\n      <path\n        d=\"M28.3146 88.6502L33.2912 89.394C34.543 89.5811 35.6692 90.2578 36.4221 91.2752L39.4152 95.3201C40.168 96.3376 40.4859 97.6124 40.2988 98.8642L39.555 103.841C39.368 105.093 38.6913 106.219 37.6738 106.972L33.6289 109.965C32.6115 110.718 31.3366 111.035 30.0848 110.848L25.1083 110.105C23.8565 109.918 22.7302 109.241 21.9774 108.223L18.9843 104.178C18.2314 103.161 17.9136 101.886 18.1007 100.634L18.8444 95.6578C19.0315 94.406 19.7082 93.2798 20.7257 92.5269L24.7705 89.5339C25.788 88.781 27.0628 88.4632 28.3146 88.6502Z\"\n        fill=\"#676767\"\n      />\n      <path\n        opacity=\"0.742327\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M51.6719 105.685C51.5418 105.048 51.9532 104.425 52.5908 104.295C54.2932 103.948 55.6453 103.259 56.6973 102.257C57.7525 101.253 58.563 99.8788 59.0923 98.0758C59.2757 97.4513 59.9305 97.0938 60.5549 97.2771C61.1794 97.4604 61.5369 98.1153 61.3536 98.7397C60.731 100.86 59.7327 102.622 58.3224 103.964C56.9088 105.31 55.1387 106.181 53.062 106.604C52.4244 106.734 51.802 106.323 51.6719 105.685Z\"\n        fill=\"#3EB200\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M77.0711 60.8664L78.1952 59.9883C78.8161 59.5032 79.7128 59.6132 80.1975 60.2343C80.6828 60.855 80.5726 61.7517 79.9518 62.2366L78.8277 63.1148C78.2069 63.5999 77.3103 63.4898 76.8252 62.8689C76.3402 62.2481 76.4503 61.3515 77.0711 60.8664Z\"\n        fill=\"#FFEB16\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M91.4711 66.3025L93.4179 43.6452C93.7085 40.2588 96.69 37.7489 100.076 38.0402C100.083 38.0405 100.089 38.0412 100.096 38.0415L128.299 40.5536C131.677 40.8546 134.175 43.8317 133.885 47.2111L131.939 69.8679C131.648 73.2549 128.666 75.7647 125.28 75.4732C125.273 75.4731 125.267 75.4721 125.261 75.4715L97.0578 72.9595C93.6791 72.6588 91.181 69.6816 91.4711 66.3025Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M43.8038 47.2176C53.9317 44.4982 60.4074 42.0357 63.2308 39.8299C66.0358 37.6385 69.9254 32.0376 74.9005 23.0264C78.2567 16.9474 85.9057 14.7399 91.9848 18.0961C93.4685 18.9156 94.7715 20.0266 95.8155 21.3622L119.704 51.9375C132.351 68.1227 129.482 91.4947 113.296 104.14L113.294 104.142C97.1077 116.787 73.7346 113.918 61.0881 97.7316L37.1566 67.1019C32.8813 61.63 33.8513 53.7283 39.3232 49.4531C40.6518 48.4151 42.1755 47.6549 43.8038 47.2176Z\"\n        fill=\"#58CC02\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M62.4717 50.6598C67.9645 51.6211 73.3637 47.3799 73.7026 41.8626C79.6526 49.4778 86.7194 58.5229 86.6746 58.4656C86.6449 58.4273 82.8978 61.3547 75.4327 67.2483C72.2643 63.2522 67.944 57.7227 62.4717 50.6598Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M50.9672 54.0533L51.7253 53.4611C57.8004 48.7159 66.5721 49.793 71.3187 55.8669L76.8327 62.9241C81.5796 68.9983 80.5028 77.7704 74.4281 82.5167L74.4271 82.5165L73.6691 83.1087C67.594 87.8539 58.8223 86.7769 54.0757 80.7029L48.5616 73.6457C43.8148 67.5716 44.8916 58.7995 50.9662 54.0532L50.9672 54.0533Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M79.061 31.7341L79.8182 31.1424C85.8935 26.3972 94.6649 27.4744 99.4116 33.5483L104.926 40.6053C109.673 46.6794 108.596 55.4515 102.521 60.1977L102.52 60.1979L101.817 60.7468C95.7768 65.4659 87.0605 64.4307 82.2934 58.4275L76.7233 51.4141C71.9292 45.3771 72.937 36.5967 78.9739 31.8027C79.0032 31.7795 79.032 31.7567 79.061 31.7341Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M54.2441 58.1777C58.6875 54.7062 65.1037 55.4941 68.5754 59.9373L72.3994 64.8316C75.8708 69.2745 75.0832 75.6904 70.6402 79.1618C70.6404 79.1616 70.6401 79.1619 70.6402 79.1618C66.1968 82.6332 59.7801 81.8457 56.3085 77.4024L52.4845 72.5082C49.0131 68.0653 49.8011 61.6491 54.2441 58.1777C54.2442 58.1775 54.2439 58.1778 54.2441 58.1777Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M82.7489 35.9094C87.1923 32.4381 93.6085 33.2259 97.0803 37.669L100.904 42.5635C104.376 47.0063 103.588 53.4224 99.1452 56.8935C94.7018 60.3648 88.2851 59.5774 84.8132 55.1344L80.989 50.2403C77.5179 45.7971 78.3058 39.381 82.7489 35.9094Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M94.1297 33.8287L79.0585 49.1163L78.6235 48.559C75.0043 43.927 75.8252 37.2384 80.4572 33.6192L82.0824 32.3496C85.8179 29.4313 91.2114 30.0936 94.1297 33.8287Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M86.3156 50.899C86.8153 50.631 87.2435 50.2173 87.5295 49.6794C88.2991 48.2319 87.7478 46.433 86.2972 45.662C85.8949 45.4481 85.4657 45.3357 85.0391 45.3159C85.3458 44.5681 85.8453 43.8874 86.5278 43.3541C88.6224 41.7177 91.6477 42.0887 93.284 44.1835L96.5463 48.3585C98.1831 50.453 97.8119 53.4776 95.7168 55.1145C93.6223 56.7509 90.5976 56.3796 88.9607 54.285L86.3156 50.899Z\"\n        fill=\"#4B4B4B\"\n      />\n      <path\n        d=\"M60.3309 71.18C61.0769 70.9655 61.7379 70.4609 62.1307 69.7222C62.9004 68.2746 62.3485 66.4761 60.8982 65.7049C60.3464 65.4115 59.7441 65.3091 59.1672 65.3746C59.4778 64.7189 59.942 64.1237 60.5527 63.6466C62.6474 62.01 65.6723 62.3813 67.3089 64.476L70.571 68.6511C72.2076 70.7456 71.8363 73.7704 69.7417 75.4069C67.647 77.0435 64.6222 76.6722 62.9855 74.5775L60.3309 71.18Z\"\n        fill=\"#4B4B4B\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M102.73 55.7126L95.2132 61.1744C92.8597 62.8843 89.566 62.3624 87.8561 60.0089L85.6196 56.9312L102.307 41.1894L104.543 44.267C107.203 47.9284 106.391 53.0527 102.73 55.7126Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M32.1516 61.641L90.8859 15.7553C91.5084 15.2689 92.3256 15.2737 92.7108 15.7661L97.8729 22.3732C98.2575 22.866 98.0647 23.6598 97.4415 24.1466L38.7077 70.0319C38.0849 70.5186 37.2678 70.5138 36.8829 70.0211L31.7208 63.4141C31.336 62.9214 31.5289 62.1276 32.1516 61.641Z\"\n        fill=\"#FF4B4B\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M32.5034 65.07L94.1086 16.9414L96.6309 20.1699L35.0258 68.2984L32.5034 65.07Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M68.8338 83.9143L76.1556 78.1943C78.448 76.4033 78.8545 73.0931 77.0636 70.8006L74.7213 67.8027L54.9897 79.5043L57.3319 82.5022C60.1181 86.0681 65.2676 86.7004 68.8338 83.9143Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M87.3574 90.2512L94.7318 84.4859C95.1268 84.1766 95.6929 84.3236 95.8498 84.7764C96.6029 86.9505 95.8217 89.4689 93.8735 90.9921C91.9249 92.5149 89.2943 92.6644 87.3687 91.4073C86.9676 91.1452 86.962 90.56 87.3574 90.2512Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M100.23 80.1943L107.604 74.4286C108 74.1195 108.565 74.2667 108.723 74.7194C109.475 76.893 108.694 79.4114 106.746 80.9346C104.798 82.4579 102.167 82.6069 100.241 81.3498C99.8401 81.0884 99.8346 80.5031 100.23 80.1943Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        d=\"M98.6597 91.4492L106.034 85.6841C106.429 85.3744 106.995 85.5216 107.152 85.9743C107.905 88.1484 107.124 90.6668 105.176 92.19C103.227 93.7129 100.597 93.8624 98.671 92.6054C98.2699 92.3432 98.2643 91.758 98.6597 91.4492Z\"\n        fill=\"#89E219\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M78.514 58.902C80.9738 57.0514 84.4642 57.5402 86.3166 59.9941L87.2354 61.2111C87.2377 61.2142 87.24 61.2172 87.2424 61.2203C89.0845 63.6715 88.5891 67.1549 86.1361 69.0003C83.6764 70.8508 80.1857 70.3622 78.3335 67.9082L77.4148 66.6911C77.4125 66.6881 77.4102 66.685 77.4079 66.6819C75.5657 64.2307 76.0609 60.7475 78.514 58.902Z\"\n        fill=\"#F49000\"\n      />\n      <path\n        d=\"M88.2558 59.3135L88.5255 59.6702L83.1352 65.3697L76.1619 68.9717L75.8924 68.6147C74.2872 65.4099 75.2356 61.2725 78.1251 59.0987C81.3678 56.6592 85.613 56.8893 88.2558 59.3135Z\"\n        fill=\"#FFC200\"\n      />\n      <path\n        d=\"M81.3253 59.1262C81.9078 58.9484 82.525 59.2759 82.703 59.8583C82.8811 60.4408 82.5531 61.0574 81.97 61.2356C81.0627 61.5128 80.369 62.034 79.8517 62.827C79.5188 63.3373 78.835 63.4815 78.3244 63.149C77.8138 62.8166 77.6697 62.1334 78.0026 61.6231C78.8027 60.3965 79.9227 59.555 81.3253 59.1262Z\"\n        fill=\"#FFDE00\"\n      />\n    </svg>\n  );\n};\n\nexport const LockedLeagueSvg = () => {\n  return (\n    <svg width=\"53\" height=\"59\" viewBox=\"0 0 53 59\">\n      <title>Locked</title>\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g fillRule=\"nonzero\">\n          <path\n            d=\"M9.021 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v21.557C53 47.824 41.893 59 28.191 59H24.81C11.107 59 0 47.824 0 34.038V12.481c0-5.013 4.039-9.077 9.021-9.077z\"\n            fill=\"#E3E3E3\"\n          />\n          <path\n            d=\"M9.021 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v14.182c0 12.846-10.35 23.26-23.117 23.26h-6.766C10.35 49.923 0 39.51 0 26.663V12.481c0-5.013 4.039-9.077 9.021-9.077z\"\n            fill=\"#E5E5E5\"\n          />\n          <path\n            d=\"M9.021 5.673c-1.868 0-3.383 1.524-3.383 3.404v21.558c0 10.652 8.583 19.288 19.17 19.288h3.383c10.588 0 19.17-8.636 19.17-19.288V9.077c0-1.88-1.514-3.404-3.382-3.404H9.02zm0-5.673H43.98C48.96 0 53 4.064 53 9.077v21.558c0 13.785-11.107 24.961-24.809 24.961H24.81C11.107 55.596 0 44.42 0 30.635V9.077C0 4.064 4.039 0 9.021 0z\"\n            fill=\"#EFEFEF\"\n          />\n        </g>\n        <g transform=\"translate(18.014 15.177)\" fill=\"#CFCFCF\" opacity=\".8\">\n          <ellipse cx=\"8.618\" cy=\"8.002\" rx=\"8.348\" ry=\"7.998\" />\n          <path d=\"M4.967 11.71c2.016-3.863 5.285-3.864 7.3 0l3.013 5.771c2.016 3.863.116 6.995-4.235 6.995H6.19c-4.355 0-6.251-3.132-4.235-6.995l3.011-5.771z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport const BronzeLeagueSvg = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg width=\"53\" height=\"59\" viewBox=\"0 0 53 59\" {...props}>\n      <title>Bronze</title>\n      <g fill=\"none\">\n        <path\n          d=\"M9.021 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v21.557C53 47.824 41.893 59 28.191 59H24.81C11.107 59 0 47.824 0 34.038V12.481c0-5.013 4.039-9.077 9.021-9.077z\"\n          fill=\"#C88E57\"\n        />\n        <path\n          d=\"M9.021 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v14.182c0 12.846-10.35 23.26-23.117 23.26h-6.766C10.35 49.923 0 39.51 0 26.663V12.481c0-5.013 4.039-9.077 9.021-9.077z\"\n          fill=\"#CF9C6D\"\n        />\n        <path\n          d=\"M32.442 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v5.54L14.505 56.751A24.97 24.97 0 0 1 .073 35.972l32.37-32.568z\"\n          fill=\"#D09E70\"\n        />\n        <path\n          d=\"M32.442 3.404H43.98c4.98 0 9.02 4.064 9.02 9.076v5.54L18.916 52.313c-5.694-2.018-9.456-4.127-11.285-6.325-1.828-2.199-3.395-6.496-4.7-12.892L32.442 3.404z\"\n          fill=\"#D6AA82\"\n        />\n        <path\n          d=\"M9.021 5.673c-1.868 0-3.383 1.524-3.383 3.404v21.558c0 10.652 8.583 19.288 19.17 19.288h3.383c10.588 0 19.17-8.636 19.17-19.288V9.077c0-1.88-1.514-3.404-3.382-3.404H9.02zm0-5.673H43.98C48.96 0 53 4.064 53 9.077v21.558c0 13.785-11.107 24.961-24.809 24.961H24.81C11.107 55.596 0 44.42 0 30.635V9.077C0 4.064 4.039 0 9.021 0z\"\n          fill=\"#E5AE7C\"\n        />\n        <path\n          d=\"M5.638 30.373v.262c0 9.54 6.885 17.463 15.928 19.013l-4.635 4.664C8.598 51.506 2.235 44.37.483 35.56l5.155-5.187zm41.724-6.68V9.077c0-1.88-1.515-3.404-3.383-3.404H30.187L35.825 0h8.154C48.96 0 53 4.064 53 9.077v8.943l-5.638 5.673z\"\n          fill=\"#E8BA8F\"\n        />\n        <path\n          d=\"M25.223 16.742l3.282-3.282c2.996-2.996 7.942-2.908 11.047.197 3.105 3.105 3.193 8.05.197 11.047l-8.293 8.293a1.453 1.453 0 0 1-1.066.425l-4.227-.11a.298.298 0 0 0-.219.086.308.308 0 0 0 .008.436l1.82 1.82a.727.727 0 0 1 0 1.027l-1.467 1.467A3.2 3.2 0 0 1 23.38 39l-7.595-1.577-1.577-7.596a3.2 3.2 0 0 1 .853-2.924l6.486-6.486a.727.727 0 0 1 1.028 0l1.81 1.81a.308.308 0 0 0 .436.008.298.298 0 0 0 .087-.219l-.11-4.21c-.01-.398.143-.783.425-1.065z\"\n          fill=\"#B07032\"\n        />\n        <path\n          d=\"M32.414 20.95L13.363 40\"\n          stroke=\"#9D5D20\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const FirstPlaceSvg = () => {\n  return (\n    <svg width=\"41\" height=\"42\" viewBox=\"0 0 41 42\" fill=\"none\">\n      <path\n        d=\"M8.31177 18.4663H31.876V38.4086C31.876 39.844 30.4566 40.8481 29.1031 40.3701L20.0939 37.1888L11.0847 40.3701C9.73119 40.8481 8.31177 39.844 8.31177 38.4086V18.4663Z\"\n        fill=\"#FFC800\"\n      />\n      <circle\n        cx=\"20.0943\"\n        cy=\"20.0941\"\n        r=\"14.4004\"\n        transform=\"rotate(35.6401 20.0943 20.0941)\"\n        fill=\"#FFD900\"\n      />\n      <path\n        d=\"M11.7032 31.7972C18.1667 36.4314 27.1631 34.9486 31.7973 28.4851L8.39111 11.7031C3.75689 18.1666 5.23977 27.163 11.7032 31.7972Z\"\n        fill=\"#FEEA66\"\n      />\n      <path\n        d=\"M18.945 24.776C18.945 25.604 19.467 26.108 20.205 26.108C20.925 26.108 21.465 25.604 21.465 24.776V15.182C21.465 14.264 20.925 13.652 20.061 13.652C19.485 13.652 18.999 13.886 18.531 14.21L16.605 15.542C16.173 15.83 15.975 16.226 15.975 16.604C15.975 17.216 16.443 17.666 17.019 17.666C17.271 17.666 17.541 17.594 17.775 17.432L18.909 16.658H18.945V24.776Z\"\n        fill=\"#FF9600\"\n      />\n      <circle\n        cx=\"20.0943\"\n        cy=\"20.0941\"\n        r=\"12.9004\"\n        transform=\"rotate(35.6401 20.0943 20.0941)\"\n        stroke=\"#FFC800\"\n        strokeWidth=\"3\"\n      />\n    </svg>\n  );\n};\n\nexport const SecondPlaceSvg = () => {\n  return (\n    <svg width=\"41\" height=\"42\" viewBox=\"0 0 41 42\" fill=\"none\">\n      <path\n        d=\"M8.31201 18.4663H31.8763V38.4086C31.8763 39.844 30.4569 40.8481 29.1033 40.3701L20.0941 37.1888L11.085 40.3701C9.73144 40.8481 8.31201 39.844 8.31201 38.4086V18.4663Z\"\n        fill=\"#AAC1D4\"\n      />\n      <circle\n        cx=\"20.0943\"\n        cy=\"20.0941\"\n        r=\"14.4004\"\n        transform=\"rotate(35.6401 20.0943 20.0941)\"\n        fill=\"#C2D1DD\"\n      />\n      <path\n        d=\"M11.7032 31.7972C18.1667 36.4314 27.1631 34.9486 31.7973 28.4851L8.39111 11.7031C3.75689 18.1666 5.23977 27.163 11.7032 31.7972Z\"\n        fill=\"#D6E4EF\"\n      />\n      <path\n        d=\"M16.0073 24.92C16.0073 25.55 16.4573 26 17.1773 26H22.7933C23.5313 26 23.9453 25.568 23.9453 24.938C23.9453 24.29 23.5313 23.858 22.7933 23.858H19.3553V23.822L22.5773 20.024C23.3333 19.124 23.8193 18.224 23.8193 17.054C23.8193 15.074 22.3793 13.562 20.0573 13.562C17.8793 13.562 16.5113 14.786 16.2413 16.1C16.2233 16.208 16.2053 16.316 16.2053 16.406C16.2053 17.072 16.6913 17.522 17.3393 17.522C17.8433 17.522 18.2213 17.234 18.4733 16.712C18.7973 16.046 19.2473 15.686 19.9493 15.686C20.8133 15.686 21.2993 16.28 21.2993 17.09C21.2993 17.72 21.0473 18.224 20.5793 18.782L16.7633 23.354C16.2053 24.02 16.0073 24.398 16.0073 24.92Z\"\n        fill=\"#849FB5\"\n      />\n      <circle\n        cx=\"20.0946\"\n        cy=\"20.0941\"\n        r=\"12.9004\"\n        transform=\"rotate(35.6401 20.0946 20.0941)\"\n        stroke=\"#AAC1D4\"\n        strokeWidth=\"3\"\n      />\n    </svg>\n  );\n};\n\nexport const ThirdPlaceSvg = () => {\n  return (\n    <svg width=\"41\" height=\"42\" viewBox=\"0 0 41 42\" fill=\"none\">\n      <path\n        d=\"M8.31152 19.4663H31.8758V38.4086C31.8758 39.844 30.4564 40.8481 29.1029 40.3701L20.0937 37.1888L11.0845 40.3701C9.73095 40.8481 8.31152 39.844 8.31152 38.4086V19.4663Z\"\n        fill=\"#D7975D\"\n      />\n      <circle\n        cx=\"20.0941\"\n        cy=\"20.0941\"\n        r=\"14.4004\"\n        transform=\"rotate(35.6401 20.0941 20.0941)\"\n        fill=\"#E5AE7C\"\n      />\n      <path\n        d=\"M11.703 31.7972C18.1664 36.4314 27.1628 34.9486 31.7971 28.4851L8.39087 11.7031C3.75665 18.1666 5.23953 27.163 11.703 31.7972Z\"\n        fill=\"#F7BE8B\"\n      />\n      <path\n        d=\"M16.4038 24.326C16.9258 25.514 18.2218 26.198 19.9858 26.198C22.2898 26.198 23.9818 24.686 23.9818 22.454C23.9818 20.852 23.1358 19.862 22.3798 19.502V19.466C23.2618 18.89 23.7478 17.99 23.7478 16.946C23.7478 14.984 22.3618 13.562 19.9678 13.562C18.2038 13.562 16.9798 14.372 16.5298 15.398C16.4398 15.614 16.3858 15.83 16.3858 16.028C16.3858 16.676 16.8538 17.144 17.5018 17.144C17.9518 17.144 18.3838 16.892 18.6178 16.424C18.7978 16.046 19.1398 15.686 19.8598 15.686C20.6878 15.686 21.2278 16.262 21.2278 17.126C21.2278 18.062 20.6518 18.638 19.8418 18.638H19.7158C19.0678 18.638 18.6178 19.07 18.6178 19.7C18.6178 20.33 19.0678 20.762 19.7158 20.762H19.8418C20.7238 20.762 21.4618 21.41 21.4618 22.472C21.4618 23.408 20.8858 24.074 19.9498 24.074C19.3198 24.074 18.8518 23.786 18.5638 23.318C18.2758 22.85 17.8618 22.598 17.4118 22.598C16.7098 22.598 16.2778 23.084 16.2778 23.714C16.2778 23.912 16.3138 24.128 16.4038 24.326Z\"\n        fill=\"#CD7900\"\n      />\n      <circle\n        cx=\"20.0941\"\n        cy=\"20.0941\"\n        r=\"12.9004\"\n        transform=\"rotate(35.6401 20.0941 20.0941)\"\n        stroke=\"#D7975D\"\n        strokeWidth=\"3\"\n      />\n    </svg>\n  );\n};\n\nexport const EmptyMedalSvg = ({ size = 35 }: { size?: number }) => {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 19 23\" fill=\"none\">\n      <path\n        d=\"M1.95703 9.00208H16.7897V21.34C16.7897 22.3484 15.7925 23.0538 14.8417 22.718L9.37335 20.787L3.90498 22.718C2.95415 23.0538 1.95703 22.3484 1.95703 21.34V9.00208Z\"\n        fill=\"#AFAFAF\"\n      />\n      <path\n        d=\"M16.7398 14.679C13.8227 18.7474 8.15988 19.6808 4.09144 16.7638C0.022994 13.8468 -0.910409 8.18393 2.00662 4.11548C4.92365 0.0470419 10.5865 -0.886362 14.6549 2.03067C18.7234 4.9477 19.6568 10.6105 16.7398 14.679Z\"\n        fill=\"#E5E5E5\"\n      />\n      <path\n        d=\"M15.0457 9.39721C15.0457 12.5301 12.506 15.0699 9.37304 15.0699C6.24013 15.0699 3.7004 12.5301 3.7004 9.39721C3.7004 6.2643 6.24013 3.72457 9.37304 3.72457C12.506 3.72457 15.0457 6.2643 15.0457 9.39721Z\"\n        stroke=\"#AFAFAF\"\n        strokeWidth=\"1.83928\"\n      />\n      <path\n        d=\"M11.5377 6.47638C11.2524 6.19103 11.2524 5.72839 11.5377 5.44304L12.8351 4.14565C13.1205 3.8603 13.5831 3.8603 13.8685 4.14565L15.1659 5.44304C15.4512 5.72839 15.4512 6.19103 15.1659 6.47638L13.8685 7.77376C13.5831 8.05911 13.1205 8.05911 12.8351 7.77376L11.5377 6.47638Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const ProfileTimeJoinedSvg = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM6.85625 4.57202C6.85625 3.94084 7.36792 3.42917 7.99911 3.42917C8.63029 3.42917 9.14196 3.94084 9.14196 4.57202V8.10544L11.2714 10.2349C11.7177 10.6812 11.7177 11.4048 11.2714 11.8511C10.8251 12.2974 10.1015 12.2974 9.65514 11.8511L7.23078 9.42674C7.20168 9.39764 7.17447 9.36736 7.14917 9.33606C6.96706 9.13361 6.85625 8.86576 6.85625 8.57202V4.57202Z\"\n        fill=\"#CDCDCD\"\n      />\n    </svg>\n  );\n};\n\nexport const ProfileFriendsSvg = () => {\n  return (\n    <svg width=\"16\" height=\"13\" viewBox=\"0 0 16 13\" fill=\"none\">\n      <circle cx=\"3.42988\" cy=\"2.28584\" r=\"2.28584\" fill=\"#CDCDCD\" />\n      <path\n        d=\"M0 9.14361C0 7.24995 1.53511 5.71484 3.42876 5.71484C5.32242 5.71484 6.85752 7.24995 6.85752 9.14361V12.0449C6.85752 12.3362 6.62135 12.5724 6.33002 12.5724H0.527502C0.236171 12.5724 0 12.3362 0 12.0449V9.14361Z\"\n        fill=\"#CDCDCD\"\n      />\n      <circle cx=\"12.5705\" cy=\"2.28584\" r=\"2.28584\" fill=\"#CDCDCD\" />\n      <path\n        d=\"M9.14062 9.14361C9.14062 7.24995 10.6757 5.71484 12.5694 5.71484C14.463 5.71484 15.9981 7.24995 15.9981 9.14361V12.0449C15.9981 12.3362 15.762 12.5724 15.4706 12.5724H9.66813C9.3768 12.5724 9.14062 12.3362 9.14062 12.0449V9.14361Z\"\n        fill=\"#CDCDCD\"\n      />\n    </svg>\n  );\n};\n\nexport const EditPencilSvg = () => {\n  return (\n    <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.19599 2.4431L10.1997 1.43938C11.24 0.39911 12.9266 0.399112 13.9669 1.43939C15.0071 2.47966 15.0071 4.16628 13.9669 5.20655L12.9632 6.21026L9.19599 2.4431ZM8.0124 3.62669L1.44866 10.1904C0.808195 10.8309 0.471563 13.8719 1.02949 14.4299C1.58741 14.9878 4.5644 14.609 5.21582 13.9576L11.7796 7.39385L8.0124 3.62669Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport const SettingsGearSvg = () => {\n  return (\n    <svg width=\"20\" height=\"21\" viewBox=\"147 69 20 21\">\n      <path\n        d=\"M166.69 81.09v-2.68l-2.21-.3a7.69 7.69 0 0 0-1-2.62l1.27-1.68-1.89-1.89-1.58 1.2a7.71 7.71 0 0 0-2.77-1.22l-.23-1.9h-2.68l-.26 1.85a7.71 7.71 0 0 0-2.86 1.2L151 71.91l-1.9 1.89 1.18 1.56a7.69 7.69 0 0 0-1.06 2.77l-2 .28v2.68l2.16.3a7.71 7.71 0 0 0 1.13 2.48l-1.41 1.83 1.9 1.89 1.93-1.46a7.69 7.69 0 0 0 2.34.91l.34 2.46h2.68l.35-2.5a7.69 7.69 0 0 0 2.26-.93l2 1.52 1.89-1.89-1.47-1.95a7.71 7.71 0 0 0 1-2.34l2.37-.32zm-9.84 1.78a3.42 3.42 0 1 1 .01 0h-.01z\"\n        fill=\"currentColor\"\n        fillRule=\"nonzero\"\n      />\n    </svg>\n  );\n};\n\nexport const BoySvg = () => {\n  return (\n    <svg width=\"212px\" height=\"212px\" viewBox=\"0 0 212 212\" className=\"w-full\">\n      <defs>\n        <path\n          d=\"M29.5356692,0 L116.588168,0 C132.900267,-2.99648409e-15 146.123837,13.2235695 146.123837,29.5356692 L146.123837,114 L146.123837,114 L0,114 L0,29.5356692 C-1.99765606e-15,13.2235695 13.2235695,6.54919777e-15 29.5356692,0 Z\"\n          id=\"path-1\"\n        />\n        <path\n          d=\"M8.22639382,0 C12.7697057,-8.34592848e-16 16.4527876,3.68308197 16.4527876,8.22639382 L16.4527876,18.5588844 C16.4527876,23.1021962 12.7697057,26.7852782 8.22639382,26.7852782 C3.68308197,26.7852782 -4.91139174e-13,23.1021962 -4.89919212e-13,18.5588844 L-4.89919212e-13,8.22639382 C-4.90475607e-13,3.68308197 3.68308197,8.34592848e-16 8.22639382,0 Z\"\n          id=\"path-3\"\n        />\n      </defs>\n      <g id=\"boy\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g id=\"Path-6-Copy-4\" transform=\"translate(67.100000, 127.909091)\">\n          <g id=\"Oval-4\" transform=\"translate(10.171954, -4.839442)\" />\n        </g>\n        <g id=\"Group-13-Copy\" transform=\"translate(16.000000, 4.000000)\">\n          <path\n            d=\"M89.6097094,25.6493969 C102.273896,25.6493969 112.535612,35.9420134 112.535612,48.6285516 L112.535612,52.0760483 L66.6775991,52.0760483 L66.6775991,48.6285516 C66.6775991,35.9420134 76.9455229,25.6493969 89.6097094,25.6493969 Z\"\n            id=\"Path-Copy-32\"\n            fill=\"#FF9600\"\n          />\n          <path\n            d=\"M65.1262008,48.189776 C78.6448588,48.189776 89.6066054,37.4014842 89.6066054,24.094888 C89.6066054,10.7882918 78.6448588,0 65.1262008,0 C51.6013216,0 40.6395749,10.7882918 40.6395749,24.094888 C40.6395749,37.4014842 51.6013216,48.189776 65.1262008,48.189776 Z\"\n            id=\"Path-Copy-38\"\n            fill=\"#FF9600\"\n            fillRule=\"nonzero\"\n          />\n          <g id=\"Rectangle\" transform=\"translate(17.710569, 47.801149)\">\n            <mask id=\"mask-2\" fill=\"white\">\n              <use xlinkHref=\"#path-1\" />\n            </mask>\n            <use id=\"Mask\" fill=\"#FFC6B7\" xlinkHref=\"#path-1\" />\n            <rect\n              id=\"Rectangle-Copy-7\"\n              fill=\"#FF9600\"\n              opacity=\"0.331519717\"\n              mask=\"url(#mask-2)\"\n              x=\"-94.0477886\"\n              y=\"-39.2513498\"\n              width=\"114.256404\"\n              height=\"90.9387708\"\n              rx=\"17.4882252\"\n            />\n            <rect\n              id=\"Rectangle-Copy-11\"\n              fill=\"#FF9600\"\n              opacity=\"0.331519717\"\n              mask=\"url(#mask-2)\"\n              x=\"129.412866\"\n              y=\"-39.2513498\"\n              width=\"114.256404\"\n              height=\"90.9387708\"\n              rx=\"17.4882252\"\n            />\n          </g>\n          <circle\n            id=\"Oval\"\n            fill=\"#FFC6B7\"\n            cx=\"167.526364\"\n            cy=\"105.123665\"\n            r=\"13.0190121\"\n          />\n          <circle\n            id=\"Oval-Copy-3\"\n            fill=\"#FFC6B7\"\n            cx=\"13.2413555\"\n            cy=\"105.123665\"\n            r=\"13.0190121\"\n          />\n          <g id=\"Group-8-Copy-2\" transform=\"translate(50.743883, 62.568983)\">\n            <g id=\"Group-7\">\n              <path\n                d=\"M18.3237487,0 C28.4436756,-1.85900042e-15 36.6474974,8.20382172 36.6474974,18.3237487 L36.6474974,29.4695908 C36.6474974,39.5895178 28.4436756,47.7933395 18.3237487,47.7933395 C8.20382172,47.7933395 1.23933362e-15,39.5895178 0,29.4695908 L0,18.3237487 C2.31338006e-15,8.20382172 8.20382172,1.85900042e-15 18.3237487,0 Z\"\n                id=\"Rectangle-130-Copy-42\"\n                fill=\"#FFFFFF\"\n              />\n              <path\n                d=\"M23.3828556,10.8815623 C27.9261675,10.8815623 31.6092495,14.5646443 31.6092495,19.1079561 L31.6092495,29.4404467 C31.6092495,33.9837585 27.9261675,37.6668405 23.3828556,37.6668405 C18.8395438,37.6668405 15.1564618,33.9837585 15.1564618,29.4404467 L15.1564618,19.1079561 C15.1564618,14.5646443 18.8395438,10.8815623 23.3828556,10.8815623 Z\"\n                id=\"Combined-Shape\"\n                fill=\"#3D3D3D\"\n              />\n            </g>\n            <g\n              id=\"Group-7-Copy-3\"\n              transform=\"translate(61.283852, 24.000000) scale(-1, 1) translate(-61.283852, -24.000000) translate(42.783852, 0.000000)\"\n            >\n              <path\n                d=\"M18.3237487,0 C28.4436756,-1.85900042e-15 36.6474974,8.20382172 36.6474974,18.3237487 L36.6474974,29.4695908 C36.6474974,39.5895178 28.4436756,47.7933395 18.3237487,47.7933395 C8.20382172,47.7933395 1.23933362e-15,39.5895178 0,29.4695908 L0,18.3237487 C2.31338006e-15,8.20382172 8.20382172,1.85900042e-15 18.3237487,0 Z\"\n                id=\"Rectangle-130-Copy-42\"\n                fill=\"#FFFFFF\"\n              />\n              <g id=\"Oval-Copy-23\" transform=\"translate(13.990580, 10.881562)\">\n                <mask id=\"mask-4\" fill=\"white\">\n                  <use xlinkHref=\"#path-3\" />\n                </mask>\n                <use id=\"Mask\" fill=\"#3D3D3D\" xlinkHref=\"#path-3\" />\n              </g>\n            </g>\n          </g>\n          <path\n            d=\"M40.2509477,104.930971 C59.6443081,104.829521 76.4848212,109.492508 90.7724871,118.919931\"\n            id=\"Path-3\"\n            stroke=\"#FFC6B7\"\n            strokeWidth=\"8.16117174\"\n          />\n          <path\n            d=\"M74.277641,123.608267 C80.1880525,128.167477 86.098464,128.159207 92.0088755,123.583458\"\n            id=\"Path-4\"\n            stroke=\"#EE9583\"\n            strokeWidth=\"3.88627226\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            transform=\"translate(83.143258, 125.302470) scale(-1, 1) rotate(-21.000000) translate(-83.143258, -125.302470) \"\n          />\n          <circle\n            id=\"Oval-Copy-20\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(66.288972, 75.782309) scale(-1, 1) translate(-66.288972, -75.782309) \"\n            cx=\"66.2889719\"\n            cy=\"75.782309\"\n            r=\"6.60666284\"\n          />\n          <path\n            d=\"M90.1895462,118.142677 C94.1602547,118.142677 97.3791499,114.916595 97.3791499,110.937022 C97.3791499,106.957449 90.1895462,97.5454337 90.1895462,97.5454337 C90.1895462,97.5454337 82.9999426,106.957449 82.9999426,110.937022 C82.9999426,114.916595 86.2188378,118.142677 90.1895462,118.142677 Z\"\n            id=\"Oval-Copy-19\"\n            fill=\"#EE9583\"\n          />\n        </g>\n        <rect\n          id=\"Rectangle\"\n          fill=\"#2FE3FF\"\n          x=\"34\"\n          y=\"162\"\n          width=\"146\"\n          height=\"46\"\n          rx=\"6\"\n        />\n        <path\n          d=\"M30.990178,157.896381 L181.777542,157.896381 C189.933591,157.896381 196.545376,164.508166 196.545376,172.664216 L196.545376,173.830098 C196.545376,181.986148 189.933591,188.597932 181.777542,188.597932 L30.990178,188.597932 C22.8341282,188.597932 16.2223435,181.986148 16.2223435,173.830098 L16.2223435,172.664216 C16.2223435,164.508166 22.8341282,157.896381 30.990178,157.896381 Z\"\n          id=\"Rectangle\"\n          fill=\"#2FE3FF\"\n        />\n        <rect\n          id=\"Rectangle\"\n          fill=\"#FFFFFF\"\n          x=\"90.0615164\"\n          y=\"169.555198\"\n          width=\"8.16117174\"\n          height=\"31.8674325\"\n          rx=\"4.08058587\"\n        />\n        <rect\n          id=\"Rectangle-Copy-142\"\n          fill=\"#FFFFFF\"\n          x=\"114.933659\"\n          y=\"169.555198\"\n          width=\"8.16117174\"\n          height=\"31.8674325\"\n          rx=\"4.08058587\"\n        />\n        <path\n          d=\"M111.816431,84.4538044 C113.012011,85.6494462 114.663727,86.3889719 116.488168,86.3889719 C120.136927,86.3889719 123.094831,83.4310682 123.094831,79.782309 C123.094831,76.1335499 120.136927,73.1756462 116.488168,73.1756462 C112.576677,79.8973775 111.019431,83.6567635 111.816431,84.4538044 Z\"\n          id=\"Path\"\n          fill=\"#FFFFFF\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const WomanSvg = () => {\n  return (\n    <svg width=\"212px\" height=\"213px\" viewBox=\"0 0 212 213\" className=\"w-full\">\n      <defs>\n        <path\n          d=\"M139.2064,52.8675998 C149.142593,52.8675998 157.860764,58.082576 162.77316,65.9247771 L56.0452392,65.9247771 C60.9576357,58.082576 69.6758062,52.8675998 79.6119998,52.8675998 L139.2064,52.8675998 Z\"\n          id=\"path-1\"\n        />\n      </defs>\n      <g\n        id=\"happy\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n        transform=\"translate(0.000000, 0.000000)\"\n      >\n        <g id=\"Group\" transform=\"translate(16.000000, 7.000000)\">\n          <path\n            d=\"M52.2287998,0 L83.6999997,0 C112.545169,-5.2987717e-15 135.928799,23.3836302 135.928799,52.2287998 L135.928799,197.160002 L135.928799,197.160002 L52.2287998,197.160002 C23.3836302,197.160002 4.39663649e-13,173.776371 4.36131135e-13,144.931202 L4.36131135e-13,52.2287998 C4.3259862e-13,23.3836302 23.3836302,5.2987717e-15 52.2287998,0 Z\"\n            id=\"Rectangle-Copy-10\"\n            fill=\"#3D3D3D\"\n          />\n          <path\n            d=\"M128.563199,27.9000002 L141.285599,27.9000002 C162.734572,27.9000002 180.122399,45.2878278 180.122399,66.7368001 L180.122399,158.323202 C180.122399,179.772174 162.734572,197.160002 141.285599,197.160002 L128.563199,197.160002 C107.114227,197.160002 89.7263997,179.772174 89.7263997,158.323202 L89.7263997,66.7368001 C89.7263997,45.2878278 107.114227,27.9000002 128.563199,27.9000002 Z\"\n            id=\"Rectangle-Copy-9\"\n            fill=\"#3D3D3D\"\n          />\n          <path\n            d=\"M63.6119998,45.8675998 L123.2064,45.8675998 C138.553509,45.8675998 150.994799,58.3088902 150.994799,73.6559997 L150.994799,136.263599 C150.994799,151.610709 138.553509,164.051999 123.2064,164.051999 L63.6119998,164.051999 C48.2648903,164.051999 35.8235999,151.610709 35.8235999,136.263599 L35.8235999,73.6559997 C35.8235999,58.3088902 48.2648903,45.8675998 63.6119998,45.8675998 Z\"\n            id=\"Mask-Copy\"\n            fill=\"#A56644\"\n          />\n          <path\n            d=\"M90.0611996,112.158 L97.0919996,112.158 C100.420288,112.158 103.1184,114.856111 103.1184,118.1844 C103.1184,121.512688 100.420288,124.2108 97.0919996,124.2108 L90.0611996,124.2108 C86.7329108,124.2108 84.0347997,121.512688 84.0347997,118.1844 C84.0347997,114.856111 86.7329108,112.158 90.0611996,112.158 Z\"\n            id=\"Rectangle-Copy-24\"\n            fill=\"#87401A\"\n          />\n          <polygon\n            id=\"Triangle-Copy\"\n            fill=\"#87401A\"\n            points=\"93.4091996 105.462 101.1096 117.8496 85.7087997 117.8496\"\n          />\n          <path\n            d=\"M74.3757982,72.6515997 C83.0940539,72.6515997 90.1615965,79.7191424 90.1615965,88.4373981 L90.1615965,98.0394735 C90.1615965,106.757729 83.0940539,113.825272 74.3757982,113.825272 C65.6575424,113.825272 58.5899998,106.757729 58.5899998,98.0394735 L58.5899998,88.4373981 C58.5899998,79.7191424 65.6575424,72.6515997 74.3757982,72.6515997 Z\"\n            id=\"Rectangle-130-Copy-44\"\n            fill=\"#FFFFFF\"\n          />\n          <path\n            d=\"M78.3993881,82.0259997 C82.3134237,82.0259997 85.4863765,85.1989525 85.4863765,89.1129881 L85.4863765,98.014366 C85.4863765,101.928402 82.3134237,105.101354 78.3993881,105.101354 C74.4853525,105.101354 71.3123997,101.928402 71.3123997,98.014366 L71.3123997,89.1129881 C71.3123997,85.1989525 74.4853525,82.0259997 78.3993881,82.0259997 Z\"\n            id=\"Combined-Shape-Copy\"\n            fill=\"#3D3D3D\"\n          />\n          <path\n            d=\"M112.541906,72.6515997 C121.260162,72.6515997 128.327704,79.7191424 128.327704,88.4373981 L128.327704,98.0394735 C128.327704,106.757729 121.260162,113.825272 112.541906,113.825272 C103.82365,113.825272 96.7561075,106.757729 96.7561075,98.0394735 L96.7561075,88.4373981 C96.7561075,79.7191424 103.82365,72.6515997 112.541906,72.6515997 Z\"\n            id=\"Rectangle-130-Copy-45\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(112.541906, 93.238436) scale(-1, 1) translate(-112.541906, -93.238436) \"\n          />\n          <path\n            d=\"M109.522716,82.0259997 C113.436752,82.0259997 116.609704,85.1989525 116.609704,89.1129881 L116.609704,98.014366 C116.609704,101.928402 113.436752,105.101354 109.522716,105.101354 C105.60868,105.101354 102.435728,101.928402 102.435728,98.014366 L102.435728,89.1129881 C102.435728,85.1989525 105.60868,82.0259997 109.522716,82.0259997 Z\"\n            id=\"Mask-Copy-2\"\n            fill=\"#3D3D3D\"\n            transform=\"translate(109.522716, 93.563677) scale(-1, 1) translate(-109.522716, -93.563677) \"\n          />\n          <path\n            d=\"M98.5379948,88.4629695 C99.515256,89.2531525 100.759361,89.7263997 102.114,89.7263997 C105.257383,89.7263997 107.8056,87.1781835 107.8056,84.0347997 C107.8056,80.8914158 105.257383,78.3431997 102.114,78.3431997 C98.8697068,84.3941095 97.6777053,87.7673661 98.5379948,88.4629695 Z\"\n            id=\"Path\"\n            fill=\"#FFFFFF\"\n          />\n          <circle\n            id=\"Oval-Copy-21\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(71.982000, 83.365200) scale(-1, 1) translate(-71.982000, -83.365200) \"\n            cx=\"71.9819997\"\n            cy=\"83.3651997\"\n            r=\"5.69159998\"\n          />\n          <path\n            d=\"M87.4149443,140.16935 C78.8686943,140.035925 72.9538943,135.789893 69.6705444,127.44695\"\n            id=\"Path-Copy-193\"\n            stroke=\"#FFFFFF\"\n            strokeWidth=\"17.7604871\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            transform=\"translate(78.542744, 133.808150) rotate(-6.000000) translate(-78.542744, -133.808150) \"\n          />\n          <path\n            d=\"M82.3607997,115.8408 C66.9147781,109.385219 56.2011781,105.925619 50.2199998,105.462\"\n            id=\"Path-10-Copy\"\n            stroke=\"#A56644\"\n            strokeWidth=\"5.02199998\"\n          />\n        </g>\n        <mask id=\"mask-2\" fill=\"white\">\n          <use xlinkHref=\"#path-1\" />\n        </mask>\n        <path\n          d=\"M67.5591998,35.7927999 C78.098781,35.7927999 86.6427997,44.3368186 86.6427997,54.8763998 L86.6427997,71.2815997 C86.6427997,81.821181 78.098781,90.3651997 67.5591998,90.3651997 C57.0196186,90.3651997 48.4755999,81.821181 48.4755999,71.2815997 L48.4755999,54.8763998 C48.4755999,44.3368186 57.0196186,35.7927999 67.5591998,35.7927999 Z\"\n          id=\"Rectangle-Copy-23\"\n          fill=\"#3D3D3D\"\n        />\n        <path\n          d=\"M91.1999999,171 L127.559999,171 C131.53645,171 134.759999,174.22355 134.759999,178.2 L134.759999,204.160002 L134.759999,204.160002 L84,204.160002 L84,178.2 C84,174.22355 87.2235498,171 91.1999999,171 Z\"\n          id=\"Rectangle-Copy-4\"\n          fill=\"#FFB100\"\n        />\n      </g>\n    </svg>\n  );\n};\n", "export type Unit = {\n  unitNumber: number;\n  description: string;\n  backgroundColor: `bg-${string}`;\n  textColor: `text-${string}`;\n  borderColor: `border-${string}`;\n  tiles: Tile[];\n};\n\nexport type Tile =\n  | {\n    type: \"star\" | \"dumbbell\" | \"book\" | \"trophy\" | \"fast-forward\";\n    description: string;\n  }\n\nexport type TileType = Tile[\"type\"];\n\nexport const units: readonly Unit[] = [\n  {\n    unitNumber: 1,\n    description: \"\u05DC\u05DE\u05D3 \u05E2\u05DC \u05D0,\u05D1,\u05D2,\u05D3\",\n    backgroundColor: \"bg-lime-500\",\n    textColor: \"text-lime-500\",\n    borderColor: \"border-lime-700\",\n    tiles: [\n      {\n        type: \"star\",\n        description: \"\u05DE\u05E9\u05E4\u05D8 \u05E7\u05D0\u05E6'\u05D9 \u05D5\u05D7\u05D9\u05D5\u05D1\u05D9!\",\n      },\n      {\n        type: \"book\",\n        description: \"Good morning\",\n      },\n      {\n        type: \"star\",\n        description: \"Greet people\",\n      },\n      { type: \"book\", description: \"A date\" },\n      { type: \"trophy\", description: \"Unit 1 review\" },\n    ],\n  },\n  {\n    unitNumber: 2,\n    description: \"Get around in a city\",\n    backgroundColor: \"bg-[#ce82ff]\",\n    textColor: \"text-[#ce82ff]\",\n    borderColor: \"border-[#a568cc]\",\n    tiles: [\n      { type: \"fast-forward\", description: \"Get around in a city\" },\n      { type: \"dumbbell\", description: \"Personalized practice\" },\n      { type: \"book\", description: \"One thing\" },\n      { type: \"star\", description: \"Get around in a city\" },\n      { type: \"book\", description: \"A very big family\" },\n      { type: \"star\", description: \"Greet people\" },\n      { type: \"book\", description: \"The red jacket\" },\n      { type: \"dumbbell\", description: \"Personalized practice\" },\n      { type: \"trophy\", description: \"Unit 2 review\" },\n    ],\n  },\n  {\n    unitNumber: 3,\n    description: \"Order food and drink\",\n    backgroundColor: \"bg-[#00cd9c]\",\n    textColor: \"text-[#00cd9c]\",\n    borderColor: \"border-[#00a47d]\",\n    tiles: [\n      { type: \"fast-forward\", description: \"Order food and drink\" },\n      { type: \"book\", description: \"The passport\" },\n      { type: \"star\", description: \"Order food and drinks\" },\n      { type: \"book\", description: \"The honeymoon\" },\n      { type: \"star\", description: \"Get around in a city\" },\n      { type: \"dumbbell\", description: \"Personalized practice\" },\n      { type: \"book\", description: \"Doctor Eddy\" },\n      { type: \"trophy\", description: \"Unit 2 review\" },\n    ],\n  },\n];\n", "export default {'entry':{'module':'/build/entry.client-XXMNNQ72.js','imports':['/build/_shared/chunk-OZ6QX5MG.js','/build/_shared/chunk-TFAVYZDK.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-UPLW43KY.js','imports':['/build/_shared/chunk-QTKJ253X.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-CL2AQ6TQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/learn':{'id':'routes/learn','parentId':'root','path':'learn','index':undefined,'caseSensitive':undefined,'module':'/build/routes/learn-ZRJVTS5Z.js','imports':['/build/_shared/chunk-6UBMAJQY.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lesson-factory':{'id':'routes/lesson-factory','parentId':'root','path':'lesson-factory','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lesson-factory-BXAB3K56.js','imports':['/build/_shared/chunk-RM3PVU74.js','/build/_shared/chunk-OXIWLU4Q.js','/build/_shared/chunk-Q57CA2YT.js','/build/_shared/chunk-BHZX3OXX.js','/build/_shared/chunk-6UBMAJQY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lessons':{'id':'routes/lessons','parentId':'root','path':'lessons','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lessons-2GBPPAT6.js','imports':['/build/_shared/chunk-SYBVGEC3.js','/build/_shared/chunk-Q57CA2YT.js','/build/_shared/chunk-BHZX3OXX.js','/build/_shared/chunk-6UBMAJQY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lessons.$topicId':{'id':'routes/lessons.$topicId','parentId':'root','path':'lessons/:topicId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lessons.$topicId-WYJISKQI.js','imports':['/build/_shared/chunk-OXIWLU4Q.js','/build/_shared/chunk-SYBVGEC3.js','/build/_shared/chunk-BHZX3OXX.js','/build/_shared/chunk-6UBMAJQY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/lessons.$topicId.$lessonId':{'id':'routes/lessons.$topicId.$lessonId','parentId':'root','path':'lessons/:topicId/:lessonId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/lessons.$topicId.$lessonId-GOUNUJTF.js','imports':['/build/_shared/chunk-RM3PVU74.js','/build/_shared/chunk-SYBVGEC3.js','/build/_shared/chunk-BHZX3OXX.js','/build/_shared/chunk-6UBMAJQY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'5bfab877','hmr':undefined,'url':'/build/manifest-5BFAB877.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\user\\\\Downloads\\\\new-lomda-master (1)\\\\new-lomda-master\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\lessons.$topicId.$lessonId.tsx\";\nimport * as route2 from \"./routes\\\\lessons.$topicId.tsx\";\nimport * as route3 from \"./routes\\\\lesson-factory.tsx\";\nimport * as route4 from \"./routes\\\\lessons.tsx\";\nimport * as route5 from \"./routes\\\\index.tsx\";\nimport * as route6 from \"./routes\\\\learn.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_headers\":false,\"v2_meta\":false,\"v2_normalizeFormMethod\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/lessons.$topicId.$lessonId\": {\n      id: \"routes/lessons.$topicId.$lessonId\",\n      parentId: \"root\",\n      path: \"lessons/:topicId/:lessonId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/lessons.$topicId\": {\n      id: \"routes/lessons.$topicId\",\n      parentId: \"root\",\n      path: \"lessons/:topicId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/lesson-factory\": {\n      id: \"routes/lesson-factory\",\n      parentId: \"root\",\n      path: \"lesson-factory\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/lessons\": {\n      id: \"routes/lessons\",\n      parentId: \"root\",\n      path: \"lessons\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/learn\": {\n      id: \"routes/learn\",\n      parentId: \"root\",\n      path: \"learn\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_react", "import_react", "import_jsx_dev_runtime", "createCache", "rtlPlugin", "import_react", "import_react", "import_react", "import_material", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "columns", "SaveIcon", "CancelIcon", "EditIcon", "DeleteIcon", "Box", "ArrowBackIosNewIcon", "import_jsx_dev_runtime", "loader", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_material", "import_react", "import_material", "import_react", "import_jsx_dev_runtime", "import_material", "import_react", "import_jsx_dev_runtime", "NewTopic", "import_material", "React", "import_jsx_dev_runtime", "Paper", "SearchIcon", "CreateNewFolderOutlinedIcon", "TableContainer", "Table", "TableHead", "TableRow", "TableCell", "TableBody", "TablePagination", "import_CreateNewFolderOutlined", "import_Search", "import_material", "import_Paper", "import_Table", "import_TableCell", "import_TableContainer", "import_TableHead", "import_TablePagination", "import_TableRow", "React", "import_jsx_dev_runtime", "columns", "Paper", "SearchIcon", "CreateNewFolderOutlinedIcon", "TableContainer", "Table", "TableHead", "TableRow", "TableCell", "TablePagination", "import_jsx_dev_runtime", "loader", "Breadcrumbs", "selectedTopic", "NewTopic", "TopicList", "loader", "import_react", "import_jsx_dev_runtime", "loader", "TopicList", "import_material", "import_jsx_dev_runtime", "Particles", "import_react", "import_jsx_dev_runtime", "import_Box", "import_material", "import_jsx_dev_runtime", "unit", "Box", "_a"]
}
